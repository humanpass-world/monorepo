// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project c32b11589f2bc68b "humanpass", do not edit manually */
"use client";

// virtual:announcement-pill
/**
 * @typedef Locale
 * string
 */

/**
 * @typedef {{
 * children?: React.ReactNode
 * locale?: Locale
 * style?: React.CSSProperties
 * className?: string
 * id?: string
 * ref?: any
 * width?: any
 * height?: any
 * layoutId?: string
 * variant?: 'Icon' | 'No Icon' // Variant
 * title?: string // Title
 * link?: string // Link
 * color?: string // Color
 * icon?: undefined // Icon
}} Props

 */
import { Fragment as Fragment2 } from "react";
import { ContextProviders } from "unframer";

// /:https://framerusercontent.com/modules/c4dY3ResKXIb2IAMAxI8/EuXX69QYvCCMqw8scwu5/zAXYBSDPR.js
import { jsx as _jsx3, jsxs as _jsxs2 } from "react/jsx-runtime";
import {
	addFonts,
	addPropertyControls as addPropertyControls3,
	ComponentViewportProvider,
	ControlType as ControlType3,
	cx as cx2,
	getFonts,
	getFontsFromSharedStyle,
	Instance,
	Link,
	RichText,
	SmartComponentScopedContainer,
	useComponentViewport,
	useLocaleInfo,
	useVariantState,
	withCSS as withCSS2,
} from "unframer";
import { LayoutGroup, motion as motion2, MotionConfigContext } from "unframer";
import * as React2 from "react";
import { useRef as useRef2 } from "react";

// /:https://framerusercontent.com/modules/TS5bPiMUGtjrWMUlvKp9/AciUHRnNOn8057WveTGJ/TextShimmer_Prod.js
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useRef, useEffect } from "react";
import { addPropertyControls, ControlType } from "unframer";
function getUniqueClassName() {
	return "text-shimmer-" + Math.random().toString(36).substr(2, 9);
}
function TextShimmer({
	font,
	content,
	color,
	shimmer,
	size,
	speed,
	userSelect,
	rotation,
	delay,
	tag,
	direction,
}) {
	const classNameRef = useRef(getUniqueClassName());
	const Tag = tag;
	const backgroundSize = `200% 200%`;
	const speedFormatted = 11 - speed;
	const gradientFirst = 50 - (size * (50 - 20)) / 100;
	const gradientLast = 50 + (size * (80 - 50)) / 100;
	const animationDuration = speedFormatted + delay;
	const startPos = direction === "left" ? "-100%" : "200%";
	const endPos = direction === "left" ? "200%" : "-100%";
	const keyframes = `
        @keyframes shimmer-${classNameRef.current} {
            0%, ${(delay / animationDuration) * 100}% {
                background-position: ${startPos};
            }
            100% {
                background-position: ${endPos};
            }
        }
    `;
	useEffect(() => {
		const styleId = `shimmer-style-${classNameRef.current}`;
		let styleEl = document.getElementById(styleId);
		if (!styleEl) {
			styleEl = document.createElement("style");
			styleEl.id = styleId;
			document.head.appendChild(styleEl);
		}
		styleEl.innerHTML = `
            ${keyframes}
            .${classNameRef.current} {
                background: linear-gradient(
                    ${rotation}deg,
                    transparent 0%,
                    transparent ${gradientFirst}%,
                    ${shimmer} 50%,
                    transparent ${gradientLast}%,
                    transparent 100%
                );
                -webkit-background-size: ${backgroundSize};
                -moz-background-size: ${backgroundSize};
                background-size: ${backgroundSize};
                -webkit-background-clip: text;
                -moz-background-clip: text;
                background-clip: text;
                background-repeat: no-repeat;
                animation: shimmer-${classNameRef.current} ${animationDuration}s linear infinite;
            }
        `;
		return () => {
			if (styleEl && styleEl.parentNode) {
				styleEl.parentNode.removeChild(styleEl);
			}
		};
	}, [
		shimmer,
		rotation,
		gradientFirst,
		gradientLast,
		backgroundSize,
		animationDuration,
		delay,
		direction,
		keyframes,
	]);
	return (
		<div
			style={{
				userSelect: userSelect ? "auto" : "none",
				position: "relative",
			}}
		>
			<Tag
				style={{
					...font,
					color,
					marginBlockStart: "0px",
					marginBlockEnd: "0px",
				}}
			>
				{content}
			</Tag>
			<Tag
				aria-hidden={"true"}
				className={classNameRef.current}
				style={{
					...font,
					color: "transparent",
					position: "absolute",
					top: 0,
					left: 0,
					right: 0,
					bottom: 0,
					zIndex: 1,
					marginBlockStart: "0px",
					marginBlockEnd: "0px",
					pointerEvents: "none",
				}}
			>
				{content}
			</Tag>
		</div>
	);
}
TextShimmer.displayName = "Text Shimmer";
addPropertyControls(TextShimmer, {
	font: {
		type: ControlType.Font,
		title: "Font",
		defaultValue: "Inter",
		controls: "extended",
	},
	content: {
		type: ControlType.String,
		title: "Content",
		defaultValue: "Learn Framer With Framer University",
	},
	color: {
		type: ControlType.Color,
		title: "Color",
		defaultValue: "#FFFFFF1A",
	},
	shimmer: {
		type: ControlType.Color,
		title: "Shimmer",
		defaultValue: "#ffffff",
	},
	size: {
		type: ControlType.Number,
		title: "Size",
		defaultValue: 30,
		step: 1,
		max: 100,
		min: 1,
	},
	speed: {
		type: ControlType.Number,
		title: "Speed",
		defaultValue: 5,
		max: 10,
		min: 1,
		step: 1,
	},
	direction: {
		type: ControlType.Enum,
		title: "Direction",
		defaultValue: "left",
		options: ["left", "right"],
		optionTitles: ["Left", "Right"],
		displaySegmentedControl: true,
		segmentedControlDirection: "horizontal",
		optionIcons: ["direction-left", "direction-right"],
	},
	userSelect: {
		title: "User Select",
		type: ControlType.Boolean,
		defaultValue: false,
	},
	rotation: {
		type: ControlType.Number,
		title: "Rotation",
		defaultValue: 90,
		min: 45,
		unit: "\xB0",
		max: 135,
		step: 1,
	},
	delay: {
		type: ControlType.Number,
		title: "Delay",
		defaultValue: 0,
		min: 0,
		max: 10,
		step: 0.1,
	},
	tag: {
		type: ControlType.Enum,
		title: "Tag",
		defaultValue: "p",
		displaySegmentedControl: true,
		segmentedControlDirection: "horizontal",
		options: ["h1", "h2", "h3", "p"],
		optionTitles: ["H1", "H2", "H3", "P"],
		description:
			"More components at [Framer University](https://frameruni.link/cc).",
	},
});

// /:https://framerusercontent.com/modules/sLK202rvjeBCTeMNzrBt/FsDAzKhvlDoFO2IXEyPr/lI3TAAqCg.js
import { fontStore } from "unframer";
fontStore.loadFonts(["GF;Geist Mono-500", "GF;Geist Mono-700"]);
var fonts = [
	{
		explicitInter: true,
		fonts: [
			{
				family: "Geist Mono",
				source: "google",
				style: "normal",
				url: "https://fonts.gstatic.com/s/geistmono/v3/or3yQ6H-1_WfwkMZI_qYPLs1a-t7PU0AbeEPKJ5W7ihaO_CS.woff2",
				weight: "500",
			},
			{
				family: "Geist Mono",
				source: "google",
				style: "normal",
				url: "https://fonts.gstatic.com/s/geistmono/v3/or3yQ6H-1_WfwkMZI_qYPLs1a-t7PU0AbeHaL55W7ihaO_CS.woff2",
				weight: "700",
			},
		],
	},
];
var css = [
	'.framer-2R0Ln .framer-styles-preset-1klae7r:not(.rich-text-wrapper), .framer-2R0Ln .framer-styles-preset-1klae7r.rich-text-wrapper p { --framer-font-family: "Geist Mono", monospace; --framer-font-family-bold: "Geist Mono", monospace; --framer-font-open-type-features: normal; --framer-font-size: 12px; --framer-font-style: normal; --framer-font-style-bold: normal; --framer-font-variation-axes: normal; --framer-font-weight: 500; --framer-font-weight-bold: 700; --framer-letter-spacing: 0.02em; --framer-line-height: 1.6em; --framer-paragraph-spacing: 20px; --framer-text-alignment: left; --framer-text-color: var(--token-4fef9130-aa55-4351-8ed5-cfba481137a7, #ffffff); --framer-text-decoration: none; --framer-text-stroke-color: initial; --framer-text-stroke-width: initial; --framer-text-transform: uppercase; }',
];
var className = "framer-2R0Ln";

// /:https://framerusercontent.com/modules/5qAZkte8nl5mE7CDpF3l/2NeoFPNVKYZb7Uzh2PZW/IxjMyPrd0.js
import { jsx as _jsx2 } from "react/jsx-runtime";
import {
	addPropertyControls as addPropertyControls2,
	ControlType as ControlType2,
	cx,
	motion,
	withCSS,
} from "unframer";
import * as React from "react";
import { forwardRef as forwardRef2 } from "react";
var mask = `url('data:image/svg+xml,<svg display="block" role="presentation" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><g d="M 0 8 L 7.784 0 M 1.773 0 L 8 0 L 8 0 L 8 6.4" fill="transparent" height="8px" id="AbN5q1zBQ" transform="translate(8 8)" width="8px"><path d="M 0 8 L 7.784 0" fill="transparent" height="8px" id="rTJ5NscyQ" stroke-dasharray="0" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" stroke="var(--13bnw74, rgb(255, 255, 255))" transform="translate(0 0)" width="7.783783656672952px"/><path d="M 0 0 L 6.227 0 L 6.227 0 L 6.227 6.4" fill="transparent" height="6.400000000000025px" id="vFVsNoODJ" stroke-dasharray="0" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" stroke="var(--13bnw74, rgb(255, 255, 255))" transform="translate(1.773 0)" width="6.227026909961717px"/></g></svg>') alpha no-repeat center / auto var(--framer-icon-mask-mode, add), var(--framer-icon-mask, none)`;
var SVG = /* @__PURE__ */ forwardRef2((props, ref) => {
	const { animated, layoutId, children, ...rest } = props;
	return animated ? (
		<motion.div {...rest} layoutId={layoutId} ref={ref} />
	) : (
		<div {...rest} ref={ref} />
	);
});
var getProps = ({ color, fill, height, id, width, ...props }) => {
	return {
		...props,
		HN7TZix3o: color ?? props.HN7TZix3o ?? "rgb(255, 255, 255)",
		judN_LhGq: fill ?? props.judN_LhGq ?? "rgb(255, 255, 255)",
	};
};
var Component = /* @__PURE__ */ React.forwardRef(function (props, ref) {
	const {
		style,
		className: className2,
		layoutId,
		variant,
		HN7TZix3o,
		judN_LhGq,
		...restProps
	} = getProps(props);
	return (
		<SVG
			{...restProps}
			className={cx("framer-cQmFY", className2)}
			layoutId={layoutId}
			ref={ref}
			style={{
				"--13bnw74": HN7TZix3o,
				...style,
			}}
		/>
	);
});
var css2 = [
	`.framer-cQmFY { -webkit-mask: ${mask}; aspect-ratio: 1; background-color: var(--13bnw74); mask: ${mask}; width: 24px; }`,
];
var Icon = withCSS(Component, css2, "framer-cQmFY");
Icon.displayName = "Arrow Top Right (Small)";
var stdin_default = Icon;
addPropertyControls2(Icon, {
	HN7TZix3o: {
		defaultValue: "rgb(255, 255, 255)",
		hidden: false,
		title: "Color",
		type: ControlType2.Color,
	},
	judN_LhGq: {
		defaultValue: "rgb(255, 255, 255)",
		hidden: true,
		title: "Fill",
		type: ControlType2.Color,
	},
});

// /:https://framerusercontent.com/modules/c4dY3ResKXIb2IAMAxI8/EuXX69QYvCCMqw8scwu5/zAXYBSDPR.js
var TextShimmerFonts = getFonts(TextShimmer);
var cycleOrder = ["k86ji4391", "qX9SHwP6z"];
var serializationHash = "framer-p2cQB";
var variantClassNames = {
	k86ji4391: "framer-v-1lqxrhr",
	qX9SHwP6z: "framer-v-ppfegf",
};
function addPropertyOverrides(overrides, ...variants) {
	const nextOverrides = {};
	variants?.forEach(
		(variant) => variant && Object.assign(nextOverrides, overrides[variant]),
	);
	return nextOverrides;
}
var transition1 = {
	bounce: 0.2,
	delay: 0,
	duration: 0.4,
	type: "spring",
};
var transformTemplate1 = (_, t) => `translateY(-50%) ${t}`;
var Transition = ({ value, children }) => {
	const config = React2.useContext(MotionConfigContext);
	const transition = value ?? config.transition;
	const contextValue = React2.useMemo(
		() => ({
			...config,
			transition,
		}),
		[JSON.stringify(transition)],
	);
	return (
		<MotionConfigContext.Provider value={contextValue}>
			{children}
		</MotionConfigContext.Provider>
	);
};
var Variants = motion2.create(React2.Fragment);
var humanReadableVariantMap = {
	"No Icon": "qX9SHwP6z",
	Icon: "k86ji4391",
};
var getProps2 = ({ color, height, icon, id, link, title, width, ...props }) => {
	return {
		...props,
		GeEQ7Yy4N: link ?? props.GeEQ7Yy4N,
		I13doUJFU: title ?? props.I13doUJFU ?? "NEW: 2025 OCTOBER UPDATE",
		q_O88xuJm: icon ?? props.q_O88xuJm ?? stdin_default,
		variant:
			humanReadableVariantMap[props.variant] ?? props.variant ?? "k86ji4391",
		ZEv_Y8H41:
			color ??
			props.ZEv_Y8H41 ??
			"var(--token-19e7a84f-9c9f-4761-ac3b-54ec81f5f8e0, rgb(0, 230, 197))",
	};
};
var createLayoutDependency = (props, variants) => {
	if (props.layoutDependency)
		return variants.join("-") + props.layoutDependency;
	return variants.join("-");
};
var Component2 = /* @__PURE__ */ React2.forwardRef(function (props, ref) {
	const fallbackRef = useRef2(null);
	const refBinding = ref ?? fallbackRef;
	const defaultLayoutId = React2.useId();
	const { activeLocale, setLocale } = useLocaleInfo();
	const componentViewport = useComponentViewport();
	const {
		style,
		className: className2,
		layoutId,
		variant,
		I13doUJFU,
		GeEQ7Yy4N,
		ZEv_Y8H41,
		q_O88xuJm,
		...restProps
	} = getProps2(props);
	const {
		baseVariant,
		classNames,
		clearLoadingGesture,
		gestureHandlers,
		gestureVariant,
		isLoading,
		setGestureState,
		setVariant,
		variants,
	} = useVariantState({
		cycleOrder,
		defaultVariant: "k86ji4391",
		ref: refBinding,
		variant,
		variantClassNames,
	});
	const layoutDependency = createLayoutDependency(props, variants);
	const sharedStyleClassNames = [className];
	const scopingClassNames = cx2(serializationHash, ...sharedStyleClassNames);
	const isDisplayed = () => {
		if (baseVariant === "qX9SHwP6z") return false;
		return true;
	};
	return (
		<LayoutGroup id={layoutId ?? defaultLayoutId}>
			<Variants animate={variants} initial={false}>
				<Transition value={transition1}>
					<Link
						href={GeEQ7Yy4N}
						motionChild={true}
						nodeId={"k86ji4391"}
						scopeId={"zAXYBSDPR"}
					>
						<motion2.a
							{...restProps}
							{...gestureHandlers}
							className={`${cx2(scopingClassNames, "framer-1lqxrhr", className2, classNames)} framer-xno0ue`}
							data-framer-name={"Icon"}
							layoutDependency={layoutDependency}
							layoutId={"k86ji4391"}
							ref={refBinding}
							style={{
								backdropFilter: "blur(4px)",
								borderBottomLeftRadius: 50,
								borderBottomRightRadius: 50,
								borderTopLeftRadius: 50,
								borderTopRightRadius: 50,
								WebkitBackdropFilter: "blur(4px)",
								...style,
							}}
							{...addPropertyOverrides(
								{
									qX9SHwP6z: {
										"data-framer-name": "No Icon",
									},
								},
								baseVariant,
								gestureVariant,
							)}
						>
							<RichText
								__fromCanvasComponent={true}
								className={"framer-1wan83m"}
								data-framer-name={"Helper"}
								data-nosnippet={true}
								fonts={["Inter"]}
								layoutDependency={layoutDependency}
								layoutId={"auwop4k2H"}
								style={{
									"--extracted-r6o4lv":
										"var(--variable-reference-ZEv_Y8H41-zAXYBSDPR)",
									"--framer-link-text-color": "rgb(0, 153, 255)",
									"--framer-link-text-decoration": "underline",
									"--variable-reference-ZEv_Y8H41-zAXYBSDPR": ZEv_Y8H41,
									opacity: 0,
								}}
								text={I13doUJFU}
								verticalAlignment={"top"}
								withExternalLayout={true}
							>
								<React2.Fragment>
									<motion2.p
										className={"framer-styles-preset-1klae7r"}
										data-styles-preset={"lI3TAAqCg"}
										style={{
											"--framer-text-color":
												"var(--extracted-r6o4lv, var(--variable-reference-ZEv_Y8H41-zAXYBSDPR))",
										}}
									>
										{"NEW: 2025 OCTOBER UPDATE"}
									</motion2.p>
								</React2.Fragment>
							</RichText>
							<ComponentViewportProvider>
								<SmartComponentScopedContainer
									className={"framer-wzrwt6-container"}
									isAuthoredByUser={true}
									isModuleExternal={true}
									layoutDependency={layoutDependency}
									layoutId={"gi9Pv3SCk-container"}
									nodeId={"gi9Pv3SCk"}
									rendersWithMotion={true}
									scopeId={"zAXYBSDPR"}
									transformTemplate={transformTemplate1}
								>
									<TextShimmer
										color={ZEv_Y8H41}
										content={I13doUJFU}
										delay={2}
										direction={"right"}
										font={{
											fontFamily: '"Geist Mono", monospace',
											fontSize: "12px",
											fontStyle: "normal",
											fontWeight: 500,
											letterSpacing: "0.02em",
											lineHeight: "1.6em",
											textAlign: "left",
										}}
										height={"100%"}
										id={"gi9Pv3SCk"}
										layoutId={"gi9Pv3SCk"}
										rotation={100}
										shimmer={
											"var(--token-54d5892b-0224-424e-b224-359f05491e1f, rgba(0, 0, 0, 0.75))"
										}
										size={30}
										speed={10}
										style={{
											width: "100%",
										}}
										tag={"p"}
										userSelect={false}
										width={"100%"}
										{...addPropertyOverrides(
											{
												qX9SHwP6z: {
													font: {
														fontFamily: '"Geist Mono", monospace',
														fontSize: "12px",
														fontStyle: "normal",
														fontWeight: 500,
														letterSpacing: "0.02em",
														lineHeight: "1.6em",
														textAlign: "center",
													},
												},
											},
											baseVariant,
											gestureVariant,
										)}
									/>
								</SmartComponentScopedContainer>
							</ComponentViewportProvider>
							<motion2.div
								className={"framer-1ljihip"}
								data-framer-name={"BG"}
								layoutDependency={layoutDependency}
								layoutId={"UCVVuPaRA"}
								style={{
									backgroundColor: ZEv_Y8H41,
									borderBottomLeftRadius: 100,
									borderBottomRightRadius: 100,
									borderTopLeftRadius: 100,
									borderTopRightRadius: 100,
									opacity: 0.1,
								}}
							/>
							{isDisplayed() && (
								<motion2.div
									className={"framer-1dy3sdo"}
									data-framer-name={"Icon"}
									layoutDependency={layoutDependency}
									layoutId={"gIj3CTmgM"}
									style={{
										backgroundColor: ZEv_Y8H41,
										borderBottomLeftRadius: 100,
										borderBottomRightRadius: 100,
										borderTopLeftRadius: 100,
										borderTopRightRadius: 100,
									}}
								>
									<Instance
										animated={true}
										className={"framer-dqmk0r"}
										Component={q_O88xuJm}
										data-framer-name={"Arrow"}
										layoutDependency={layoutDependency}
										layoutId={"JY7CW3cLh"}
										style={{
											"--13bnw74":
												"var(--token-bb3f9735-47c4-4ac2-b002-c5446021aee6, rgb(0, 0, 0))",
										}}
									/>
								</motion2.div>
							)}
						</motion2.a>
					</Link>
				</Transition>
			</Variants>
		</LayoutGroup>
	);
});
var css3 = [
	"@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
	".framer-p2cQB.framer-xno0ue, .framer-p2cQB .framer-xno0ue { display: block; }",
	".framer-p2cQB.framer-1lqxrhr { align-content: center; align-items: center; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 12px; height: 26px; justify-content: center; overflow: visible; padding: 8px 5px 8px 10px; position: relative; text-decoration: none; width: min-content; }",
	".framer-p2cQB .framer-1wan83m { flex: none; height: auto; position: relative; white-space: pre; width: auto; }",
	".framer-p2cQB .framer-wzrwt6-container { flex: none; height: auto; left: 10px; position: absolute; right: 27px; top: 50%; z-index: 1; }",
	".framer-p2cQB .framer-1ljihip { bottom: 0px; flex: none; left: 0px; overflow: hidden; pointer-events: none; position: absolute; right: 0px; top: 0px; will-change: var(--framer-will-change-override, transform); z-index: 0; }",
	".framer-p2cQB .framer-1dy3sdo { align-content: center; align-items: center; aspect-ratio: 1 / 1; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: var(--framer-aspect-ratio-supported, 16px); justify-content: center; overflow: hidden; padding: 0px; position: relative; width: 16px; will-change: var(--framer-will-change-override, transform); z-index: 1; }",
	".framer-p2cQB .framer-dqmk0r { flex: none; height: var(--framer-aspect-ratio-supported, 16px); position: relative; width: 16px; }",
	".framer-p2cQB.framer-v-ppfegf.framer-1lqxrhr { padding: 8px 10px 8px 10px; }",
	".framer-p2cQB.framer-v-ppfegf .framer-wzrwt6-container { left: 0px; right: 0px; }",
	...css,
];
var FramerzAXYBSDPR = withCSS2(Component2, css3, "framer-p2cQB");
var stdin_default2 = FramerzAXYBSDPR;
FramerzAXYBSDPR.displayName = "Announcement Pill";
FramerzAXYBSDPR.defaultProps = {
	height: 26,
	width: 221.5,
};
addPropertyControls3(FramerzAXYBSDPR, {
	variant: {
		options: ["k86ji4391", "qX9SHwP6z"],
		optionTitles: ["Icon", "No Icon"],
		title: "Variant",
		type: ControlType3.Enum,
	},
	I13doUJFU: {
		defaultValue: "NEW: 2025 OCTOBER UPDATE",
		displayTextArea: false,
		title: "Title",
		type: ControlType3.String,
	},
	GeEQ7Yy4N: {
		title: "Link",
		type: ControlType3.Link,
	},
	ZEv_Y8H41: {
		defaultValue:
			'var(--token-19e7a84f-9c9f-4761-ac3b-54ec81f5f8e0, rgb(0, 230, 197)) /* {"name":"Accent"} */',
		title: "Color",
		type: ControlType3.Color,
	},
	q_O88xuJm: {
		defaultValue: {
			identifier: "local-module:vector/IxjMyPrd0:default",
			moduleId: "5qAZkte8nl5mE7CDpF3l",
		},
		setModuleId: "axJmc4ybND5Pp9a4GXBM",
		title: "Icon",
		type: ControlType3.VectorSetItem,
	},
});
addFonts(
	FramerzAXYBSDPR,
	[
		{
			explicitInter: true,
			fonts: [
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F",
					url: "https://framerusercontent.com/assets/5vvr9Vy74if2I6bQbJvbw7SY1pQ.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116",
					url: "https://framerusercontent.com/assets/EOr0mi4hNtlgWNn9if640EZzXCo.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+1F00-1FFF",
					url: "https://framerusercontent.com/assets/Y9k9QrlZAqio88Klkmbd8VoMQc.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+0370-03FF",
					url: "https://framerusercontent.com/assets/OYrD2tBIBPvoJXiIHnLoOXnY9M.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF",
					url: "https://framerusercontent.com/assets/JeYwfuaPfZHQhEG8U5gtPDZ7WQ.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2070, U+2074-207E, U+2080-208E, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD",
					url: "https://framerusercontent.com/assets/GrgcKwrN6d3Uz8EwcLHZxwEfC4.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB",
					url: "https://framerusercontent.com/assets/b6Y37FthZeALduNqHicBT6FutY.woff2",
					weight: "400",
				},
				{
					family: "Geist Mono",
					source: "google",
					style: "normal",
					url: "https://fonts.gstatic.com/s/geistmono/v4/or3yQ6H-1_WfwkMZI_qYPLs1a-t7PU0AbeEPKJ5W7ihaO_CS.woff2",
					weight: "500",
				},
			],
		},
		...TextShimmerFonts,
		...getFontsFromSharedStyle(fonts),
	],
	{
		supportsExplicitInterCodegen: true,
	},
);

// virtual:announcement-pill
import { WithFramerBreakpoints } from "unframer";

// virtual:__routes
var routes = {
	Agq1L2jDe: {
		path: "/lib/careers/:slug",
	},
	DEi7PWhxw: {
		path: "/done/coming-soon",
	},
	J_r8CT7G7: {
		path: "/lib/about",
	},
	MiKvYzstd: {
		path: "/disconnect",
	},
	Mxb74mbpa: {
		path: "/verify-social",
	},
	OegBE_J9e: {
		path: "/lib/home",
	},
	SOf0RbDE_: {
		path: "/lib/blog",
	},
	TQDjkQC2A: {
		path: "/lib/contact",
	},
	UVAM5_4oX: {
		path: "/verify",
	},
	XanNBrFME: {
		path: "/kyc",
	},
	YBTUYW5mq: {
		path: "/lib/pricing",
	},
	a5CCfdDiy: {
		path: "/lib/updates/:slug",
	},
	augiA20Il: {
		path: "/",
	},
	cpP7I9WGp: {
		path: "/done/404",
	},
	e9YIc4Uv5: {
		path: "/lib/waitlist",
	},
	inNalAASs: {
		path: "/lib/blog/:slug",
	},
	ixIXvnG3U: {
		path: "/lib/legal/:slug",
	},
	nhNLVf3qq: {
		path: "/connections",
	},
	rX7FOhQc0: {
		path: "/lib/updates",
	},
	so5jTiDIE: {
		path: "/lib/careers",
	},
};

// virtual:announcement-pill
import { jsx } from "react/jsx-runtime";
var locales = [];
var defaultResponsiveVariants = {
	base: "k86ji4391",
};
/** @type {function(Props): any} */
function ComponentWithRoot({ locale, ...rest }) {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"c32b11589f2bc68bdb1b6d8b6f1517c87e280d7db56dec1009246311f93861da"
			}
			locale={locale}
			locales={locales}
		>
			{jsx(stdin_default2, {
				...rest,
			})}
		</ContextProviders>
	);
}
/**
 * @type {import("unframer").UnframerBreakpoint}
 * Represents a responsive breakpoint for unframer.
 */

/**
 * @typedef VariantsMap
 * Partial record of UnframerBreakpoint to Props.variant, with a mandatory 'base' key.
 * { [key in UnframerBreakpoint]?: Props['variant'] } & { base: Props['variant'] }
 */

/**
 * Renders AnnouncementPillFramerComponent for all breakpoints with a variants map. Variant prop is inferred per breakpoint.
 * @function
 * @param {Omit<Props, 'variant'> & {variants?: VariantsMap}} props
 * @returns {any}
 */
ComponentWithRoot.Responsive = ({ locale = "", ...rest }) => {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"c32b11589f2bc68bdb1b6d8b6f1517c87e280d7db56dec1009246311f93861da"
			}
			locale={locale}
			locales={locales}
		>
			<WithFramerBreakpoints
				Component={stdin_default2}
				variants={defaultResponsiveVariants}
				{...rest}
			/>
		</ContextProviders>
	);
};
Object.assign(ComponentWithRoot, stdin_default2);
var announcement_pill_default = ComponentWithRoot;
export { announcement_pill_default as default };
