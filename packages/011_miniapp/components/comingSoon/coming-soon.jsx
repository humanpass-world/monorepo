// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project c32b11589f2bc68b "humanpass", do not edit manually */
"use client";
import { useNavStore } from "../../src/store";
/**
 * @typedef Locale
 * string
 */

/**
 * @typedef {{
 * children?: React.ReactNode
 * locale?: Locale
 * style?: React.CSSProperties
 * className?: string
 * id?: string
 * ref?: any
 * width?: any
 * height?: any
 * layoutId?: string
 * variant?: 'Desktop' | 'Phone' // Variant
}} Props

 */
var __defProp = Object.defineProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, {
      get: all[name],
      enumerable: true,
    });
};

// virtual:coming-soon
import { ContextProviders } from "unframer";

// /:https://framerusercontent.com/modules/q4upgwrDKy67BbxZ1Wxz/8Ou0PkHbNXD7KzgjaDtO/VRXHGV2hp.js
import * as React5 from "react";
import { useRef as useRef7 } from "react";
import { jsx as _jsx9 } from "react/jsx-runtime";
import {
  addFonts as addFonts5,
  addPropertyControls as addPropertyControls8,
  ComponentViewportProvider as ComponentViewportProvider5,
  ControlType as ControlType8,
  cx as cx5,
  getFonts as getFonts5,
  getFontsFromSharedStyle,
  LayoutGroup as LayoutGroup5,
  motion as motion6,
  MotionConfigContext as MotionConfigContext5,
  RichText,
  SmartComponentScopedContainer as SmartComponentScopedContainer5,
  useComponentViewport as useComponentViewport5,
  useLocaleInfo as useLocaleInfo5,
  useVariantState as useVariantState5,
  withCodeBoundaryForOverrides,
  withCSS as withCSS5,
  withFX,
  withMappedReactProps,
  withOptimizedAppearEffect,
} from "unframer";

// /:https://framerusercontent.com/modules/uPkD7RNUO1vmmtMstX6i/UuMuKV94f0TLVC5yiYVK/Dither_Archive.js
import { useEffect, useMemo, useRef } from "react";
import {
  addPropertyControls,
  ControlType,
  RenderTarget,
  useInView,
} from "unframer";
addPropertyControls(Dither, {
  image: {
    type: ControlType.ResponsiveImage,
  },
  algorithm: {
    type: ControlType.Enum,
    title: "Algorithm",
    options: ["floyd-steinberg", "ordered", "random", "atkinson"],
    optionTitles: ["Floyd-Steinberg", "Ordered (Bayer)", "Random", "Atkinson"],
    defaultValue: "floyd-steinberg",
  },
  threshold: {
    type: ControlType.Number,
    title: "Threshold",
    defaultValue: 128,
    min: 0,
    max: 255,
    step: 1,
  },
  brightness: {
    type: ControlType.Number,
    title: "Brightness",
    defaultValue: 0,
    min: -100,
    max: 100,
    step: 1,
  },
  midtones: {
    type: ControlType.Number,
    title: "Midtones",
    defaultValue: 50,
    min: 0,
    max: 100,
    step: 1,
  },
  pixelSize: {
    type: ControlType.Number,
    title: "Pixel Size",
    defaultValue: 1,
    min: 1,
    max: 100,
    step: 1,
  },
  glow: {
    type: ControlType.Number,
    title: "Glow",
    defaultValue: 0,
    min: 0,
    max: 50,
    step: 1,
  },
  backgroundColor: {
    type: ControlType.Color,
    title: "Background",
    defaultValue: "#000000",
  },
  dotColor: {
    type: ControlType.Color,
    title: "Pixel Color",
    defaultValue: "#FFFFFF",
  },
  animation: {
    type: ControlType.Object,
    icon: "effect",
    title: "Animation",
    controls: {
      enabled: {
        type: ControlType.Boolean,
        title: "Enabled",
        defaultValue: false,
      },
      canvasPreview: {
        type: ControlType.Boolean,
        title: "Preview",
        defaultValue: true,
        hidden: (props) => !props.enabled,
      },
      interval: {
        type: ControlType.Number,
        title: "Interval",
        defaultValue: 0.1,
        min: 0.01,
        max: 5,
        step: 0.01,
        unit: "s",
        displayStepper: true,
        hidden: (props) => !props.enabled,
      },
      intensity: {
        type: ControlType.Number,
        title: "Intensity",
        defaultValue: 10,
        min: 0,
        max: 100,
        hidden: (props) => !props.enabled,
      },
    },
  },
  radius: {
    // @ts-expect-error - BorderRadius is not in this NPM version
    type: ControlType.BorderRadius,
    defaultValue: "0px",
    title: "Radius",
  },
  enabled: {
    type: ControlType.Boolean,
    title: "Enabled",
    defaultValue: true,
  },
});
Dither.defaultProps = {
  algorithm: "floyd-steinberg",
  threshold: 128,
  pixelSize: 1,
  brightness: 0,
  glow: 0,
  midtones: 50,
  radius: 0,
  backgroundColor: "#000000",
  dotColor: "#ffffff",
  animation: {
    enabled: false,
    canvasPreview: true,
    interval: 0.1,
    intensity: 10,
  },
  enabled: true,
};
function Dither(props) {
  const isOnFramerCanvas = RenderTarget.hasRestrictions();
  const hasImage = "image" in props && props.image;
  const canvasRef = useRef(null);
  const isInView = useInView(canvasRef, {
    once: false,
  });
  const intensityTransformed = useMemo(() => {
    return transformValue(props.animation.intensity, [0, 100], [1e-3, 10]);
  }, [props.animation.intensity]);
  const animationFrameRef = useRef(null);
  const lastTimeRef = useRef(0);
  const elapsedTimeRef = useRef(0);
  const animatedValuesRef = useRef({
    brightness: props.brightness,
    glow: props.glow,
  });
  const handleProcessImage = () => {
    if (!canvasRef.current) return;
    const canvas = canvasRef.current;
    const ctx = canvas.getContext("2d", {
      willReadFrequently: true,
    });
    if (!ctx) return;
    const img = new Image();
    img.crossOrigin = "anonymous";
    img.onload = () => {
      try {
        const aspectRatio = img.naturalWidth / img.naturalHeight;
        const baseResolution = 800;
        let targetWidth, targetHeight;
        if (aspectRatio >= 1) {
          targetWidth = Math.floor(baseResolution / props.pixelSize);
          targetHeight = Math.floor(targetWidth / aspectRatio);
        } else {
          targetHeight = Math.floor(baseResolution / props.pixelSize);
          targetWidth = Math.floor(targetHeight * aspectRatio);
        }
        canvas.width = targetWidth;
        canvas.height = targetHeight;
        ctx.imageSmoothingEnabled = false;
        ctx.drawImage(img, 0, 0, targetWidth, targetHeight);
        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);
        const brightAdjusted = DitherProcessor.adjustBrightness(
          imageData,
          animatedValuesRef.current.brightness
        );
        const adjustedThreshold = Math.round(
          (props.threshold * props.midtones) / 50
        );
        let processedData;
        switch (props.algorithm) {
          case "floyd-steinberg":
            processedData = DitherProcessor.floydSteinberg(
              brightAdjusted,
              adjustedThreshold,
              props.backgroundColor,
              props.dotColor
            );
            break;
          case "ordered":
            processedData = DitherProcessor.ordered(
              brightAdjusted,
              adjustedThreshold,
              props.backgroundColor,
              props.dotColor
            );
            break;
          case "random":
            processedData = DitherProcessor.random(
              brightAdjusted,
              adjustedThreshold,
              props.backgroundColor,
              props.dotColor
            );
            break;
          case "atkinson":
            processedData = DitherProcessor.atkinson(
              brightAdjusted,
              adjustedThreshold,
              props.backgroundColor,
              props.dotColor
            );
            break;
          default:
            processedData = DitherProcessor.floydSteinberg(
              brightAdjusted,
              adjustedThreshold,
              props.backgroundColor,
              props.dotColor
            );
        }
        const glowProcessed = DitherProcessor.applyGlow(
          processedData,
          animatedValuesRef.current.glow
        );
        ctx.putImageData(glowProcessed, 0, 0);
      } catch (err) {
        console.error("Failed to process image", err);
      }
    };
    img.src = props.image.src;
  };
  useEffect(() => {
    if (!props.animation.enabled || !isInView) {
      animatedValuesRef.current = {
        brightness: props.brightness,
        glow: props.glow,
      };
      handleProcessImage();
      return;
    }
    if (isOnFramerCanvas && !props.animation.canvasPreview) {
      animatedValuesRef.current = {
        brightness: props.brightness,
        glow: props.glow,
      };
      handleProcessImage();
      return;
    }
    const generateRandomValue = (baseValue) => {
      const variation = Math.abs(intensityTransformed);
      return baseValue + (Math.random() * 2 - 1) * variation;
    };
    const animate = (currentTime) => {
      if (!lastTimeRef.current) {
        lastTimeRef.current = currentTime;
      }
      const deltaTime = currentTime - lastTimeRef.current;
      elapsedTimeRef.current += deltaTime;
      if (elapsedTimeRef.current >= props.animation.interval * 1e3) {
        const newBrightness = generateRandomValue(props.brightness);
        animatedValuesRef.current = {
          brightness: newBrightness,
          glow: props.glow,
        };
        handleProcessImage();
        elapsedTimeRef.current = 0;
      }
      lastTimeRef.current = currentTime;
      animationFrameRef.current = requestAnimationFrame(animate);
    };
    animationFrameRef.current = requestAnimationFrame(animate);
    return () => {
      if (animationFrameRef.current) {
        cancelAnimationFrame(animationFrameRef.current);
      }
      lastTimeRef.current = 0;
      elapsedTimeRef.current = 0;
    };
  }, [
    props.animation.enabled,
    props.animation.interval,
    props.animation.intensity,
    props.animation.canvasPreview,
    props.brightness,
    props.glow,
    props.backgroundColor,
    props.dotColor,
    props.algorithm,
    props.threshold,
    props.pixelSize,
    props.midtones,
    isInView,
    props.enabled,
    intensityTransformed,
  ]);
  useEffect(() => {
    if (!hasImage) return;
    handleProcessImage();
  }, [
    props.image,
    props.algorithm,
    props.threshold,
    props.pixelSize,
    props.midtones,
    props.backgroundColor,
    props.dotColor,
    hasImage,
    props.enabled,
  ]);
  const getAriaLabel = () => {
    if (!props.image.alt) {
      return `Image with ${props.algorithm} dithering applied`;
    }
    return `Dithered version of ${props.image.alt} with ${props.algorithm} dithering applied`;
  };
  if (!hasImage) {
    return (
      <div
        style={{
          width: "100%",
          height: "100%",
          backgroundColor: "#8855FF10",
          color: "#9966FF",
          fontFamily: "Inter",
          fontSize: "11px",
          letterSpacing: "-0.03em",
          fontWeight: 400,
          padding: "40px",
          display: "flex",
          justifyContent: "center",
          alignItems: "center",
        }}
      >
        {"Set up the component by uploading an image."}
      </div>
    );
  }
  return (
    <div
      style={{
        width: "100%",
        height: "100%",
        borderRadius: props.radius,
        overflow: "hidden",
      }}
    >
      {!props.enabled && (
        <img
          src={props.image.src}
          alt={props.image.alt}
          style={{
            width: "100%",
            height: "100%",
            objectFit: "cover",
          }}
        />
      )}
      <canvas
        ref={canvasRef}
        style={{
          width: "100%",
          height: "100%",
          objectFit: "cover",
          imageRendering: "pixelated",
          opacity: props.enabled ? 1 : 0,
        }}
        aria-label={getAriaLabel()}
      />
    </div>
  );
}
var DitherProcessor = class {
  // Utility function to convert hex color to RGB
  static hexToRgb(color) {
    color = color.replace(/\s+/g, "");
    const varMatch = color.match(/var\([^,]*,\s*(.*?)\)\s*(?:\/\*|$)/);
    if (varMatch) {
      color = varMatch[1].trim();
    }
    const rgbMatch = color.match(/^rgb\((\d+),(\d+),(\d+)\)$/);
    if (rgbMatch) {
      return {
        r: parseInt(rgbMatch[1], 10),
        g: parseInt(rgbMatch[2], 10),
        b: parseInt(rgbMatch[3], 10),
      };
    }
    const rgbaMatch = color.match(/^rgba\((\d+),(\d+),(\d+),[\d.]+\)$/);
    if (rgbaMatch) {
      return {
        r: parseInt(rgbaMatch[1], 10),
        g: parseInt(rgbaMatch[2], 10),
        b: parseInt(rgbaMatch[3], 10),
      };
    }
    const hexMatch = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(color);
    if (hexMatch) {
      return {
        r: parseInt(hexMatch[1], 16),
        g: parseInt(hexMatch[2], 16),
        b: parseInt(hexMatch[3], 16),
      };
    }
    console.warn("Could not parse color:", color);
    const numbers = color.match(/\d+/g);
    if (numbers && numbers.length >= 3) {
      return {
        r: parseInt(numbers[0], 10),
        g: parseInt(numbers[1], 10),
        b: parseInt(numbers[2], 10),
      };
    }
    return {
      r: 0,
      g: 0,
      b: 0,
    };
  }
  // Apply brightness adjustment to image data
  static adjustBrightness(imageData, brightness) {
    const data = new Uint8ClampedArray(imageData.data);
    const factor = 1 + brightness / 100;
    for (let i = 0; i < data.length; i += 4) {
      data[i] = Math.min(255, Math.max(0, Math.round(data[i] * factor)));
      data[i + 1] = Math.min(
        255,
        Math.max(0, Math.round(data[i + 1] * factor))
      );
      data[i + 2] = Math.min(
        255,
        Math.max(0, Math.round(data[i + 2] * factor))
      );
    }
    return new ImageData(data, imageData.width, imageData.height);
  }
  // Apply glow effect to image data
  static applyGlow(imageData, glowAmount) {
    if (glowAmount === 0) return imageData;
    const canvas = document.createElement("canvas");
    canvas.width = imageData.width;
    canvas.height = imageData.height;
    const ctx = canvas.getContext("2d", {
      willReadFrequently: true,
    });
    ctx.putImageData(imageData, 0, 0);
    ctx.filter = `blur(${glowAmount / 4}px)`;
    ctx.globalCompositeOperation = "lighter";
    ctx.drawImage(canvas, 0, 0);
    ctx.filter = "none";
    return ctx.getImageData(0, 0, imageData.width, imageData.height);
  }
  // Floyd-Steinberg error diffusion dithering
  static floydSteinberg(imageData, threshold, backgroundColor, dotColor) {
    const data = new Uint8ClampedArray(imageData.data);
    const width = imageData.width;
    const height = imageData.height;
    const bgColor = this.hexToRgb(backgroundColor);
    const dotColorRgb = this.hexToRgb(dotColor);
    for (let y = 0; y < height; y++) {
      for (let x = 0; x < width; x++) {
        const idx = (y * width + x) * 4;
        const luminance = Math.round(
          0.299 * data[idx] + 0.587 * data[idx + 1] + 0.114 * data[idx + 2]
        );
        const useDotColor = luminance > threshold;
        const targetColor = useDotColor ? dotColorRgb : bgColor;
        const errorR = data[idx] - targetColor.r;
        const errorG = data[idx + 1] - targetColor.g;
        const errorB = data[idx + 2] - targetColor.b;
        data[idx] = targetColor.r;
        data[idx + 1] = targetColor.g;
        data[idx + 2] = targetColor.b;
        data[idx + 3] = 255;
        if (x + 1 < width) {
          data[(y * width + (x + 1)) * 4] += (errorR * 7) / 16;
          data[(y * width + (x + 1)) * 4 + 1] += (errorG * 7) / 16;
          data[(y * width + (x + 1)) * 4 + 2] += (errorB * 7) / 16;
        }
        if (y + 1 < height) {
          if (x - 1 >= 0) {
            data[((y + 1) * width + (x - 1)) * 4] += (errorR * 3) / 16;
            data[((y + 1) * width + (x - 1)) * 4 + 1] += (errorG * 3) / 16;
            data[((y + 1) * width + (x - 1)) * 4 + 2] += (errorB * 3) / 16;
          }
          data[((y + 1) * width + x) * 4] += (errorR * 5) / 16;
          data[((y + 1) * width + x) * 4 + 1] += (errorG * 5) / 16;
          data[((y + 1) * width + x) * 4 + 2] += (errorB * 5) / 16;
          if (x + 1 < width) {
            data[((y + 1) * width + (x + 1)) * 4] += errorR / 16;
            data[((y + 1) * width + (x + 1)) * 4 + 1] += errorG / 16;
            data[((y + 1) * width + (x + 1)) * 4 + 2] += errorB / 16;
          }
        }
      }
    }
    return new ImageData(data, width, height);
  }
  // Ordered/Bayer dithering
  static ordered(imageData, threshold, backgroundColor, dotColor) {
    const data = new Uint8ClampedArray(imageData.data);
    const width = imageData.width;
    const height = imageData.height;
    const bgColor = this.hexToRgb(backgroundColor);
    const dotColorRgb = this.hexToRgb(dotColor);
    const bayerMatrix = [
      [0, 8, 2, 10],
      [12, 4, 14, 6],
      [3, 11, 1, 9],
      [15, 7, 13, 5],
    ];
    for (let y = 0; y < height; y++) {
      for (let x = 0; x < width; x++) {
        const idx = (y * width + x) * 4;
        const gray = Math.round(
          0.299 * data[idx] + 0.587 * data[idx + 1] + 0.114 * data[idx + 2]
        );
        const bayerValue = bayerMatrix[y % 4][x % 4];
        const adjustedThreshold = threshold + (bayerValue - 7.5) * 16;
        const useDotColor = gray > adjustedThreshold;
        const targetColor = useDotColor ? dotColorRgb : bgColor;
        data[idx] = targetColor.r;
        data[idx + 1] = targetColor.g;
        data[idx + 2] = targetColor.b;
      }
    }
    return new ImageData(data, width, height);
  }
  // Random dithering
  static random(imageData, threshold, backgroundColor, dotColor) {
    const data = new Uint8ClampedArray(imageData.data);
    const width = imageData.width;
    const height = imageData.height;
    const bgColor = this.hexToRgb(backgroundColor);
    const dotColorRgb = this.hexToRgb(dotColor);
    for (let y = 0; y < height; y++) {
      for (let x = 0; x < width; x++) {
        const idx = (y * width + x) * 4;
        const gray = Math.round(
          0.299 * data[idx] + 0.587 * data[idx + 1] + 0.114 * data[idx + 2]
        );
        const randomNoise = (Math.random() - 0.5) * 100;
        const adjustedThreshold = threshold + randomNoise;
        const useDotColor = gray > adjustedThreshold;
        const targetColor = useDotColor ? dotColorRgb : bgColor;
        data[idx] = targetColor.r;
        data[idx + 1] = targetColor.g;
        data[idx + 2] = targetColor.b;
      }
    }
    return new ImageData(data, width, height);
  }
  // Atkinson dithering
  static atkinson(imageData, threshold, backgroundColor, dotColor) {
    const data = new Uint8ClampedArray(imageData.data);
    const width = imageData.width;
    const height = imageData.height;
    const bgColor = this.hexToRgb(backgroundColor);
    const dotColorRgb = this.hexToRgb(dotColor);
    for (let y = 0; y < height; y++) {
      for (let x = 0; x < width; x++) {
        const idx = (y * width + x) * 4;
        const luminance = Math.round(
          0.299 * data[idx] + 0.587 * data[idx + 1] + 0.114 * data[idx + 2]
        );
        const useDotColor = luminance > threshold;
        const targetColor = useDotColor ? dotColorRgb : bgColor;
        const errorR = data[idx] - targetColor.r;
        const errorG = data[idx + 1] - targetColor.g;
        const errorB = data[idx + 2] - targetColor.b;
        data[idx] = targetColor.r;
        data[idx + 1] = targetColor.g;
        data[idx + 2] = targetColor.b;
        data[idx + 3] = 255;
        const positions = [
          [1, 0],
          [2, 0],
          [-1, 1],
          [0, 1],
          [1, 1],
          [0, 2],
        ];
        for (const [dx, dy] of positions) {
          const newX = x + dx;
          const newY = y + dy;
          if (newX >= 0 && newX < width && newY >= 0 && newY < height) {
            const newIdx = (newY * width + newX) * 4;
            data[newIdx] = Math.min(
              255,
              Math.max(0, data[newIdx] + errorR / 8)
            );
            data[newIdx + 1] = Math.min(
              255,
              Math.max(0, data[newIdx + 1] + errorG / 8)
            );
            data[newIdx + 2] = Math.min(
              255,
              Math.max(0, data[newIdx + 2] + errorB / 8)
            );
          }
        }
      }
    }
    return new ImageData(data, width, height);
  }
};
function transformValue(input, inputRange, outputRange, clamp = false) {
  const [inputMin, inputMax] = inputRange;
  const [outputMin, outputMax] = outputRange;
  const progress = (input - inputMin) / (inputMax - inputMin);
  let result = outputMin + progress * (outputMax - outputMin);
  if (clamp) {
    if (outputMax > outputMin) {
      result = Math.min(Math.max(result, outputMin), outputMax);
    } else {
      result = Math.min(Math.max(result, outputMax), outputMin);
    }
  }
  return result;
}
Dither.displayName = "Dither";

// /:https://framerusercontent.com/modules/MFuOmnRpQMGNsOKk8VGv/vJZEICg1RBhjm2TwvwA9/HumanPassComingSoon.js
import { forwardRef } from "react";

// /:https://framer.com/m/framer/store.js@^1.0.0
import { useEffect as useEffect2, useState } from "react";
import { Data, useObserveData } from "unframer";
function createStore(state1) {
  const dataStore = Data({
    state: Object.freeze({
      ...state1,
    }),
  });
  const setDataStore = (newState) => {
    if (typeof newState === "function") {
      newState = newState(dataStore.state);
    }
    dataStore.state = Object.freeze({
      ...dataStore.state,
      ...newState,
    });
  };
  let storeState =
    typeof state1 === "object"
      ? Object.freeze({
          ...state1,
        })
      : state1;
  const storeSetters = /* @__PURE__ */ new Set();
  const setStoreState = (newState) => {
    if (typeof newState === "function") {
      newState = newState(storeState);
    }
    storeState =
      typeof newState === "object"
        ? Object.freeze({
            ...storeState,
            ...newState,
          })
        : newState;
    storeSetters.forEach((setter) => setter(storeState));
  };
  function useStore2() {
    const [state, setState] = useState(storeState);
    useEffect2(() => {
      storeSetters.add(setState);
      return () => storeSetters.delete(setState);
    }, []);
    if (useObserveData() === true) {
      useObserveData();
      return [dataStore.state, setDataStore];
    } else {
      return [state, setStoreState];
    }
  }
  return useStore2;
}

// /:https://framerusercontent.com/modules/MFuOmnRpQMGNsOKk8VGv/vJZEICg1RBhjm2TwvwA9/HumanPassComingSoon.js
var useStore = createStore({
  background: "#0099FF",
});
function withNavigateBack(Component6) {
  return /* @__PURE__ */ forwardRef((props, ref) => {
    const navigate = useNavStore((s) => s.navigate);
    return <Component6 ref={ref} {...props} onClick={() => navigate(-1)} />;
  });
}

// /:https://framerusercontent.com/modules/yXFrli89e4rnKW93WjH0/Q7zcw2TI3MAi3ZiJezEE/bRzBDjLMv.js
import { fontStore } from "unframer";
fontStore.loadFonts([
  "BI;Raveo Variable/variable/v0",
  "BI;Raveo Variable/variable/v0VF=Im9wc3oiIDE0LCAid2dodCIgNDUw",
  "BI;Raveo Variable/variable/v0VF=Im9wc3oiIDE0LCAid2dodCIgNDUw",
  "BI;Raveo Variable/variable/v0VF=Im9wc3oiIDE0LCAid2dodCIgNDUw",
]);
var variationAxes = [
  {
    defaultValue: 14,
    maxValue: 32,
    minValue: 14,
    name: "Optical size",
    tag: "opsz",
  },
  {
    defaultValue: 400,
    maxValue: 900,
    minValue: 100,
    name: "Weight",
    tag: "wght",
  },
];
var fonts = [
  {
    explicitInter: true,
    fonts: [
      {
        family: "Raveo Variable",
        source: "builtIn",
        style: "normal",
        url: "https://framerusercontent.com/assets/JEdA86oNqHX1i1CLD92Q7jTxV8.woff2",
        variationAxes,
        weight: "1000",
      },
    ],
  },
];
var css = [
  '.framer-ZUskE .framer-styles-preset-d4fts2:not(.rich-text-wrapper), .framer-ZUskE .framer-styles-preset-d4fts2.rich-text-wrapper p { --framer-font-family: "Raveo Variable Variable", sans-serif; --framer-font-family-bold: "Raveo Variable Variable", sans-serif; --framer-font-family-bold-italic: "Raveo Variable Variable", sans-serif; --framer-font-family-italic: "Raveo Variable Variable", sans-serif; --framer-font-open-type-features: normal; --framer-font-size: 16px; --framer-font-style: normal; --framer-font-style-bold: normal; --framer-font-style-bold-italic: normal; --framer-font-style-italic: normal; --framer-font-variation-axes: "opsz" 14, "wght" 450; --framer-font-variation-axes-bold: "opsz" 14, "wght" 450; --framer-font-variation-axes-bold-italic: "opsz" 14, "wght" 450; --framer-font-variation-axes-italic: "opsz" 14, "wght" 450; --framer-font-weight: 1000; --framer-font-weight-bold: 1000; --framer-font-weight-bold-italic: 1000; --framer-font-weight-italic: 1000; --framer-letter-spacing: 0em; --framer-line-height: 1.5em; --framer-paragraph-spacing: 24px; --framer-text-alignment: left; --framer-text-color: var(--token-8acf10b0-fc55-42ff-8ac5-80a79dc47979, rgba(255, 255, 255, 0.5)); --framer-text-decoration: none; --framer-text-stroke-color: initial; --framer-text-stroke-width: initial; --framer-text-transform: none; }',
];
var className = "framer-ZUskE";

// /:https://framerusercontent.com/modules/4b40zjpkSykAP6LbwF1w/pOs6wR3BDuKvcFYlYSrM/p17lTwFRt.js
import * as React3 from "react";
import { useRef as useRef5 } from "react";
import { jsx as _jsx6 } from "react/jsx-runtime";
import {
  addFonts as addFonts3,
  addPropertyControls as addPropertyControls5,
  ComponentViewportProvider as ComponentViewportProvider3,
  ControlType as ControlType5,
  cx as cx3,
  getFonts as getFonts3,
  getLoadingLazyAtYPosition,
  getPropertyControls,
  Image as Image2,
  LayoutGroup as LayoutGroup3,
  motion as motion3,
  MotionConfigContext as MotionConfigContext3,
  SmartComponentScopedContainer as SmartComponentScopedContainer3,
  useComponentViewport as useComponentViewport3,
  useLocaleInfo as useLocaleInfo3,
  useVariantState as useVariantState3,
  withCSS as withCSS3,
} from "unframer";

// /:https://framerusercontent.com/modules/7oZc4Y91Usd1ifk3pQSU/NTsz5qLSQw7eDnn5jTwu/HfbBMQhra.js
import * as React from "react";
import { useRef as useRef2 } from "react";
import {
  addFonts,
  addPropertyControls as addPropertyControls2,
  ComponentViewportProvider,
  ControlType as ControlType2,
  cx,
  getFonts,
  LayoutGroup,
  motion,
  MotionConfigContext,
  SmartComponentScopedContainer,
  useComponentViewport,
  useLocaleInfo,
  useVariantState,
  withCSS,
} from "unframer";
var DitherFonts = getFonts(Dither);
var cycleOrder = ["vQWJZxw25", "f8QjOj4Bd"];
var serializationHash = "framer-mvJYD";
var variantClassNames = {
  f8QjOj4Bd: "framer-v-skz55i",
  vQWJZxw25: "framer-v-1we6ti7",
};
function addPropertyOverrides(overrides, ...variants) {
  const nextOverrides = {};
  variants?.forEach(
    (variant) => variant && Object.assign(nextOverrides, overrides[variant])
  );
  return nextOverrides;
}
var transition1 = {
  bounce: 0,
  delay: 0,
  duration: 1,
  type: "spring",
};
var toResponsiveImage = (value) => {
  if (
    typeof value === "object" &&
    value !== null &&
    typeof value.src === "string"
  ) {
    return value;
  }
  return typeof value === "string"
    ? {
        src: value,
      }
    : void 0;
};
var Transition = ({ value, children }) => {
  const config = React.useContext(MotionConfigContext);
  const transition = value ?? config.transition;
  const contextValue = React.useMemo(
    () => ({
      ...config,
      transition,
    }),
    [JSON.stringify(transition)]
  );
  return (
    <MotionConfigContext.Provider value={contextValue}>
      {children}
    </MotionConfigContext.Provider>
  );
};
var Variants = motion.create(React.Fragment);
var humanReadableVariantMap = {
  Colored: "f8QjOj4Bd",
  Greyscale: "vQWJZxw25",
};
var getProps = ({ accent, height, id, image, width, ...props }) => {
  return {
    ...props,
    imLhjL0oq:
      accent ??
      props.imLhjL0oq ??
      "var(--token-19e7a84f-9c9f-4761-ac3b-54ec81f5f8e0, rgb(0, 230, 197))",
    variant:
      humanReadableVariantMap[props.variant] ?? props.variant ?? "vQWJZxw25",
    woptWnw2I: image ??
      props.woptWnw2I ?? {
        pixelHeight: 1024,
        pixelWidth: 1024,
        src: "https://framerusercontent.com/images/PmKVhTGSMDBE6SXjDZivoBQAE.png?width=1024&height=1024",
        srcSet:
          "https://framerusercontent.com/images/PmKVhTGSMDBE6SXjDZivoBQAE.png?scale-down-to=512&width=1024&height=1024 512w,https://framerusercontent.com/images/PmKVhTGSMDBE6SXjDZivoBQAE.png?width=1024&height=1024 1024w",
      },
  };
};
var createLayoutDependency = (props, variants) => {
  if (props.layoutDependency)
    return variants.join("-") + props.layoutDependency;
  return variants.join("-");
};
var Component = /* @__PURE__ */ React.forwardRef(function (props, ref) {
  const fallbackRef = useRef2(null);
  const refBinding = ref ?? fallbackRef;
  const defaultLayoutId = React.useId();
  const { activeLocale, setLocale } = useLocaleInfo();
  const componentViewport = useComponentViewport();
  const {
    style,
    className: className2,
    layoutId,
    variant,
    woptWnw2I,
    imLhjL0oq,
    ...restProps
  } = getProps(props);
  const {
    baseVariant,
    classNames,
    clearLoadingGesture,
    gestureHandlers,
    gestureVariant,
    isLoading,
    setGestureState,
    setVariant,
    variants,
  } = useVariantState({
    cycleOrder,
    defaultVariant: "vQWJZxw25",
    ref: refBinding,
    variant,
    variantClassNames,
  });
  const layoutDependency = createLayoutDependency(props, variants);
  const sharedStyleClassNames = [];
  const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
  return (
    <LayoutGroup id={layoutId ?? defaultLayoutId}>
      <Variants animate={variants} initial={false}>
        <Transition value={transition1}>
          <motion.div
            {...restProps}
            {...gestureHandlers}
            className={cx(
              scopingClassNames,
              "framer-1we6ti7",
              className2,
              classNames
            )}
            data-framer-name={"Greyscale"}
            layoutDependency={layoutDependency}
            layoutId={"vQWJZxw25"}
            ref={refBinding}
            style={{
              ...style,
            }}
            {...addPropertyOverrides(
              {
                f8QjOj4Bd: {
                  "data-framer-name": "Colored",
                },
              },
              baseVariant,
              gestureVariant
            )}
          >
            <ComponentViewportProvider>
              <SmartComponentScopedContainer
                className={"framer-1aroym4-container"}
                isAuthoredByUser={true}
                isModuleExternal={true}
                layoutDependency={layoutDependency}
                layoutId={"JgEcwSAUU-container"}
                nodeId={"JgEcwSAUU"}
                rendersWithMotion={true}
                scopeId={"HfbBMQhra"}
                style={{
                  filter: "grayscale(1)",
                  WebkitFilter: "grayscale(1)",
                }}
                variants={{
                  f8QjOj4Bd: {
                    filter: "grayscale(0)",
                    WebkitFilter: "grayscale(0)",
                  },
                }}
              >
                <Dither
                  algorithm={"ordered"}
                  animation={{
                    canvasPreview: false,
                    enabled: true,
                    intensity: 40,
                    interval: 0.08,
                  }}
                  backgroundColor={
                    "var(--token-bb3f9735-47c4-4ac2-b002-c5446021aee6, rgb(0, 0, 0))"
                  }
                  brightness={-20}
                  dotColor={imLhjL0oq}
                  enabled={true}
                  glow={0}
                  height={"100%"}
                  id={"JgEcwSAUU"}
                  image={toResponsiveImage(woptWnw2I)}
                  layoutId={"JgEcwSAUU"}
                  midtones={48}
                  pixelSize={4}
                  radius={"0px"}
                  style={{
                    height: "100%",
                    width: "100%",
                  }}
                  threshold={140}
                  width={"100%"}
                />
              </SmartComponentScopedContainer>
            </ComponentViewportProvider>
          </motion.div>
        </Transition>
      </Variants>
    </LayoutGroup>
  );
});
var css2 = [
  "@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
  ".framer-mvJYD.framer-1bt36w3, .framer-mvJYD .framer-1bt36w3 { display: block; }",
  ".framer-mvJYD.framer-1we6ti7 { align-content: center; align-items: center; display: flex; flex-direction: column; flex-wrap: nowrap; gap: 10px; height: 516px; justify-content: center; overflow: visible; padding: 0px; position: relative; width: 516px; }",
  ".framer-mvJYD .framer-1aroym4-container { aspect-ratio: 1 / 1; flex: none; height: var(--framer-aspect-ratio-supported, 519px); position: relative; width: 100%; }",
  ".framer-mvJYD.framer-v-skz55i.framer-1we6ti7 { aspect-ratio: 1 / 1; height: var(--framer-aspect-ratio-supported, 519px); }",
];
var FramerHfbBMQhra = withCSS(Component, css2, "framer-mvJYD");
var stdin_default = FramerHfbBMQhra;
FramerHfbBMQhra.displayName = "Illustration Base";
FramerHfbBMQhra.defaultProps = {
  height: 519,
  width: 516,
};
addPropertyControls2(FramerHfbBMQhra, {
  variant: {
    options: ["vQWJZxw25", "f8QjOj4Bd"],
    optionTitles: ["Greyscale", "Colored"],
    title: "Variant",
    type: ControlType2.Enum,
  },
  woptWnw2I: {
    __defaultAssetReference:
      "data:framer/asset-reference,PmKVhTGSMDBE6SXjDZivoBQAE.png?originalFilename=Isometric+Wallet+Design+Sept+25+2025.png&width=1024&height=1024",
    title: "Image",
    type: ControlType2.ResponsiveImage,
  },
  imLhjL0oq: {
    defaultValue:
      'var(--token-19e7a84f-9c9f-4761-ac3b-54ec81f5f8e0, rgb(0, 230, 197)) /* {"name":"Accent"} */',
    description: "Accent color you wanna switch the image to.",
    title: "Accent",
    type: ControlType2.Color,
  },
});
addFonts(
  FramerHfbBMQhra,
  [
    {
      explicitInter: true,
      fonts: [],
    },
    ...DitherFonts,
  ],
  {
    supportsExplicitInterCodegen: true,
  }
);

// /:https://framerusercontent.com/modules/Aiz0uzID7pYMsjYssJia/t8eq6ISHv76GcQTRprkL/ywmXeNfxF.js
import * as React2 from "react";
import { useRef as useRef4 } from "react";
import {
  addFonts as addFonts2,
  addPropertyControls as addPropertyControls4,
  ComponentViewportProvider as ComponentViewportProvider2,
  ControlType as ControlType4,
  cx as cx2,
  getFonts as getFonts2,
  LayoutGroup as LayoutGroup2,
  motion as motion2,
  MotionConfigContext as MotionConfigContext2,
  SmartComponentScopedContainer as SmartComponentScopedContainer2,
  useComponentViewport as useComponentViewport2,
  useLocaleInfo as useLocaleInfo2,
  useVariantState as useVariantState2,
  withCSS as withCSS2,
} from "unframer";

// /:https://framerusercontent.com/modules/XBWSgdKr3syOFOYW80i8/4FKsp3EPd3QDaqVONEJD/DashedBorder.js
import * as React4 from "react";
import {
  useCallback,
  useEffect as useEffect3,
  useMemo as useMemo3,
  useRef as useRef3,
  useRef as useRef6,
  useState as useState2,
} from "react";
import {
  addFonts as addFonts4,
  addPropertyControls as addPropertyControls3,
  addPropertyControls as addPropertyControls7,
  ComponentViewportProvider as ComponentViewportProvider4,
  ControlType as ControlType3,
  ControlType as ControlType7,
  cx as cx4,
  getFonts as getFonts4,
  getPropertyControls as getPropertyControls2,
  LayoutGroup as LayoutGroup4,
  Link,
  motion as motion5,
  MotionConfigContext as MotionConfigContext4,
  RenderTarget as RenderTarget2,
  SmartComponentScopedContainer as SmartComponentScopedContainer4,
  useActiveVariantCallback,
  useComponentViewport as useComponentViewport4,
  useLocaleInfo as useLocaleInfo4,
  useVariantState as useVariantState4,
  withCSS as withCSS4,
} from "unframer";
function DashedBorderFrame(props) {
  const defaultProps = useMemo3(
    () => ({
      borderColor: "#0099FF",
      borderWidth: 3,
      borderRadius: 16,
      dashLength: 12,
      gapLength: 8,
      animation: {
        animated: true,
        speed: 2,
        direction: "clockwise",
      },
      top: true,
      right: true,
      bottom: true,
      left: true,
    }),
    []
  );
  const {
    borderColor = defaultProps.borderColor,
    borderWidth = defaultProps.borderWidth,
    borderRadius = defaultProps.borderRadius,
    dashLength = defaultProps.dashLength,
    gapLength = defaultProps.gapLength,
    animation: animation5 = defaultProps.animation,
    style = {},
  } = props;
  const { animated, speed, direction } = animation5;
  const uniqueIdRef = useRef3(Math.random().toString(36).substr(2, 9));
  const animName = `dash-anim-${direction}-${uniqueIdRef.current}`;
  const minDuration = 0.1;
  const animationDuration = `${Math.max(
    minDuration,
    2 / Math.max(0.01, speed)
  )}s`;
  const containerRef = useRef3(null);
  const resizeObserverRef = useRef3(null);
  const [size, setSize] = useState2({
    width: 400,
    height: 250,
  });
  const getCurrentSize = useCallback(() => {
    let w = 200,
      h = 100;
    if (!containerRef.current)
      return {
        width: w,
        height: h,
      };
    if (
      RenderTarget2.current() === RenderTarget2.canvas ||
      RenderTarget2.current() === RenderTarget2.thumbnail
    ) {
      if (props.style && typeof props.style.width === "number")
        w = props.style.width;
      else w = containerRef.current.offsetWidth;
      if (props.style && typeof props.style.height === "number")
        h = props.style.height;
      else h = containerRef.current.offsetHeight;
    } else {
      const rect = containerRef.current.getBoundingClientRect();
      w = rect.width;
      h = rect.height;
    }
    return {
      width: w,
      height: h,
    };
  }, [props.style?.width, props.style?.height]);
  useEffect3(() => {
    if (!containerRef.current) return;
    const updateSize = () => {
      const { width: w, height: h } = getCurrentSize();
      setSize((prev) =>
        prev.width !== w || prev.height !== h
          ? {
              width: w,
              height: h,
            }
          : prev
      );
    };
    updateSize();
    if (resizeObserverRef.current) {
      resizeObserverRef.current.disconnect();
    }
    resizeObserverRef.current = new window.ResizeObserver(updateSize);
    resizeObserverRef.current.observe(containerRef.current);
    return () => {
      if (resizeObserverRef.current) {
        resizeObserverRef.current.disconnect();
        resizeObserverRef.current = null;
      }
    };
  }, [getCurrentSize]);
  const width = size.width;
  const height = size.height;
  const bw = Math.max(1, Math.min(16, borderWidth));
  const normalizedRadius = useMemo3(() => {
    if (typeof borderRadius === "number") return borderRadius;
    if (typeof borderRadius === "string") {
      if (borderRadius.endsWith("px")) return parseFloat(borderRadius);
      if (borderRadius.endsWith("%")) {
        const ratio = parseFloat(borderRadius) / 100;
        return Math.max(0, (ratio * Math.min(width, height)) / 2);
      }
      return parseFloat(borderRadius);
    }
    return 0;
  }, [borderRadius, width, height]);
  const half = bw / 2;
  const sides = useMemo3(
    () => ({
      top: props.top ?? true,
      right: props.right ?? true,
      bottom: props.bottom ?? true,
      left: props.left ?? true,
    }),
    [props.top, props.right, props.bottom, props.left]
  );
  const perimeter = useMemo3(() => {
    const maxR = Math.min(width - bw, height - bw) / 2;
    const cr = Math.max(0, Math.min(normalizedRadius, maxR));
    return 2 * (width - bw + height - bw - 4 * cr) + 2 * Math.PI * cr;
  }, [width, height, bw, normalizedRadius]);
  const patternLength = dashLength + gapLength;
  const animOffset = direction === "clockwise" ? -patternLength : patternLength;
  const getBorderPath = useCallback((w, h, bw2, r, sides2) => {
    const half2 = bw2 / 2;
    const maxR = Math.min(r, (w - bw2) / 2, (h - bw2) / 2);
    if (!sides2.top && !sides2.right && !sides2.bottom && !sides2.left)
      return "";
    if (sides2.top && sides2.right && sides2.bottom && sides2.left) {
      return [
        `M${half2 + maxR},${half2}`,
        `H${w - half2 - maxR}`,
        `A${maxR},${maxR} 0 0 1 ${w - half2},${half2 + maxR}`,
        `V${h - half2 - maxR}`,
        `A${maxR},${maxR} 0 0 1 ${w - half2 - maxR},${h - half2}`,
        `H${half2 + maxR}`,
        `A${maxR},${maxR} 0 0 1 ${half2},${h - half2 - maxR}`,
        `V${half2 + maxR}`,
        `A${maxR},${maxR} 0 0 1 ${half2 + maxR},${half2}`,
        "Z",
      ].join(" ");
    }
    let d = "";
    if (sides2.top) {
      d += `M${half2 + maxR},${half2} H${w - half2 - maxR} `;
      if (sides2.right && maxR > 0) {
        d += `A${maxR},${maxR} 0 0 1 ${w - half2},${half2 + maxR} `;
      }
    }
    if (sides2.right) {
      d += `M${w - half2},${half2 + maxR} V${h - half2 - maxR} `;
      if (sides2.bottom && maxR > 0) {
        d += `A${maxR},${maxR} 0 0 1 ${w - half2 - maxR},${h - half2} `;
      }
    }
    if (sides2.bottom) {
      d += `M${w - half2 - maxR},${h - half2} H${half2 + maxR} `;
      if (sides2.left && maxR > 0) {
        d += `A${maxR},${maxR} 0 0 1 ${half2},${h - half2 - maxR} `;
      }
    }
    if (sides2.left) {
      d += `M${half2},${h - half2 - maxR} V${half2 + maxR} `;
      if (sides2.top && maxR > 0) {
        d += `A${maxR},${maxR} 0 0 1 ${half2 + maxR},${half2} `;
      }
    }
    return d.trim();
  }, []);
  const borderPath = useMemo3(
    () => getBorderPath(width, height, bw, normalizedRadius, sides),
    [width, height, bw, normalizedRadius, sides, getBorderPath]
  );
  const [animationReady, setAnimationReady] = useState2(false);
  useEffect3(() => {
    setAnimationReady(false);
    const styleId = `dashed-border-keyframes-${direction}-${uniqueIdRef.current}`;
    let styleEl = null;
    if (typeof document !== "undefined") {
      styleEl = document.getElementById(styleId);
      if (!styleEl) {
        styleEl = document.createElement("style");
        styleEl.id = styleId;
        document.head.appendChild(styleEl);
      }
      styleEl.innerHTML = `
                @keyframes ${animName} {
                    100% {
                        stroke-dashoffset: ${animOffset};
                    }
                }
            `;
      setTimeout(() => setAnimationReady(true), 0);
    }
    return () => {
      if (styleEl && styleEl.parentNode) {
        styleEl.parentNode.removeChild(styleEl);
      }
    };
  }, [direction, animName, animOffset]);
  const [visible, setVisible] = useState2(false);
  useEffect3(() => {
    const loaded =
      props.borderColor !== defaultProps.borderColor ||
      props.borderWidth !== defaultProps.borderWidth ||
      props.borderRadius !== defaultProps.borderRadius ||
      props.dashLength !== defaultProps.dashLength ||
      props.gapLength !== defaultProps.gapLength ||
      (props.animation &&
        (props.animation.animated !== defaultProps.animation.animated ||
          props.animation.speed !== defaultProps.animation.speed ||
          props.animation.direction !== defaultProps.animation.direction)) ||
      props.top !== defaultProps.top ||
      props.right !== defaultProps.right ||
      props.bottom !== defaultProps.bottom ||
      props.left !== defaultProps.left;
    if (loaded && !visible) {
      setTimeout(() => setVisible(true), 10);
    }
  }, [
    props.borderColor,
    props.borderWidth,
    props.borderRadius,
    props.dashLength,
    props.gapLength,
    props.animation,
    props.top,
    props.right,
    props.bottom,
    props.left,
    visible,
    defaultProps,
  ]);
  return (
    <div
      ref={containerRef}
      style={{
        ...style,
        minWidth: 20,
        minHeight: 20,
        width: "100%",
        height: "100%",
        position: "relative",
        background: "transparent",
        borderRadius,
        overflow: "visible",
        pointerEvents: "none",
        opacity: visible ? 1 : 0,
        transition: visible ? "opacity 0.4s cubic-bezier(.4,0,.2,1)" : void 0,
      }}
    >
      <svg
        width={width}
        height={height}
        viewBox={`0 0 ${width} ${height}`}
        style={{
          position: "absolute",
          top: 0,
          left: 0,
          width: "100%",
          height: "100%",
          pointerEvents: "none",
        }}
        aria-hidden={"true"}
        preserveAspectRatio={"none"}
      >
        <path
          d={borderPath}
          fill={"none"}
          stroke={borderColor}
          strokeWidth={bw}
          strokeDasharray={`${dashLength},${gapLength}`}
          strokeDashoffset={0}
          style={{
            animation:
              !animated ||
              RenderTarget2.current() === RenderTarget2.canvas ||
              RenderTarget2.current() === RenderTarget2.thumbnail ||
              !animationReady
                ? "none"
                : `${animName} ${animationDuration} linear infinite`,
          }}
        />
      </svg>
    </div>
  );
}
DashedBorderFrame.displayName = "Animated Dashed Border";
addPropertyControls3(DashedBorderFrame, {
  borderColor: {
    type: ControlType3.Color,
    title: "Dash Color",
    defaultValue: "#0099FF",
  },
  borderWidth: {
    type: ControlType3.Number,
    title: "Thickness",
    defaultValue: 3,
    min: 1,
    max: 16,
    step: 1,
    displayStepper: true,
  },
  borderRadius: {
    type: ControlType3.Number,
    title: "Radius",
    defaultValue: 16,
    min: 0,
    max: 200,
    step: 1,
    displayStepper: false,
  },
  dashLength: {
    type: ControlType3.Number,
    title: "Dash",
    defaultValue: 12,
    min: 2,
    max: 40,
    step: 1,
  },
  gapLength: {
    type: ControlType3.Number,
    title: "Gap",
    defaultValue: 8,
    min: 0,
    max: 40,
    step: 1,
  },
  top: {
    type: ControlType3.Boolean,
    title: "Top",
    defaultValue: true,
    enabledTitle: "Yes",
    disabledTitle: "No",
  },
  right: {
    type: ControlType3.Boolean,
    title: "Right",
    defaultValue: true,
    enabledTitle: "Yes",
    disabledTitle: "No",
  },
  bottom: {
    type: ControlType3.Boolean,
    title: "Bottom",
    defaultValue: true,
    enabledTitle: "Yes",
    disabledTitle: "No",
  },
  left: {
    type: ControlType3.Boolean,
    title: "Left",
    defaultValue: true,
    enabledTitle: "Yes",
    disabledTitle: "No",
  },
  animation: {
    type: ControlType3.Object,
    title: "Animation",
    controls: {
      animated: {
        type: ControlType3.Boolean,
        title: "Animated",
        defaultValue: true,
        enabledTitle: "On",
        disabledTitle: "Off",
      },
      speed: {
        type: ControlType3.Number,
        title: "Speed",
        defaultValue: 2,
        min: 0.1,
        max: 10,
        step: 0.1,
        hidden: (obj) => !obj.animated,
      },
      direction: {
        type: ControlType3.Enum,
        title: "Direction",
        options: ["clockwise", "counterclockwise"],
        optionTitles: ["Clockwise", "Counterclockwise"],
        defaultValue: "clockwise",
        displaySegmentedControl: true,
        segmentedControlDirection: "vertical",
        hidden: (obj) => !obj.animated,
      },
    },
    defaultValue: {
      animated: true,
      speed: 2,
      direction: "clockwise",
    },
  },
});

// /:https://framerusercontent.com/modules/Aiz0uzID7pYMsjYssJia/t8eq6ISHv76GcQTRprkL/ywmXeNfxF.js
var AnimatedDashedBorderFonts = getFonts2(DashedBorderFrame);
var cycleOrder2 = [
  "dNbszlCS9",
  "yzIFdYlxZ",
  "tETbP_pro",
  "oSdwqWnmP",
  "NmV6whLcj",
  "PsAciZ2BM",
  "CLljGfTtP",
  "dmlAwRaBe",
  "HWEDASjkO",
  "yQxqYG67k",
];
var serializationHash2 = "framer-aTu1i";
var variantClassNames2 = {
  CLljGfTtP: "framer-v-1mlrwuf",
  dmlAwRaBe: "framer-v-yl5zu4",
  dNbszlCS9: "framer-v-z8k7b0",
  HWEDASjkO: "framer-v-8evypz",
  NmV6whLcj: "framer-v-1nqlqan",
  oSdwqWnmP: "framer-v-1qeerv",
  PsAciZ2BM: "framer-v-guq2e5",
  tETbP_pro: "framer-v-p1jozm",
  yQxqYG67k: "framer-v-1ffme69",
  yzIFdYlxZ: "framer-v-1arqcmi",
};
function addPropertyOverrides2(overrides, ...variants) {
  const nextOverrides = {};
  variants?.forEach(
    (variant) => variant && Object.assign(nextOverrides, overrides[variant])
  );
  return nextOverrides;
}
var transition12 = {
  bounce: 0,
  delay: 0,
  duration: 0.4,
  type: "spring",
};
var Transition2 = ({ value, children }) => {
  const config = React2.useContext(MotionConfigContext2);
  const transition = value ?? config.transition;
  const contextValue = React2.useMemo(
    () => ({
      ...config,
      transition,
    }),
    [JSON.stringify(transition)]
  );
  return (
    <MotionConfigContext2.Provider value={contextValue}>
      {children}
    </MotionConfigContext2.Provider>
  );
};
var Variants2 = motion2.create(React2.Fragment);
var humanReadableVariantMap2 = {
  "Left Right": "yQxqYG67k",
  "Right Bottom": "yzIFdYlxZ",
  "Top Bottom": "HWEDASjkO",
  "Top Left": "dNbszlCS9",
  All: "CLljGfTtP",
  Bottom: "oSdwqWnmP",
  Left: "tETbP_pro",
  Right: "NmV6whLcj",
  Top: "PsAciZ2BM",
};
var getProps2 = ({ height, id, width, ...props }) => {
  return {
    ...props,
    variant:
      humanReadableVariantMap2[props.variant] ?? props.variant ?? "dNbszlCS9",
  };
};
var createLayoutDependency2 = (props, variants) => {
  if (props.layoutDependency)
    return variants.join("-") + props.layoutDependency;
  return variants.join("-");
};
var Component2 = /* @__PURE__ */ React2.forwardRef(function (props, ref) {
  const fallbackRef = useRef4(null);
  const refBinding = ref ?? fallbackRef;
  const defaultLayoutId = React2.useId();
  const { activeLocale, setLocale } = useLocaleInfo2();
  const componentViewport = useComponentViewport2();
  const {
    style,
    className: className2,
    layoutId,
    variant,
    ...restProps
  } = getProps2(props);
  const {
    baseVariant,
    classNames,
    clearLoadingGesture,
    gestureHandlers,
    gestureVariant,
    isLoading,
    setGestureState,
    setVariant,
    variants,
  } = useVariantState2({
    cycleOrder: cycleOrder2,
    defaultVariant: "dNbszlCS9",
    ref: refBinding,
    variant,
    variantClassNames: variantClassNames2,
  });
  const layoutDependency = createLayoutDependency2(props, variants);
  const sharedStyleClassNames = [];
  const scopingClassNames = cx2(serializationHash2, ...sharedStyleClassNames);
  return (
    <LayoutGroup2 id={layoutId ?? defaultLayoutId}>
      <Variants2 animate={variants} initial={false}>
        <Transition2 value={transition12}>
          <motion2.div
            {...restProps}
            {...gestureHandlers}
            className={cx2(
              scopingClassNames,
              "framer-z8k7b0",
              className2,
              classNames
            )}
            data-framer-name={"Top Left"}
            layoutDependency={layoutDependency}
            layoutId={"dNbszlCS9"}
            ref={refBinding}
            style={{
              ...style,
            }}
            {...addPropertyOverrides2(
              {
                CLljGfTtP: {
                  "data-framer-name": "All",
                },
                dmlAwRaBe: {
                  "data-framer-name": "Left Right",
                },
                HWEDASjkO: {
                  "data-framer-name": "Top Bottom",
                },
                NmV6whLcj: {
                  "data-framer-name": "Right",
                },
                oSdwqWnmP: {
                  "data-framer-name": "Bottom",
                },
                PsAciZ2BM: {
                  "data-framer-name": "Top",
                },
                tETbP_pro: {
                  "data-framer-name": "Left",
                },
                yQxqYG67k: {
                  "data-framer-name": "Left Right",
                },
                yzIFdYlxZ: {
                  "data-framer-name": "Right Bottom",
                },
              },
              baseVariant,
              gestureVariant
            )}
          >
            <ComponentViewportProvider2>
              <SmartComponentScopedContainer2
                className={"framer-ugmoae-container"}
                isAuthoredByUser={true}
                isModuleExternal={true}
                layoutDependency={layoutDependency}
                layoutId={"EHPmwsEKd-container"}
                nodeId={"EHPmwsEKd"}
                rendersWithMotion={true}
                scopeId={"ywmXeNfxF"}
              >
                <DashedBorderFrame
                  animation={{
                    animated: true,
                    direction: "clockwise",
                    speed: 2,
                  }}
                  borderColor={
                    "var(--token-ab91763a-bd8d-4b8f-92c1-f89e2462855c, rgb(28, 28, 28))"
                  }
                  borderRadius={0}
                  borderWidth={1}
                  bottom={false}
                  dashLength={12}
                  gapLength={6}
                  height={"100%"}
                  id={"EHPmwsEKd"}
                  layoutId={"EHPmwsEKd"}
                  left={true}
                  right={false}
                  style={{
                    height: "100%",
                    width: "100%",
                  }}
                  top={true}
                  width={"100%"}
                  {...addPropertyOverrides2(
                    {
                      CLljGfTtP: {
                        borderRadius: 12,
                        bottom: true,
                        right: true,
                      },
                      dmlAwRaBe: {
                        right: true,
                        top: false,
                      },
                      HWEDASjkO: {
                        bottom: true,
                        left: false,
                      },
                      NmV6whLcj: {
                        left: false,
                        right: true,
                        top: false,
                      },
                      oSdwqWnmP: {
                        bottom: true,
                        left: false,
                        top: false,
                      },
                      PsAciZ2BM: {
                        left: false,
                      },
                      tETbP_pro: {
                        top: false,
                      },
                      yQxqYG67k: {
                        right: true,
                        top: false,
                      },
                      yzIFdYlxZ: {
                        bottom: true,
                        left: false,
                        right: true,
                        top: false,
                      },
                    },
                    baseVariant,
                    gestureVariant
                  )}
                />
              </SmartComponentScopedContainer2>
            </ComponentViewportProvider2>
          </motion2.div>
        </Transition2>
      </Variants2>
    </LayoutGroup2>
  );
});
var css3 = [
  "@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
  ".framer-aTu1i.framer-6eel1k, .framer-aTu1i .framer-6eel1k { display: block; }",
  ".framer-aTu1i.framer-z8k7b0 { align-content: center; align-items: center; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: 360px; justify-content: center; overflow: hidden; padding: 0px; position: relative; width: 499px; }",
  ".framer-aTu1i .framer-ugmoae-container { flex: 1 0 0px; height: 100%; pointer-events: none; position: relative; width: 1px; }",
];
var FramerywmXeNfxF = withCSS2(Component2, css3, "framer-aTu1i");
var stdin_default2 = FramerywmXeNfxF;
FramerywmXeNfxF.displayName = "Main Site Grid Border";
FramerywmXeNfxF.defaultProps = {
  height: 360,
  width: 499,
};
addPropertyControls4(FramerywmXeNfxF, {
  variant: {
    options: [
      "dNbszlCS9",
      "yzIFdYlxZ",
      "tETbP_pro",
      "oSdwqWnmP",
      "NmV6whLcj",
      "PsAciZ2BM",
      "CLljGfTtP",
      "dmlAwRaBe",
      "HWEDASjkO",
      "yQxqYG67k",
    ],
    optionTitles: [
      "Top Left",
      "Right Bottom",
      "Left",
      "Bottom",
      "Right",
      "Top",
      "All",
      "Left Right",
      "Top Bottom",
      "Left Right",
    ],
    title: "Variant",
    type: ControlType4.Enum,
  },
});
addFonts2(
  FramerywmXeNfxF,
  [
    {
      explicitInter: true,
      fonts: [],
    },
    ...AnimatedDashedBorderFonts,
  ],
  {
    supportsExplicitInterCodegen: true,
  }
);

// /:https://framerusercontent.com/modules/4b40zjpkSykAP6LbwF1w/pOs6wR3BDuKvcFYlYSrM/p17lTwFRt.js
var MainSiteGridBorderFonts = getFonts3(stdin_default2);
var IllustrationBaseFonts = getFonts3(stdin_default);
var IllustrationBaseControls = getPropertyControls(stdin_default);
var cycleOrder3 = ["qaycOHEbc", "Dn4XiRqix"];
var serializationHash3 = "framer-UGOf2";
var variantClassNames3 = {
  Dn4XiRqix: "framer-v-dfscno",
  qaycOHEbc: "framer-v-9taq9z",
};
function addPropertyOverrides3(overrides, ...variants) {
  const nextOverrides = {};
  variants?.forEach(
    (variant) => variant && Object.assign(nextOverrides, overrides[variant])
  );
  return nextOverrides;
}
var transition13 = {
  bounce: 0.2,
  delay: 0,
  duration: 0.4,
  type: "spring",
};
var toResponsiveImage2 = (value) => {
  if (
    typeof value === "object" &&
    value !== null &&
    typeof value.src === "string"
  ) {
    return value;
  }
  return typeof value === "string"
    ? {
        src: value,
      }
    : void 0;
};
var Transition3 = ({ value, children }) => {
  const config = React3.useContext(MotionConfigContext3);
  const transition = value ?? config.transition;
  const contextValue = React3.useMemo(
    () => ({
      ...config,
      transition,
    }),
    [JSON.stringify(transition)]
  );
  return (
    <MotionConfigContext3.Provider value={contextValue}>
      {children}
    </MotionConfigContext3.Provider>
  );
};
var Variants3 = motion3.create(React3.Fragment);
var humanReadableEnumMap = {
  Colored: "f8QjOj4Bd",
  Greyscale: "vQWJZxw25",
};
var humanReadableVariantMap3 = {
  Default: "qaycOHEbc",
  Phone: "Dn4XiRqix",
};
var getProps3 = ({
  accent,
  border,
  dottedBG,
  height,
  id,
  image,
  mode,
  width,
  ...props
}) => {
  return {
    ...props,
    gDJCoNC4_: border ?? props.gDJCoNC4_ ?? true,
    iamrOxJRN:
      humanReadableEnumMap[mode] ?? mode ?? props.iamrOxJRN ?? "f8QjOj4Bd",
    iT60Ap0nX: image ??
      props.iT60Ap0nX ?? {
        pixelHeight: 950,
        pixelWidth: 950,
        src: "https://framerusercontent.com/images/RHF09bh9OF0yV05ZFVU6gym0UA.png?width=950&height=950",
        srcSet:
          "https://framerusercontent.com/images/RHF09bh9OF0yV05ZFVU6gym0UA.png?scale-down-to=512&width=950&height=950 512w,https://framerusercontent.com/images/RHF09bh9OF0yV05ZFVU6gym0UA.png?width=950&height=950 950w",
      },
    OcQdifm7Y:
      accent ??
      props.OcQdifm7Y ??
      "var(--token-4fef9130-aa55-4351-8ed5-cfba481137a7, rgb(255, 255, 255))",
    s1C6xyggO: dottedBG ?? props.s1C6xyggO,
    variant:
      humanReadableVariantMap3[props.variant] ?? props.variant ?? "qaycOHEbc",
  };
};
var createLayoutDependency3 = (props, variants) => {
  if (props.layoutDependency)
    return variants.join("-") + props.layoutDependency;
  return variants.join("-");
};
var Component3 = /* @__PURE__ */ React3.forwardRef(function (props, ref) {
  const fallbackRef = useRef5(null);
  const refBinding = ref ?? fallbackRef;
  const defaultLayoutId = React3.useId();
  const { activeLocale, setLocale } = useLocaleInfo3();
  const componentViewport = useComponentViewport3();
  const {
    style,
    className: className2,
    layoutId,
    variant,
    iT60Ap0nX,
    OcQdifm7Y,
    iamrOxJRN,
    gDJCoNC4_,
    s1C6xyggO,
    ...restProps
  } = getProps3(props);
  const {
    baseVariant,
    classNames,
    clearLoadingGesture,
    gestureHandlers,
    gestureVariant,
    isLoading,
    setGestureState,
    setVariant,
    variants,
  } = useVariantState3({
    cycleOrder: cycleOrder3,
    defaultVariant: "qaycOHEbc",
    ref: refBinding,
    variant,
    variantClassNames: variantClassNames3,
  });
  const layoutDependency = createLayoutDependency3(props, variants);
  const sharedStyleClassNames = [];
  const scopingClassNames = cx3(serializationHash3, ...sharedStyleClassNames);
  return (
    <LayoutGroup3 id={layoutId ?? defaultLayoutId}>
      <Variants3 animate={variants} initial={false}>
        <Transition3 value={transition13}>
          <motion3.div
            {...restProps}
            {...gestureHandlers}
            className={cx3(
              scopingClassNames,
              "framer-9taq9z",
              className2,
              classNames
            )}
            data-framer-name={"Default"}
            layoutDependency={layoutDependency}
            layoutId={"qaycOHEbc"}
            ref={refBinding}
            style={{
              ...style,
            }}
            {...addPropertyOverrides3(
              {
                Dn4XiRqix: {
                  "data-framer-name": "Phone",
                },
              },
              baseVariant,
              gestureVariant
            )}
          >
            {gDJCoNC4_ && (
              <ComponentViewportProvider3
                height={(componentViewport?.height || 650) - 0}
                width={componentViewport?.width || "100vw"}
                y={(componentViewport?.y || 0) + 0}
              >
                <SmartComponentScopedContainer3
                  className={"framer-14ner8x-container"}
                  layoutDependency={layoutDependency}
                  layoutId={"EvuAseTM6-container"}
                  nodeId={"EvuAseTM6"}
                  rendersWithMotion={true}
                  scopeId={"p17lTwFRt"}
                >
                  {_jsx6(stdin_default2, {
                    height: "100%",
                    id: "EvuAseTM6",
                    layoutId: "EvuAseTM6",
                    style: {
                      height: "100%",
                      width: "100%",
                    },
                    variant: "yzIFdYlxZ",
                    width: "100%",
                  })}
                </SmartComponentScopedContainer3>
              </ComponentViewportProvider3>
            )}
            <ComponentViewportProvider3
              height={516}
              width={`min(${
                componentViewport?.width || "100vw"
              } - 68px, 440px)`}
              y={
                (componentViewport?.y || 0) +
                34 +
                (((componentViewport?.height || 650) - 68 - 516) / 2 + 0 + 0)
              }
            >
              <SmartComponentScopedContainer3
                className={"framer-3gmvfh-container"}
                data-framer-name={"Illustration Base"}
                layoutDependency={layoutDependency}
                layoutId={"bnqfKIChh-container"}
                name={"Illustration Base"}
                nodeId={"bnqfKIChh"}
                rendersWithMotion={true}
                scopeId={"p17lTwFRt"}
                style={{
                  mask: "linear-gradient(0deg, rgba(0, 0, 0, 0.1) 0%, rgba(0, 0, 0, 0.8) 100%) add",
                  WebkitMask:
                    "linear-gradient(0deg, rgba(0, 0, 0, 0.1) 0%, rgba(0, 0, 0, 0.8) 100%) add",
                }}
              >
                {_jsx6(stdin_default, {
                  height: "100%",
                  id: "bnqfKIChh",
                  imLhjL0oq: OcQdifm7Y,
                  layoutId: "bnqfKIChh",
                  name: "Illustration Base",
                  style: {
                    height: "100%",
                    maxWidth: "100%",
                    width: "100%",
                  },
                  variant: iamrOxJRN,
                  width: "100%",
                  woptWnw2I: toResponsiveImage2(iT60Ap0nX),
                })}
              </SmartComponentScopedContainer3>
            </ComponentViewportProvider3>
            <motion3.div
              className={"framer-1lczltb"}
              data-framer-name={"Black Background"}
              layoutDependency={layoutDependency}
              layoutId={"NybQiies0"}
              style={{
                backgroundColor:
                  "var(--token-bb3f9735-47c4-4ac2-b002-c5446021aee6, rgb(0, 0, 0))",
              }}
            />
            {s1C6xyggO && (
              <Image2
                background={{
                  alt: "",
                  backgroundSize: 0.7,
                  fit: "tile",
                  loading: getLoadingLazyAtYPosition(
                    (componentViewport?.y || 0) + 0
                  ),
                  pixelHeight: 100,
                  pixelWidth: 100,
                  positionX: "left",
                  positionY: "top",
                  src: "https://framerusercontent.com/images/6M98hkyWnZpsoNujUIpm3iEsVGw.png?width=100&height=100",
                }}
                className={"framer-vl1gwh"}
                data-framer-name={"Dot"}
                draggable={"false"}
                layoutDependency={layoutDependency}
                layoutId={"zo2_O2fzS"}
                style={{
                  mask: "linear-gradient(0deg, rgba(0,0,0,0) 0%, rgba(0,0,0,1) 100%) add",
                  opacity: 0.15,
                  WebkitMask:
                    "linear-gradient(0deg, rgba(0,0,0,0) 0%, rgba(0,0,0,1) 100%) add",
                }}
              />
            )}
          </motion3.div>
        </Transition3>
      </Variants3>
    </LayoutGroup3>
  );
});
var css4 = [
  "@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
  ".framer-UGOf2.framer-sfjwgk, .framer-UGOf2 .framer-sfjwgk { display: block; }",
  ".framer-UGOf2.framer-9taq9z { align-content: center; align-items: center; display: flex; flex-direction: column; flex-wrap: nowrap; gap: 34px; height: 650px; justify-content: center; overflow: hidden; padding: 34px; position: relative; width: 584px; }",
  ".framer-UGOf2 .framer-14ner8x-container { -webkit-user-select: none; bottom: 0px; flex: none; left: 0px; pointer-events: none; position: absolute; right: 0px; top: 0px; user-select: none; z-index: 2; }",
  ".framer-UGOf2 .framer-3gmvfh-container { aspect-ratio: 1 / 1; flex: none; height: var(--framer-aspect-ratio-supported, 440px); max-width: 440px; position: relative; width: 100%; z-index: 2; }",
  ".framer-UGOf2 .framer-1lczltb { -webkit-user-select: none; bottom: 1px; flex: none; left: 1px; overflow: hidden; pointer-events: none; position: absolute; right: 1px; top: 1px; user-select: none; z-index: 0; }",
  ".framer-UGOf2 .framer-vl1gwh { -webkit-user-select: none; bottom: 0px; flex: none; left: 0px; overflow: hidden; pointer-events: none; position: absolute; right: 0px; top: 0px; user-select: none; z-index: 4; }",
];
var Framerp17lTwFRt = withCSS3(Component3, css4, "framer-UGOf2");
var stdin_default3 = Framerp17lTwFRt;
Framerp17lTwFRt.displayName = "Animated Illustration";
Framerp17lTwFRt.defaultProps = {
  height: 650,
  width: 584,
};
addPropertyControls5(Framerp17lTwFRt, {
  variant: {
    options: ["qaycOHEbc", "Dn4XiRqix"],
    optionTitles: ["Default", "Phone"],
    title: "Variant",
    type: ControlType5.Enum,
  },
  iT60Ap0nX: {
    __defaultAssetReference:
      "data:framer/asset-reference,RHF09bh9OF0yV05ZFVU6gym0UA.png?originalFilename=image.png&preferredSize=auto",
    title: "Image",
    type: ControlType5.ResponsiveImage,
  },
  OcQdifm7Y: {
    defaultValue:
      'var(--token-4fef9130-aa55-4351-8ed5-cfba481137a7, rgb(255, 255, 255)) /* {"name":"White"} */',
    description: "Accent color you wanna switch the image to.",
    title: "Accent",
    type: ControlType5.Color,
  },
  iamrOxJRN: IllustrationBaseControls?.["variant"] && {
    ...IllustrationBaseControls["variant"],
    defaultValue: "f8QjOj4Bd",
    description: "",
    hidden: void 0,
    title: "Mode",
  },
  gDJCoNC4_: {
    defaultValue: true,
    title: "Border",
    type: ControlType5.Boolean,
  },
  s1C6xyggO: {
    defaultValue: false,
    title: "Dotted BG",
    type: ControlType5.Boolean,
  },
});
addFonts3(
  Framerp17lTwFRt,
  [
    {
      explicitInter: true,
      fonts: [],
    },
    ...MainSiteGridBorderFonts,
    ...IllustrationBaseFonts,
  ],
  {
    supportsExplicitInterCodegen: true,
  }
);

// /:https://framerusercontent.com/modules/trbsDeTZsoLYHyDQQAOE/yxTf8kqmtdD9XEmVxZE6/wLxpqDnwB.js
var wLxpqDnwB_exports = {};
__export(wLxpqDnwB_exports, {
  __FramerMetadata__: () => __FramerMetadata__,
  default: () => stdin_default4,
});

// /:https://framerusercontent.com/modules/aeEe477xpzEFqqaZhiTE/ltgP15qtviN0Ho7MrfaG/RollingText.js
import {
  addPropertyControls as addPropertyControls6,
  ControlType as ControlType6,
  motion as motion4,
} from "unframer";
var uuidv4 = () => {
  return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (c) => {
    const r = (Math.random() * 16) | 0;
    const v = c === "x" ? r : (r & 3) | 8;
    return v.toString(16);
  });
};
function RollingText({
  text,
  transition,
  stagger,
  reverse,
  font,
  color,
  textTransform,
  tag,
  padding,
  variable,
  state,
}) {
  const innerClassName = `rolling-text-inner-${uuidv4()}`;
  const Tag = tag;
  const fontSizeStr = font?.fontSize ?? "16px";
  const letterSpacingStr = font?.letterSpacing ?? "0px";
  const rawLineHeight = font?.lineHeight;
  const fontFamily = font?.fontFamily ?? "Inter";
  const fontSizeNum = parseInt(fontSizeStr, 10) || 16;
  let absoluteLineHeightPx;
  if (typeof rawLineHeight === "number") {
    absoluteLineHeightPx = fontSizeNum * rawLineHeight;
  } else if (
    typeof rawLineHeight === "string" &&
    rawLineHeight.includes("em")
  ) {
    const emValue = parseFloat(rawLineHeight) || 1.2;
    absoluteLineHeightPx = fontSizeNum * emValue;
  } else if (typeof rawLineHeight === "string") {
    const pxValue = parseFloat(rawLineHeight);
    absoluteLineHeightPx = isNaN(pxValue) ? rawLineHeight : `${pxValue}px`;
  } else {
    absoluteLineHeightPx = fontSizeNum * 1.2;
  }
  const absoluteLineHeightStr =
    typeof absoluteLineHeightPx === "number"
      ? `${absoluteLineHeightPx}px`
      : absoluteLineHeightPx;
  const yOffset = `-${absoluteLineHeightStr}`;
  const variableFontStyles = variable
    ? {
        fontVariationSettings: `'wght' ${variable.weight}, 'opsz' ${variable.optical}`,
      }
    : {};
  const styles = `
    .${innerClassName} {
      --font-size: ${fontSizeStr};
      --text: ${color};
      --line-height-abs: ${absoluteLineHeightStr};
      box-sizing: border-box; margin: 0; padding: 0; vertical-align: top;
      display: flex; overflow: hidden; width: max-content;
      font-family: ${fontFamily}; font-size: ${fontSizeStr};
      text-transform: ${textTransform}; user-select: none;
      text-shadow: 0 var(--line-height-abs) 0 var(--text);
    }
    .${innerClassName} span {
      display: block; -webkit-backface-visibility: hidden; backface-visibility: hidden;
      white-space: pre; flex-shrink: 0;
      font-family: inherit; font-weight: inherit; font-style: inherit;
      font-size: inherit; letter-spacing: inherit;
      line-height: ${rawLineHeight ?? 1.2};
      color: var(--text);
    }
  `;
  const wrapperStyle = {
    display: "flex",
    alignItems: "center",
    justifyContent: "center",
    width: "100%",
    height: "100%",
    overflow: "hidden",
    padding,
    boxSizing: "border-box",
  };
  const spanVariants = {
    initial: {
      y: "0%",
    },
    roll: {
      y: yOffset,
    },
  };
  const baseDuration =
    typeof transition?.duration === "number" ? transition.duration : 0.5;
  const staggerFactor = stagger / 100;
  const animateState = state === "Roll" ? "roll" : "initial";
  return (
    <div style={wrapperStyle}>
      <Tag className={innerClassName} style={variableFontStyles}>
        {[...text].map((str, index) => {
          const charIndex = reverse ? text.length - 1 - index : index;
          const delay =
            text.length > 0
              ? (baseDuration / text.length) * charIndex * staggerFactor
              : 0;
          const motionSpanStyle = {
            display: "block",
            ...font,
            ...variableFontStyles,
          };
          return (
            <motion4.span
              variants={spanVariants}
              initial={"initial"}
              animate={animateState}
              transition={{
                ...transition,
                delay,
              }}
              style={motionSpanStyle}
            >
              {str === " " ? "\xA0" : str}
            </motion4.span>
          );
        })}
      </Tag>
      <style>{styles}</style>
    </div>
  );
}
RollingText.displayName = "Rolling Text";
var defaultFont = {
  fontFamily: "Inter",
  fontWeight: "400",
  fontSize: "16px",
  fontStyle: "normal",
  letterSpacing: "0px",
  lineHeight: 1.2,
};
var defaultTransition = {
  type: "spring",
  duration: 0.4,
  bounce: 0,
};
addPropertyControls6(RollingText, {
  text: {
    type: ControlType6.String,
    title: "Text",
    defaultValue: "Rolling Text",
  },
  font: {
    type: ControlType6.Font,
    title: "Font",
    controls: "extended",
    defaultValue: defaultFont,
  },
  variable: {
    type: ControlType6.Object,
    title: "Variable",
    controls: {
      optical: {
        type: ControlType6.Number,
        title: "Optical",
        min: 14,
        max: 32,
        step: 1,
        defaultValue: 16,
      },
      weight: {
        type: ControlType6.Number,
        title: "Weight",
        min: 100,
        max: 900,
        step: 1,
        defaultValue: 400,
      },
    },
    defaultValue: {
      optical: 16,
      weight: 400,
    },
  },
  color: {
    type: ControlType6.Color,
    title: "Color",
    defaultValue: "#808080",
  },
  transition: {
    type: ControlType6.Transition,
    title: "Transition",
    defaultValue: defaultTransition,
  },
  stagger: {
    title: "Stagger",
    type: ControlType6.Number,
    min: 0,
    max: 100,
    step: 1,
    defaultValue: 35,
    unit: "%",
  },
  padding: {
    title: "Padding",
    type: ControlType6.Padding,
    defaultValue: "0px",
  },
  reverse: {
    type: ControlType6.Boolean,
    title: "Reverse",
    defaultValue: false,
    enabledTitle: "Yes",
    disabledTitle: "No",
  },
  textTransform: {
    title: "Transform",
    type: ControlType6.Enum,
    defaultValue: "none",
    options: ["none", "uppercase", "lowercase", "capitalize"],
    optionTitles: ["None", "Uppercase", "Lowercase", "Capitalize"],
  },
  tag: {
    type: ControlType6.Enum,
    title: "Tag",
    options: ["p", "span", "h1", "h2", "h3", "h4", "h5", "h6"],
    optionTitles: ["p", "span", "h1", "h2", "h3", "h4", "h5", "h6"],
    defaultValue: "p",
  },
  state: {
    type: ControlType6.Enum,
    title: "State",
    options: ["Default", "Roll"],
    optionTitles: ["Default", "Roll"],
    displaySegmentedControl: true,
    segmentedControlDirection: "vertical",
    defaultValue: "Default",
  },
});

// /:https://framerusercontent.com/modules/trbsDeTZsoLYHyDQQAOE/yxTf8kqmtdD9XEmVxZE6/wLxpqDnwB.js
var RollingTextFonts = getFonts4(RollingText);
var AnimatedDashedBorderFonts2 = getFonts4(DashedBorderFrame);
var RollingTextControls = getPropertyControls2(RollingText);
var enabledGestures = {
  fSd_0l8pb: {
    hover: true,
  },
  IAsy97Er5: {
    hover: true,
  },
  ks076Zojt: {
    hover: true,
  },
  pdooW3wnZ: {
    hover: true,
  },
  rwbKBWJRY: {
    hover: true,
  },
  svyJsdYyH: {
    hover: true,
  },
  UItccn4nC: {
    hover: true,
  },
};
var cycleOrder4 = [
  "svyJsdYyH",
  "UItccn4nC",
  "rwbKBWJRY",
  "IAsy97Er5",
  "pdooW3wnZ",
  "fSd_0l8pb",
  "ks076Zojt",
];
var serializationHash4 = "framer-loemB";
var variantClassNames4 = {
  fSd_0l8pb: "framer-v-ky9yjg",
  IAsy97Er5: "framer-v-1335nv",
  ks076Zojt: "framer-v-l6hzas",
  pdooW3wnZ: "framer-v-x4mgvm",
  rwbKBWJRY: "framer-v-s46390",
  svyJsdYyH: "framer-v-10r6x3m",
  UItccn4nC: "framer-v-owiuns",
};
function addPropertyOverrides4(overrides, ...variants) {
  const nextOverrides = {};
  variants?.forEach(
    (variant) => variant && Object.assign(nextOverrides, overrides[variant])
  );
  return nextOverrides;
}
var transition14 = {
  bounce: 0.2,
  delay: 0,
  duration: 0.4,
  type: "spring",
};
var negate = (value) => {
  return !value;
};
var Transition4 = ({ value, children }) => {
  const config = React4.useContext(MotionConfigContext4);
  const transition = value ?? config.transition;
  const contextValue = React4.useMemo(
    () => ({
      ...config,
      transition,
    }),
    [JSON.stringify(transition)]
  );
  return (
    <MotionConfigContext4.Provider value={contextValue}>
      {children}
    </MotionConfigContext4.Provider>
  );
};
var Variants4 = motion5.create(React4.Fragment);
var humanReadableEnumMap2 = {
  Default: "Default",
  Roll: "Roll",
};
var humanReadableVariantMap4 = {
  "Nav Button Primary": "IAsy97Er5",
  "Nav Button Secondary": "rwbKBWJRY",
  "Primary Small": "fSd_0l8pb",
  "Secondary Small": "ks076Zojt",
  Oversized: "pdooW3wnZ",
  Primary: "UItccn4nC",
  Secondary: "svyJsdYyH",
};
var getProps4 = ({
  click,
  fill,
  height,
  id,
  label,
  link,
  state,
  width,
  ...props
}) => {
  return {
    ...props,
    D9dBYabSn: fill ?? props.D9dBYabSn,
    OLHf8SPKb: link ?? props.OLHf8SPKb,
    PcYKtiAUC: click ?? props.PcYKtiAUC,
    qCxNvGxTB:
      humanReadableEnumMap2[state] ?? state ?? props.qCxNvGxTB ?? "Default",
    SMZpJms0Q: label ?? props.SMZpJms0Q ?? "Get started",
    variant:
      humanReadableVariantMap4[props.variant] ?? props.variant ?? "svyJsdYyH",
  };
};
var createLayoutDependency4 = (props, variants) => {
  if (props.layoutDependency)
    return variants.join("-") + props.layoutDependency;
  return variants.join("-");
};
var Component4 = /* @__PURE__ */ React4.forwardRef(function (props, ref) {
  const fallbackRef = useRef6(null);
  const refBinding = ref ?? fallbackRef;
  const defaultLayoutId = React4.useId();
  const { activeLocale, setLocale } = useLocaleInfo4();
  const componentViewport = useComponentViewport4();
  const {
    style,
    className: className2,
    layoutId,
    variant,
    SMZpJms0Q,
    OLHf8SPKb,
    D9dBYabSn,
    qCxNvGxTB,
    PcYKtiAUC,
    ...restProps
  } = getProps4(props);
  const {
    baseVariant,
    classNames,
    clearLoadingGesture,
    gestureHandlers,
    gestureVariant,
    isLoading,
    setGestureState,
    setVariant,
    variants,
  } = useVariantState4({
    cycleOrder: cycleOrder4,
    defaultVariant: "svyJsdYyH",
    enabledGestures,
    ref: refBinding,
    variant,
    variantClassNames: variantClassNames4,
  });
  const layoutDependency = createLayoutDependency4(props, variants);
  const { activeVariantCallback, delay } =
    useActiveVariantCallback(baseVariant);
  const onTap184xdhl = activeVariantCallback(async (...args) => {
    setGestureState({
      isPressed: false,
    });
    if (PcYKtiAUC) {
      const res = await PcYKtiAUC(...args);
      if (res === false) return false;
    }
  });
  const sharedStyleClassNames = [];
  const scopingClassNames = cx4(serializationHash4, ...sharedStyleClassNames);
  const visible = negate(D9dBYabSn);
  const isDisplayed = () => {
    if (
      [
        "UItccn4nC-hover",
        "IAsy97Er5-hover",
        "fSd_0l8pb-hover",
        "pdooW3wnZ-hover",
      ].includes(gestureVariant)
    )
      return false;
    if (
      ["UItccn4nC", "IAsy97Er5", "pdooW3wnZ", "fSd_0l8pb"].includes(baseVariant)
    )
      return false;
    return true;
  };
  return (
    <LayoutGroup4 id={layoutId ?? defaultLayoutId}>
      <Variants4 animate={variants} initial={false}>
        <Transition4 value={transition14}>
          <Link
            href={OLHf8SPKb}
            motionChild={true}
            nodeId={"svyJsdYyH"}
            scopeId={"wLxpqDnwB"}
            smoothScroll={true}
          >
            <motion5.a
              {...restProps}
              {...gestureHandlers}
              className={`${cx4(
                scopingClassNames,
                "framer-10r6x3m",
                className2,
                classNames
              )} framer-6oxrvz`}
              data-framer-name={"Secondary"}
              data-highlight={true}
              draggable={"false"}
              layoutDependency={layoutDependency}
              layoutId={"svyJsdYyH"}
              onTap={onTap184xdhl}
              ref={refBinding}
              style={{
                backgroundColor:
                  "var(--token-fa07d228-afbe-4fad-9a44-2fb0dadd2a5e, rgb(23, 23, 23))",
                borderBottomLeftRadius: 20,
                borderBottomRightRadius: 20,
                borderTopLeftRadius: 20,
                borderTopRightRadius: 20,
                filter: "none",
                WebkitFilter: "none",
                ...style,
              }}
              variants={{
                "fSd_0l8pb-hover": {
                  filter: "brightness(0.8)",
                  WebkitFilter: "brightness(0.8)",
                },
                "IAsy97Er5-hover": {
                  filter: "brightness(0.8)",
                  WebkitFilter: "brightness(0.8)",
                },
                "ks076Zojt-hover": {
                  backgroundColor:
                    "var(--token-bb3f9735-47c4-4ac2-b002-c5446021aee6, rgb(0, 0, 0))",
                  filter: "none",
                  WebkitFilter: "none",
                },
                "pdooW3wnZ-hover": {
                  filter: "brightness(0.8)",
                  WebkitFilter: "brightness(0.8)",
                },
                "rwbKBWJRY-hover": {
                  backgroundColor:
                    "var(--token-bb3f9735-47c4-4ac2-b002-c5446021aee6, rgb(0, 0, 0))",
                  filter: "none",
                  WebkitFilter: "none",
                },
                "svyJsdYyH-hover": {
                  backgroundColor:
                    "var(--token-bb3f9735-47c4-4ac2-b002-c5446021aee6, rgb(0, 0, 0))",
                },
                "UItccn4nC-hover": {
                  filter: "brightness(0.8)",
                  WebkitFilter: "brightness(0.8)",
                },
                fSd_0l8pb: {
                  backgroundColor: "rgb(255, 255, 255)",
                },
                IAsy97Er5: {
                  backgroundColor:
                    "var(--token-4fef9130-aa55-4351-8ed5-cfba481137a7, rgb(255, 255, 255))",
                  borderBottomLeftRadius: 6,
                  borderBottomRightRadius: 6,
                  borderTopLeftRadius: 6,
                  borderTopRightRadius: 6,
                },
                pdooW3wnZ: {
                  backgroundColor: "rgb(255, 255, 255)",
                  borderBottomLeftRadius: 0,
                  borderBottomRightRadius: 0,
                  borderTopLeftRadius: 0,
                  borderTopRightRadius: 0,
                },
                rwbKBWJRY: {
                  borderBottomLeftRadius: 6,
                  borderBottomRightRadius: 6,
                  borderTopLeftRadius: 6,
                  borderTopRightRadius: 6,
                },
                UItccn4nC: {
                  backgroundColor: "rgb(255, 255, 255)",
                },
              }}
              {...addPropertyOverrides4(
                {
                  "fSd_0l8pb-hover": {
                    "data-framer-name": void 0,
                  },
                  "IAsy97Er5-hover": {
                    "data-framer-name": void 0,
                  },
                  "ks076Zojt-hover": {
                    "data-framer-name": void 0,
                  },
                  "pdooW3wnZ-hover": {
                    "data-framer-name": void 0,
                  },
                  "rwbKBWJRY-hover": {
                    "data-framer-name": void 0,
                  },
                  "svyJsdYyH-hover": {
                    "data-framer-name": void 0,
                  },
                  "UItccn4nC-hover": {
                    "data-framer-name": void 0,
                  },
                  fSd_0l8pb: {
                    "data-framer-name": "Primary Small",
                  },
                  IAsy97Er5: {
                    "data-framer-name": "Nav Button Primary",
                  },
                  ks076Zojt: {
                    "data-framer-name": "Secondary Small",
                  },
                  pdooW3wnZ: {
                    "data-framer-name": "Oversized",
                  },
                  rwbKBWJRY: {
                    "data-framer-name": "Nav Button Secondary",
                  },
                  UItccn4nC: {
                    "data-framer-name": "Primary",
                  },
                },
                baseVariant,
                gestureVariant
              )}
            >
              {visible && (
                <ComponentViewportProvider4>
                  <SmartComponentScopedContainer4
                    className={"framer-zpabgk-container"}
                    data-framer-name={"Fit"}
                    isAuthoredByUser={true}
                    isModuleExternal={true}
                    layoutDependency={layoutDependency}
                    layoutId={"KJk_ORIjP-container"}
                    name={"Fit"}
                    nodeId={"KJk_ORIjP"}
                    rendersWithMotion={true}
                    scopeId={"wLxpqDnwB"}
                  >
                    <RollingText
                      color={
                        "var(--token-4fef9130-aa55-4351-8ed5-cfba481137a7, rgb(255, 255, 255))"
                      }
                      font={{
                        fontFamily: '"Raveo Variable Variable", sans-serif',
                        fontSize: "16px",
                        fontStyle: "normal",
                        fontWeight: 1e3,
                        letterSpacing: "0px",
                        lineHeight: "1.7em",
                      }}
                      height={"100%"}
                      id={"KJk_ORIjP"}
                      layoutId={"KJk_ORIjP"}
                      name={"Fit"}
                      padding={"0px 18px 0px 18px"}
                      reverse={false}
                      stagger={25}
                      state={qCxNvGxTB}
                      style={{
                        height: "100%",
                      }}
                      tag={"p"}
                      text={SMZpJms0Q}
                      textTransform={"none"}
                      transition={{
                        bounce: 0,
                        delay: 0,
                        duration: 0.4,
                        type: "spring",
                      }}
                      variable={{
                        optical: 14,
                        weight: 550,
                      }}
                      width={"100%"}
                      {...addPropertyOverrides4(
                        {
                          "fSd_0l8pb-hover": {
                            state: "Roll",
                          },
                          "IAsy97Er5-hover": {
                            state: "Roll",
                          },
                          "ks076Zojt-hover": {
                            state: "Roll",
                          },
                          "pdooW3wnZ-hover": {
                            state: "Roll",
                          },
                          "rwbKBWJRY-hover": {
                            state: "Roll",
                          },
                          "svyJsdYyH-hover": {
                            state: "Roll",
                          },
                          "UItccn4nC-hover": {
                            state: "Roll",
                          },
                          fSd_0l8pb: {
                            color:
                              "var(--token-bb3f9735-47c4-4ac2-b002-c5446021aee6, rgb(0, 0, 0))",
                            font: {
                              fontFamily:
                                '"Raveo Variable Variable", sans-serif',
                              fontSize: "12px",
                              fontStyle: "normal",
                              fontWeight: 1e3,
                              letterSpacing: "0px",
                              lineHeight: "1.7em",
                            },
                            padding: "0px 12px 0px 12px",
                          },
                          IAsy97Er5: {
                            color:
                              "var(--token-bb3f9735-47c4-4ac2-b002-c5446021aee6, rgb(0, 0, 0))",
                            font: {
                              fontFamily:
                                '"Raveo Variable Variable", sans-serif',
                              fontSize: "12px",
                              fontStyle: "normal",
                              fontWeight: 1e3,
                              letterSpacing: "0px",
                              lineHeight: "1.2em",
                            },
                            padding: "0px 12px 0px 12px",
                          },
                          ks076Zojt: {
                            font: {
                              fontFamily:
                                '"Raveo Variable Variable", sans-serif',
                              fontSize: "12px",
                              fontStyle: "normal",
                              fontWeight: 1e3,
                              letterSpacing: "0px",
                              lineHeight: "1.7em",
                            },
                            padding: "0px 12px 0px 12px",
                          },
                          pdooW3wnZ: {
                            color:
                              "var(--token-bb3f9735-47c4-4ac2-b002-c5446021aee6, rgb(0, 0, 0))",
                            font: {
                              fontFamily:
                                '"Raveo Variable Variable", sans-serif',
                              fontSize: "28px",
                              fontStyle: "normal",
                              fontWeight: 1e3,
                              letterSpacing: "-0.02em",
                              lineHeight: "1.7em",
                            },
                            padding: "0px 28px 0px 28px",
                          },
                          rwbKBWJRY: {
                            font: {
                              fontFamily:
                                '"Raveo Variable Variable", sans-serif',
                              fontSize: "12px",
                              fontStyle: "normal",
                              fontWeight: 1e3,
                              letterSpacing: "0px",
                              lineHeight: "1.8em",
                            },
                            padding: "0px 12px 0px 12px",
                          },
                          UItccn4nC: {
                            color:
                              "var(--token-bb3f9735-47c4-4ac2-b002-c5446021aee6, rgb(0, 0, 0))",
                          },
                        },
                        baseVariant,
                        gestureVariant
                      )}
                    />
                  </SmartComponentScopedContainer4>
                </ComponentViewportProvider4>
              )}
              {D9dBYabSn && (
                <ComponentViewportProvider4>
                  <SmartComponentScopedContainer4
                    className={"framer-m5wg9d-container"}
                    data-framer-name={"Fill"}
                    isAuthoredByUser={true}
                    isModuleExternal={true}
                    layoutDependency={layoutDependency}
                    layoutId={"wDswxR602-container"}
                    name={"Fill"}
                    nodeId={"wDswxR602"}
                    rendersWithMotion={true}
                    scopeId={"wLxpqDnwB"}
                  >
                    <RollingText
                      color={
                        "var(--token-4fef9130-aa55-4351-8ed5-cfba481137a7, rgb(255, 255, 255))"
                      }
                      font={{
                        fontFamily: '"Raveo Variable Variable", sans-serif',
                        fontSize: "14px",
                        fontStyle: "normal",
                        fontWeight: 1e3,
                        letterSpacing: "0px",
                        lineHeight: "1.7em",
                      }}
                      height={"100%"}
                      id={"wDswxR602"}
                      layoutId={"wDswxR602"}
                      name={"Fill"}
                      padding={"0px 18px 0px 18px"}
                      reverse={false}
                      stagger={25}
                      state={qCxNvGxTB}
                      style={{
                        height: "100%",
                        width: "100%",
                      }}
                      tag={"p"}
                      text={SMZpJms0Q}
                      textTransform={"none"}
                      transition={{
                        bounce: 0,
                        delay: 0,
                        duration: 0.4,
                        type: "spring",
                      }}
                      variable={{
                        optical: 14,
                        weight: 550,
                      }}
                      width={"100%"}
                      {...addPropertyOverrides4(
                        {
                          "fSd_0l8pb-hover": {
                            state: "Roll",
                          },
                          "IAsy97Er5-hover": {
                            state: "Roll",
                          },
                          "ks076Zojt-hover": {
                            state: "Roll",
                          },
                          "pdooW3wnZ-hover": {
                            state: "Roll",
                          },
                          "rwbKBWJRY-hover": {
                            state: "Roll",
                          },
                          "svyJsdYyH-hover": {
                            state: "Roll",
                          },
                          "UItccn4nC-hover": {
                            state: "Roll",
                          },
                          fSd_0l8pb: {
                            color:
                              "var(--token-bb3f9735-47c4-4ac2-b002-c5446021aee6, rgb(0, 0, 0))",
                            font: {
                              fontFamily:
                                '"Raveo Variable Variable", sans-serif',
                              fontSize: "12px",
                              fontStyle: "normal",
                              fontWeight: 1e3,
                              letterSpacing: "0px",
                              lineHeight: "1.7em",
                            },
                            padding: "0px 12px 0px 12px",
                          },
                          IAsy97Er5: {
                            color:
                              "var(--token-bb3f9735-47c4-4ac2-b002-c5446021aee6, rgb(0, 0, 0))",
                            font: {
                              fontFamily:
                                '"Raveo Variable Variable", sans-serif',
                              fontSize: "12px",
                              fontStyle: "normal",
                              fontWeight: 1e3,
                              letterSpacing: "0px",
                              lineHeight: "1.2em",
                            },
                            padding: "0px 12px 0px 12px",
                          },
                          ks076Zojt: {
                            font: {
                              fontFamily:
                                '"Raveo Variable Variable", sans-serif',
                              fontSize: "12px",
                              fontStyle: "normal",
                              fontWeight: 1e3,
                              letterSpacing: "0px",
                              lineHeight: "1.7em",
                            },
                            padding: "0px 12px 0px 12px",
                          },
                          pdooW3wnZ: {
                            color:
                              "var(--token-bb3f9735-47c4-4ac2-b002-c5446021aee6, rgb(0, 0, 0))",
                            font: {
                              fontFamily:
                                '"Raveo Variable Variable", sans-serif',
                              fontSize: "28px",
                              fontStyle: "normal",
                              fontWeight: 1e3,
                              letterSpacing: "-0.02em",
                              lineHeight: "1.7em",
                            },
                            padding: "0px 28px 0px 28px",
                          },
                          rwbKBWJRY: {
                            font: {
                              fontFamily:
                                '"Raveo Variable Variable", sans-serif',
                              fontSize: "12px",
                              fontStyle: "normal",
                              fontWeight: 1e3,
                              letterSpacing: "0px",
                              lineHeight: "1.8em",
                            },
                            padding: "0px 12px 0px 12px",
                          },
                          UItccn4nC: {
                            color:
                              "var(--token-bb3f9735-47c4-4ac2-b002-c5446021aee6, rgb(0, 0, 0))",
                          },
                        },
                        baseVariant,
                        gestureVariant
                      )}
                    />
                  </SmartComponentScopedContainer4>
                </ComponentViewportProvider4>
              )}
              {isDisplayed() && (
                <ComponentViewportProvider4>
                  <SmartComponentScopedContainer4
                    className={"framer-1s7vqp7-container"}
                    isAuthoredByUser={true}
                    isModuleExternal={true}
                    layoutDependency={layoutDependency}
                    layoutId={"mPPkWa11v-container"}
                    nodeId={"mPPkWa11v"}
                    rendersWithMotion={true}
                    scopeId={"wLxpqDnwB"}
                    style={{
                      opacity: 0,
                    }}
                    variants={{
                      "ks076Zojt-hover": {
                        opacity: 1,
                      },
                      "rwbKBWJRY-hover": {
                        opacity: 1,
                      },
                      "svyJsdYyH-hover": {
                        opacity: 1,
                      },
                    }}
                  >
                    <DashedBorderFrame
                      animation={{
                        animated: false,
                        direction: "clockwise",
                        speed: 2,
                      }}
                      borderColor={
                        "var(--token-04a04e54-cbd8-4312-8418-e1527ef396e1, rgb(51, 51, 51))"
                      }
                      borderRadius={20}
                      borderWidth={1}
                      bottom={true}
                      dashLength={8}
                      gapLength={6}
                      height={"100%"}
                      id={"mPPkWa11v"}
                      layoutId={"mPPkWa11v"}
                      left={true}
                      right={true}
                      style={{
                        height: "100%",
                        width: "100%",
                      }}
                      top={true}
                      width={"100%"}
                      {...addPropertyOverrides4(
                        {
                          "ks076Zojt-hover": {
                            animation: {
                              animated: true,
                              direction: "clockwise",
                              speed: 2,
                            },
                          },
                          "rwbKBWJRY-hover": {
                            animation: {
                              animated: true,
                              direction: "clockwise",
                              speed: 2,
                            },
                          },
                          "svyJsdYyH-hover": {
                            animation: {
                              animated: true,
                              direction: "clockwise",
                              speed: 2,
                            },
                          },
                          ks076Zojt: {
                            borderRadius: 15,
                          },
                          rwbKBWJRY: {
                            borderRadius: 6,
                            dashLength: 6,
                            gapLength: 4,
                          },
                        },
                        baseVariant,
                        gestureVariant
                      )}
                    />
                  </SmartComponentScopedContainer4>
                </ComponentViewportProvider4>
              )}
            </motion5.a>
          </Link>
        </Transition4>
      </Variants4>
    </LayoutGroup4>
  );
});
var css5 = [
  "@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
  ".framer-loemB.framer-6oxrvz, .framer-loemB .framer-6oxrvz { display: block; }",
  ".framer-loemB.framer-10r6x3m { align-content: center; align-items: center; cursor: pointer; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 6px; height: 40px; justify-content: center; overflow: hidden; padding: 0px; position: relative; text-decoration: none; width: min-content; will-change: var(--framer-will-change-override, transform); }",
  ".framer-loemB .framer-zpabgk-container { -webkit-user-select: none; flex: none; height: 100%; position: relative; user-select: none; width: auto; }",
  ".framer-loemB .framer-m5wg9d-container { -webkit-user-select: none; flex: 1 0 0px; height: 100%; position: relative; user-select: none; width: 1px; }",
  ".framer-loemB .framer-1s7vqp7-container { bottom: 2px; flex: none; left: 2px; pointer-events: none; position: absolute; right: 2px; top: 2px; z-index: 1; }",
  ".framer-loemB.framer-v-s46390.framer-10r6x3m, .framer-loemB.framer-v-1335nv.framer-10r6x3m, .framer-loemB.framer-v-ky9yjg.framer-10r6x3m, .framer-loemB.framer-v-l6hzas.framer-10r6x3m { height: 30px; }",
  ".framer-loemB.framer-v-x4mgvm.framer-10r6x3m { height: 74px; will-change: unset; }",
  ".framer-loemB.framer-v-10r6x3m.hover .framer-1s7vqp7-container, .framer-loemB.framer-v-s46390.hover .framer-1s7vqp7-container, .framer-loemB.framer-v-l6hzas.hover .framer-1s7vqp7-container { bottom: 0px; left: 0px; right: 0px; top: 0px; }",
  ".framer-loemB.framer-v-x4mgvm.hover.framer-10r6x3m { will-change: unset; }",
];
var FramerwLxpqDnwB = withCSS4(Component4, css5, "framer-loemB");
var stdin_default4 = FramerwLxpqDnwB;
FramerwLxpqDnwB.displayName = "Button";
FramerwLxpqDnwB.defaultProps = {
  height: 40,
  width: 121.5,
};
addPropertyControls7(FramerwLxpqDnwB, {
  variant: {
    options: [
      "svyJsdYyH",
      "UItccn4nC",
      "rwbKBWJRY",
      "IAsy97Er5",
      "pdooW3wnZ",
      "fSd_0l8pb",
      "ks076Zojt",
    ],
    optionTitles: [
      "Secondary",
      "Primary",
      "Nav Button Secondary",
      "Nav Button Primary",
      "Oversized",
      "Primary Small",
      "Secondary Small",
    ],
    title: "Variant",
    type: ControlType7.Enum,
  },
  SMZpJms0Q: {
    defaultValue: "Get started",
    displayTextArea: false,
    title: "Label",
    type: ControlType7.String,
  },
  OLHf8SPKb: {
    title: "Link",
    type: ControlType7.Link,
  },
  D9dBYabSn: {
    defaultValue: false,
    description: 'Set to "Yes" when using the button with fill width.',
    title: "Fill",
    type: ControlType7.Boolean,
  },
  qCxNvGxTB: RollingTextControls?.["state"] && {
    ...RollingTextControls["state"],
    defaultValue: "Default",
    description:
      "Used for triggering rolling of text when used within another component.",
    hidden: void 0,
    title: "State",
  },
  PcYKtiAUC: {
    title: "Click",
    type: ControlType7.EventHandler,
  },
});
var variationAxes2 = [
  {
    defaultValue: 14,
    maxValue: 32,
    minValue: 14,
    name: "Optical size",
    tag: "opsz",
  },
  {
    defaultValue: 400,
    maxValue: 900,
    minValue: 100,
    name: "Weight",
    tag: "wght",
  },
];
addFonts4(
  FramerwLxpqDnwB,
  [
    {
      explicitInter: true,
      fonts: [
        {
          family: "Raveo Variable",
          source: "builtIn",
          style: "normal",
          url: "https://framerusercontent.com/assets/JEdA86oNqHX1i1CLD92Q7jTxV8.woff2",
          variationAxes: variationAxes2,
          weight: "1000",
        },
      ],
    },
    ...RollingTextFonts,
    ...AnimatedDashedBorderFonts2,
  ],
  {
    supportsExplicitInterCodegen: true,
  }
);
var __FramerMetadata__ = {
  exports: {
    default: {
      type: "reactComponent",
      name: "FramerwLxpqDnwB",
      slots: [],
      annotations: {
        framerContractVersion: "1",
        framerImmutableVariables: "true",
        framerColorSyntax: "true",
        framerDisplayContentsDiv: "false",
        framerIntrinsicHeight: "40",
        framerAutoSizeImages: "true",
        framerVariables:
          '{"SMZpJms0Q":"label","OLHf8SPKb":"link","D9dBYabSn":"fill","qCxNvGxTB":"state","PcYKtiAUC":"click"}',
        framerCanvasComponentVariantDetails:
          '{"propertyName":"variant","data":{"default":{"layout":["auto","fixed"]},"UItccn4nC":{"layout":["auto","fixed"]},"rwbKBWJRY":{"layout":["auto","fixed"]},"IAsy97Er5":{"layout":["auto","fixed"]},"pdooW3wnZ":{"layout":["auto","fixed"]},"fSd_0l8pb":{"layout":["auto","fixed"]},"ks076Zojt":{"layout":["auto","fixed"]},"rJxH1vhJ3":{"layout":["auto","fixed"]},"tHMInHAfm":{"layout":["auto","fixed"]},"b6FUING9L":{"layout":["auto","fixed"]},"fWeg11m5N":{"layout":["auto","fixed"]},"vwBGvVazd":{"layout":["auto","fixed"]},"BwyYAcalZ":{"layout":["auto","fixed"]},"eaNrxYXV_":{"layout":["auto","fixed"]}}}',
        framerIntrinsicWidth: "121.5",
        framerComponentViewportWidth: "true",
      },
    },
    Props: {
      type: "tsType",
      annotations: {
        framerContractVersion: "1",
      },
    },
    __FramerMetadata__: {
      type: "variable",
    },
  },
};

// /:https://framerusercontent.com/modules/q4upgwrDKy67BbxZ1Wxz/8Ou0PkHbNXD7KzgjaDtO/VRXHGV2hp.js
var DitherFonts2 = getFonts5(Dither);
var SmartComponentScopedContainerWithFXWithOptimizedAppearEffect =
  withOptimizedAppearEffect(withFX(SmartComponentScopedContainer5));
var AnimatedIllustrationFonts = getFonts5(stdin_default3);
var RichTextWithFXWithOptimizedAppearEffect = withOptimizedAppearEffect(
  withFX(RichText)
);
var ButtonFonts = getFonts5(stdin_default4);
var ButtonWithNavigateBacknkol1hWithMappedReactProps1v1ipky =
  withMappedReactProps(
    withCodeBoundaryForOverrides(stdin_default4, {
      nodeId: "kHixuYsoT",
      override: withNavigateBack,
      scopeId: "VRXHGV2hp",
    }),
    wLxpqDnwB_exports
  );
var MotionDivWithFXWithOptimizedAppearEffect = withOptimizedAppearEffect(
  withFX(motion6.div)
);
var MainSiteGridBorderFonts2 = getFonts5(stdin_default2);
var cycleOrder5 = ["UVOHvsxtD", "mwJY4Qtms"];
var serializationHash5 = "framer-p0W3c";
var variantClassNames5 = {
  mwJY4Qtms: "framer-v-rwh031",
  UVOHvsxtD: "framer-v-1vy5uxl",
};
function addPropertyOverrides5(overrides, ...variants) {
  const nextOverrides = {};
  variants?.forEach(
    (variant) => variant && Object.assign(nextOverrides, overrides[variant])
  );
  return nextOverrides;
}
var transition15 = {
  bounce: 0.2,
  delay: 0,
  duration: 0.4,
  type: "spring",
};
var transition2 = {
  bounce: 0.8,
  delay: 0.1,
  duration: 1.5,
  type: "spring",
};
var animation = {
  opacity: 0.75,
  rotate: 0,
  rotateX: 0,
  rotateY: 0,
  scale: 1,
  skewX: 0,
  skewY: 0,
  transition: transition2,
  x: 0,
  y: 0,
};
var animation1 = {
  opacity: 1e-3,
  rotate: 0,
  rotateX: 0,
  rotateY: 0,
  scale: 1,
  skewX: 0,
  skewY: 0,
  x: 0,
  y: 0,
};
var addImageAlt = (image, alt) => {
  if (!image || typeof image !== "object") {
    return;
  }
  return {
    ...image,
    alt,
  };
};
var transition3 = {
  bounce: 0,
  delay: 0.15,
  duration: 0.4,
  type: "spring",
};
var animation2 = {
  opacity: 1,
  rotate: 0,
  rotateX: 0,
  rotateY: 0,
  scale: 1,
  skewX: 0,
  skewY: 0,
  transition: transition3,
  x: 0,
  y: 0,
};
var animation3 = {
  opacity: 1e-3,
  rotate: 0,
  rotateX: 0,
  rotateY: 0,
  scale: 1,
  skewX: 0,
  skewY: 0,
  x: 0,
  y: 20,
};
var transition4 = {
  bounce: 0,
  delay: 0.2,
  duration: 0.4,
  type: "spring",
};
var animation4 = {
  opacity: 1,
  rotate: 0,
  rotateX: 0,
  rotateY: 0,
  scale: 1,
  skewX: 0,
  skewY: 0,
  transition: transition4,
  x: 0,
  y: 0,
};
var Transition5 = ({ value, children }) => {
  const config = React5.useContext(MotionConfigContext5);
  const transition = value ?? config.transition;
  const contextValue = React5.useMemo(
    () => ({
      ...config,
      transition,
    }),
    [JSON.stringify(transition)]
  );
  return (
    <MotionConfigContext5.Provider value={contextValue}>
      {children}
    </MotionConfigContext5.Provider>
  );
};
var Variants5 = motion6.create(React5.Fragment);
var humanReadableVariantMap5 = {
  Desktop: "UVOHvsxtD",
  Phone: "mwJY4Qtms",
};
var getProps5 = ({ height, id, width, ...props }) => {
  return {
    ...props,
    variant:
      humanReadableVariantMap5[props.variant] ?? props.variant ?? "UVOHvsxtD",
  };
};
var createLayoutDependency5 = (props, variants) => {
  if (props.layoutDependency)
    return variants.join("-") + props.layoutDependency;
  return variants.join("-");
};
var Component5 = /* @__PURE__ */ React5.forwardRef(function (props, ref) {
  const fallbackRef = useRef7(null);
  const refBinding = ref ?? fallbackRef;
  const defaultLayoutId = React5.useId();
  const { activeLocale, setLocale } = useLocaleInfo5();
  const componentViewport = useComponentViewport5();
  const {
    style,
    className: className2,
    layoutId,
    variant,
    ...restProps
  } = getProps5(props);
  const {
    baseVariant,
    classNames,
    clearLoadingGesture,
    gestureHandlers,
    gestureVariant,
    isLoading,
    setGestureState,
    setVariant,
    variants,
  } = useVariantState5({
    cycleOrder: cycleOrder5,
    defaultVariant: "UVOHvsxtD",
    ref: refBinding,
    variant,
    variantClassNames: variantClassNames5,
  });
  const layoutDependency = createLayoutDependency5(props, variants);
  const sharedStyleClassNames = [className];
  const scopingClassNames = cx5(serializationHash5, ...sharedStyleClassNames);
  const isDisplayed = () => {
    if (baseVariant === "mwJY4Qtms") return true;
    return false;
  };
  const isDisplayed1 = () => {
    if (baseVariant === "mwJY4Qtms") return false;
    return true;
  };
  return (
    <LayoutGroup5 id={layoutId ?? defaultLayoutId}>
      <Variants5 animate={variants} initial={false}>
        <Transition5 value={transition15}>
          <motion6.div
            {...restProps}
            {...gestureHandlers}
            className={cx5(
              scopingClassNames,
              "framer-1vy5uxl",
              className2,
              classNames
            )}
            data-framer-name={"Desktop"}
            layoutDependency={layoutDependency}
            layoutId={"UVOHvsxtD"}
            ref={refBinding}
            style={{
              ...style,
            }}
            {...addPropertyOverrides5(
              {
                mwJY4Qtms: {
                  "data-framer-name": "Phone",
                },
              },
              baseVariant,
              gestureVariant
            )}
          >
            {isDisplayed() && (
              <motion6.div
                className={"framer-10bse0t"}
                data-framer-name={"Block"}
                layoutDependency={layoutDependency}
                layoutId={"vQwUgmCci"}
              >
                <motion6.div
                  className={"framer-o20o4d"}
                  data-framer-name={"Art"}
                  layoutDependency={layoutDependency}
                  layoutId={"zY_awe2KG"}
                  style={{
                    mask: "url('https://framerusercontent.com/images/sFTsu8Q2Rvnhi1JLZnQmdLe8T0s.svg?width=1236&height=577') alpha no-repeat bottom / cover add, linear-gradient(0deg, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.6) 77%) add",
                    WebkitMask:
                      "url('https://framerusercontent.com/images/sFTsu8Q2Rvnhi1JLZnQmdLe8T0s.svg?width=1236&height=577') alpha no-repeat bottom / cover add, linear-gradient(0deg, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.6) 77%) add",
                  }}
                >
                  {isDisplayed1() && (
                    <ComponentViewportProvider5>
                      <SmartComponentScopedContainerWithFXWithOptimizedAppearEffect
                        __perspectiveFX={false}
                        __smartComponentFX={true}
                        __targetOpacity={0.75}
                        animate={animation}
                        className={"framer-udnz4q-container"}
                        data-framer-appear-id={"udnz4q"}
                        data-framer-name={"Dither 1 (Animated)"}
                        initial={animation1}
                        isAuthoredByUser={true}
                        isModuleExternal={true}
                        layoutDependency={layoutDependency}
                        layoutId={"alSqbr7Hv-container"}
                        name={"Dither 1 (Animated)"}
                        nodeId={"alSqbr7Hv"}
                        optimized={true}
                        rendersWithMotion={true}
                        scopeId={"VRXHGV2hp"}
                        style={{
                          opacity: 0.75,
                        }}
                      >
                        <Dither
                          algorithm={"random"}
                          animation={{
                            canvasPreview: false,
                            enabled: true,
                            intensity: 10,
                            interval: 0.08,
                          }}
                          backgroundColor={
                            "var(--token-bb3f9735-47c4-4ac2-b002-c5446021aee6, rgb(0, 0, 0))"
                          }
                          brightness={-40}
                          dotColor={
                            "var(--token-4fef9130-aa55-4351-8ed5-cfba481137a7, rgb(255, 255, 255))"
                          }
                          enabled={true}
                          glow={10}
                          height={"100%"}
                          id={"alSqbr7Hv"}
                          image={addImageAlt(
                            {
                              pixelHeight: 630,
                              pixelWidth: 1200,
                              src: "https://framerusercontent.com/images/1qGfccYA7zoo9djk9lU9wBmUoE.png?width=1200&height=630",
                              srcSet:
                                "https://framerusercontent.com/images/1qGfccYA7zoo9djk9lU9wBmUoE.png?scale-down-to=512&width=1200&height=630 512w,https://framerusercontent.com/images/1qGfccYA7zoo9djk9lU9wBmUoE.png?scale-down-to=1024&width=1200&height=630 1024w,https://framerusercontent.com/images/1qGfccYA7zoo9djk9lU9wBmUoE.png?width=1200&height=630 1200w",
                            },
                            ""
                          )}
                          layoutId={"alSqbr7Hv"}
                          midtones={25}
                          name={"Dither 1 (Animated)"}
                          pixelSize={2}
                          radius={"0px"}
                          style={{
                            height: "100%",
                            width: "100%",
                          }}
                          threshold={160}
                          width={"100%"}
                        />
                      </SmartComponentScopedContainerWithFXWithOptimizedAppearEffect>
                    </ComponentViewportProvider5>
                  )}
                  {isDisplayed1() && (
                    <ComponentViewportProvider5>
                      <SmartComponentScopedContainer5
                        className={"framer-w5mpuf-container"}
                        data-framer-name={"Dither 2"}
                        isAuthoredByUser={true}
                        isModuleExternal={true}
                        layoutDependency={layoutDependency}
                        layoutId={"BpKrzOiS8-container"}
                        name={"Dither 2"}
                        nodeId={"BpKrzOiS8"}
                        rendersWithMotion={true}
                        scopeId={"VRXHGV2hp"}
                      >
                        <Dither
                          algorithm={"ordered"}
                          animation={{
                            canvasPreview: true,
                            enabled: false,
                            intensity: 10,
                            interval: 0.08,
                          }}
                          backgroundColor={
                            "var(--token-bb3f9735-47c4-4ac2-b002-c5446021aee6, rgb(0, 0, 0))"
                          }
                          brightness={16}
                          dotColor={
                            "var(--token-4fef9130-aa55-4351-8ed5-cfba481137a7, rgb(255, 255, 255))"
                          }
                          enabled={true}
                          glow={0}
                          height={"100%"}
                          id={"BpKrzOiS8"}
                          image={addImageAlt(
                            {
                              pixelHeight: 1694,
                              pixelWidth: 2552,
                              src: "https://framerusercontent.com/images/LdpfaGpp3o4UYy9fAdZCfCduRk.png?width=2552&height=1694",
                              srcSet:
                                "https://framerusercontent.com/images/LdpfaGpp3o4UYy9fAdZCfCduRk.png?scale-down-to=512&width=2552&height=1694 512w,https://framerusercontent.com/images/LdpfaGpp3o4UYy9fAdZCfCduRk.png?scale-down-to=1024&width=2552&height=1694 1024w,https://framerusercontent.com/images/LdpfaGpp3o4UYy9fAdZCfCduRk.png?scale-down-to=2048&width=2552&height=1694 2048w,https://framerusercontent.com/images/LdpfaGpp3o4UYy9fAdZCfCduRk.png?width=2552&height=1694 2552w",
                            },
                            ""
                          )}
                          layoutId={"BpKrzOiS8"}
                          midtones={82}
                          name={"Dither 2"}
                          pixelSize={1}
                          radius={"0px"}
                          style={{
                            height: "100%",
                            width: "100%",
                          }}
                          threshold={86}
                          width={"100%"}
                        />
                      </SmartComponentScopedContainer5>
                    </ComponentViewportProvider5>
                  )}
                  <ComponentViewportProvider5
                    height={350}
                    {...addPropertyOverrides5(
                      {
                        mwJY4Qtms: {
                          width: `max(${
                            componentViewport?.width || "100vw"
                          }, 1px)`,
                          y:
                            (componentViewport?.y || 0) +
                            0 +
                            (((componentViewport?.height || 844) - 0 - 608) /
                              2 +
                              0 +
                              0) +
                            0 +
                            0 +
                            0,
                        },
                      },
                      baseVariant,
                      gestureVariant
                    )}
                  >
                    <SmartComponentScopedContainer5
                      className={"framer-1fyxbsq-container"}
                      layoutDependency={layoutDependency}
                      layoutId={"XkNEfYRlr-container"}
                      nodeId={"XkNEfYRlr"}
                      rendersWithMotion={true}
                      scopeId={"VRXHGV2hp"}
                    >
                      {_jsx9(stdin_default3, {
                        gDJCoNC4_: true,
                        height: "100%",
                        iamrOxJRN: "f8QjOj4Bd",
                        id: "XkNEfYRlr",
                        layoutId: "XkNEfYRlr",
                        OcQdifm7Y:
                          "var(--token-4fef9130-aa55-4351-8ed5-cfba481137a7, rgb(255, 255, 255))",
                        s1C6xyggO: true,
                        style: {
                          height: "100%",
                          width: "100%",
                        },
                        variant: "Dn4XiRqix",
                        width: "100%",
                      })}
                    </SmartComponentScopedContainer5>
                  </ComponentViewportProvider5>
                </motion6.div>
                <motion6.div
                  className={"framer-1wl1mhb"}
                  data-framer-name={"Text"}
                  layoutDependency={layoutDependency}
                  layoutId={"C5GnA0rhA"}
                >
                  <RichTextWithFXWithOptimizedAppearEffect
                    __fromCanvasComponent={true}
                    __perspectiveFX={false}
                    __smartComponentFX={true}
                    __targetOpacity={1}
                    animate={animation2}
                    className={"framer-pxix6e"}
                    data-framer-appear-id={"pxix6e"}
                    fonts={["Inter"]}
                    initial={animation3}
                    layoutDependency={layoutDependency}
                    layoutId={"XyXuUcGJ5"}
                    optimized={true}
                    style={{
                      "--extracted-r6o4lv":
                        "var(--token-8acf10b0-fc55-42ff-8ac5-80a79dc47979, rgba(255, 255, 255, 0.5))",
                      "--framer-link-text-color": "rgb(0, 153, 255)",
                      "--framer-link-text-decoration": "underline",
                    }}
                    verticalAlignment={"top"}
                    withExternalLayout={true}
                  >
                    <React5.Fragment>
                      <motion6.p
                        className={"framer-styles-preset-d4fts2"}
                        data-styles-preset={"bRzBDjLMv"}
                        style={{
                          "--framer-text-alignment": "center",
                          "--framer-text-color":
                            "var(--extracted-r6o4lv, var(--token-8acf10b0-fc55-42ff-8ac5-80a79dc47979, rgba(255, 255, 255, 0.5)))",
                        }}
                      >
                        {
                          "We\u2019re still working on this feature. Coming soon!"
                        }
                      </motion6.p>
                    </React5.Fragment>
                  </RichTextWithFXWithOptimizedAppearEffect>
                  <MotionDivWithFXWithOptimizedAppearEffect
                    __perspectiveFX={false}
                    __smartComponentFX={true}
                    __targetOpacity={1}
                    animate={animation4}
                    className={"framer-qtej5l"}
                    data-framer-appear-id={"qtej5l"}
                    data-framer-name={"Actions"}
                    initial={animation3}
                    layoutDependency={layoutDependency}
                    layoutId={"qBrW8nF0m"}
                    optimized={true}
                  >
                    <ComponentViewportProvider5
                      height={40}
                      {...addPropertyOverrides5(
                        {
                          mwJY4Qtms: {
                            y:
                              (componentViewport?.y || 0) +
                              0 +
                              (((componentViewport?.height || 844) - 0 - 608) /
                                2 +
                                0 +
                                0) +
                              0 +
                              380 +
                              0 +
                              144 +
                              0,
                          },
                        },
                        baseVariant,
                        gestureVariant
                      )}
                    >
                      <SmartComponentScopedContainer5
                        className={"framer-nkol1h-container"}
                        layoutDependency={layoutDependency}
                        layoutId={"kHixuYsoT-container"}
                        nodeId={"kHixuYsoT"}
                        rendersWithMotion={true}
                        scopeId={"VRXHGV2hp"}
                      >
                        <ButtonWithNavigateBacknkol1hWithMappedReactProps1v1ipky
                          D9dBYabSn={false}
                          height={"100%"}
                          id={"kHixuYsoT"}
                          layoutId={"kHixuYsoT"}
                          qCxNvGxTB={"Default"}
                          SMZpJms0Q={"Go back"}
                          style={{
                            height: "100%",
                          }}
                          variant={"UItccn4nC"}
                          width={"100%"}
                        />
                      </SmartComponentScopedContainer5>
                    </ComponentViewportProvider5>
                  </MotionDivWithFXWithOptimizedAppearEffect>
                </motion6.div>
                <ComponentViewportProvider5
                  {...addPropertyOverrides5(
                    {
                      mwJY4Qtms: {
                        height: 608,
                        width: componentViewport?.width || "100vw",
                        y:
                          (componentViewport?.y || 0) +
                          0 +
                          (((componentViewport?.height || 844) - 0 - 608) / 2 +
                            0 +
                            0) +
                          0,
                      },
                    },
                    baseVariant,
                    gestureVariant
                  )}
                >
                  <SmartComponentScopedContainer5
                    className={"framer-xmoh4f-container"}
                    layoutDependency={layoutDependency}
                    layoutId={"boDgQSa0t-container"}
                    nodeId={"boDgQSa0t"}
                    rendersWithMotion={true}
                    scopeId={"VRXHGV2hp"}
                  >
                    {_jsx9(stdin_default2, {
                      height: "100%",
                      id: "boDgQSa0t",
                      layoutId: "boDgQSa0t",
                      style: {
                        height: "100%",
                        width: "100%",
                      },
                      variant: "yzIFdYlxZ",
                      width: "100%",
                    })}
                  </SmartComponentScopedContainer5>
                </ComponentViewportProvider5>
              </motion6.div>
            )}
          </motion6.div>
        </Transition5>
      </Variants5>
    </LayoutGroup5>
  );
});
var css6 = [
  "@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
  ".framer-p0W3c.framer-s5phdj, .framer-p0W3c .framer-s5phdj { display: block; }",
  ".framer-p0W3c.framer-1vy5uxl { align-content: center; align-items: center; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: 800px; justify-content: center; overflow: var(--overflow-clip-fallback, clip); padding: 0px; position: relative; width: 200px; }",
  ".framer-p0W3c .framer-10bse0t { align-content: center; align-items: center; display: flex; flex: 1 0 0px; flex-direction: column; flex-wrap: nowrap; gap: 30px; height: min-content; justify-content: center; overflow: hidden; padding: 0px 0px 44px 0px; position: relative; width: 1px; z-index: 3; }",
  ".framer-p0W3c .framer-o20o4d { align-content: center; align-items: center; aspect-ratio: 1.022857142857143 / 1; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 0px; height: var(--framer-aspect-ratio-supported, 196px); justify-content: center; overflow: hidden; padding: 0px; position: relative; width: 100%; }",
  ".framer-p0W3c .framer-udnz4q-container { bottom: 0px; flex: none; left: 0px; position: absolute; right: 0px; top: 0px; z-index: 2; }",
  ".framer-p0W3c .framer-w5mpuf-container { flex: 1 0 0px; height: 100%; position: relative; width: 1px; }",
  ".framer-p0W3c .framer-1fyxbsq-container { flex: 1 0 0px; height: 100%; position: relative; width: 1px; z-index: 3; }",
  ".framer-p0W3c .framer-1wl1mhb { align-content: center; align-items: center; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 24px; height: min-content; justify-content: center; overflow: visible; padding: 0px; position: relative; width: 100%; }",
  ".framer-p0W3c .framer-pxix6e { flex: none; height: auto; max-width: 240px; position: relative; white-space: pre-wrap; width: 100%; word-break: break-word; word-wrap: break-word; }",
  ".framer-p0W3c .framer-qtej5l { align-content: center; align-items: center; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: center; overflow: hidden; padding: 0px; position: relative; width: min-content; }",
  ".framer-p0W3c .framer-nkol1h-container { flex: none; height: 40px; position: relative; width: auto; }",
  ".framer-p0W3c .framer-xmoh4f-container { -webkit-user-select: none; bottom: 0px; flex: none; left: 0px; pointer-events: none; position: absolute; right: 0px; top: 0px; user-select: none; z-index: 2; }",
  ".framer-p0W3c.framer-v-rwh031.framer-1vy5uxl { flex-direction: column; height: 844px; width: 390px; }",
  ".framer-p0W3c.framer-v-rwh031 .framer-10bse0t { flex: none; width: 100%; }",
  ".framer-p0W3c.framer-v-rwh031 .framer-o20o4d { height: var(--framer-aspect-ratio-supported, 381px); }",
  ...css,
];
var FramerVRXHGV2hp = withCSS5(Component5, css6, "framer-p0W3c");
var stdin_default5 = FramerVRXHGV2hp;
FramerVRXHGV2hp.displayName = "comingSoon";
FramerVRXHGV2hp.defaultProps = {
  height: 800,
  width: 200,
};
addPropertyControls8(FramerVRXHGV2hp, {
  variant: {
    options: ["UVOHvsxtD", "mwJY4Qtms"],
    optionTitles: ["Desktop", "Phone"],
    title: "Variant",
    type: ControlType8.Enum,
  },
});
addFonts5(
  FramerVRXHGV2hp,
  [
    {
      explicitInter: true,
      fonts: [
        {
          family: "Inter",
          source: "framer",
          style: "normal",
          unicodeRange:
            "U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F",
          url: "https://framerusercontent.com/assets/5vvr9Vy74if2I6bQbJvbw7SY1pQ.woff2",
          weight: "400",
        },
        {
          family: "Inter",
          source: "framer",
          style: "normal",
          unicodeRange: "U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116",
          url: "https://framerusercontent.com/assets/EOr0mi4hNtlgWNn9if640EZzXCo.woff2",
          weight: "400",
        },
        {
          family: "Inter",
          source: "framer",
          style: "normal",
          unicodeRange: "U+1F00-1FFF",
          url: "https://framerusercontent.com/assets/Y9k9QrlZAqio88Klkmbd8VoMQc.woff2",
          weight: "400",
        },
        {
          family: "Inter",
          source: "framer",
          style: "normal",
          unicodeRange: "U+0370-03FF",
          url: "https://framerusercontent.com/assets/OYrD2tBIBPvoJXiIHnLoOXnY9M.woff2",
          weight: "400",
        },
        {
          family: "Inter",
          source: "framer",
          style: "normal",
          unicodeRange:
            "U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF",
          url: "https://framerusercontent.com/assets/JeYwfuaPfZHQhEG8U5gtPDZ7WQ.woff2",
          weight: "400",
        },
        {
          family: "Inter",
          source: "framer",
          style: "normal",
          unicodeRange:
            "U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2070, U+2074-207E, U+2080-208E, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD",
          url: "https://framerusercontent.com/assets/GrgcKwrN6d3Uz8EwcLHZxwEfC4.woff2",
          weight: "400",
        },
        {
          family: "Inter",
          source: "framer",
          style: "normal",
          unicodeRange:
            "U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB",
          url: "https://framerusercontent.com/assets/b6Y37FthZeALduNqHicBT6FutY.woff2",
          weight: "400",
        },
      ],
    },
    ...DitherFonts2,
    ...AnimatedIllustrationFonts,
    ...ButtonFonts,
    ...MainSiteGridBorderFonts2,
    ...getFontsFromSharedStyle(fonts),
  ],
  {
    supportsExplicitInterCodegen: true,
  }
);

// virtual:coming-soon
import { WithFramerBreakpoints } from "unframer";

// virtual:__routes
var routes = {
  Agq1L2jDe: {
    path: "/lib/careers/:slug",
  },
  DEi7PWhxw: {
    path: "/coming-soon",
  },
  J_r8CT7G7: {
    path: "/lib/about",
  },
  MiKvYzstd: {
    path: "/disconnect",
  },
  Mxb74mbpa: {
    path: "/verify-social",
  },
  OegBE_J9e: {
    path: "/lib/home",
  },
  SOf0RbDE_: {
    path: "/lib/blog",
  },
  TQDjkQC2A: {
    path: "/lib/contact",
  },
  UVAM5_4oX: {
    path: "/verify",
  },
  XanNBrFME: {
    path: "/kyc",
  },
  YBTUYW5mq: {
    path: "/lib/pricing",
  },
  a5CCfdDiy: {
    path: "/lib/updates/:slug",
  },
  augiA20Il: {
    path: "/",
  },
  cpP7I9WGp: {
    path: "/404",
  },
  e9YIc4Uv5: {
    path: "/lib/waitlist",
  },
  inNalAASs: {
    path: "/lib/blog/:slug",
  },
  ixIXvnG3U: {
    path: "/lib/legal/:slug",
  },
  nhNLVf3qq: {
    path: "/connections",
  },
  rX7FOhQc0: {
    path: "/lib/updates",
  },
  so5jTiDIE: {
    path: "/lib/careers",
  },
};

// virtual:coming-soon
import { jsx } from "react/jsx-runtime";
var locales = [];
var defaultResponsiveVariants = {
  base: "mwJY4Qtms",
};
/** @type {function(Props): any} */
function ComponentWithRoot({ locale, ...rest }) {
  return (
    <ContextProviders
      routes={routes}
      framerSiteId={
        "c32b11589f2bc68bdb1b6d8b6f1517c87e280d7db56dec1009246311f93861da"
      }
      locale={locale}
      locales={locales}
    >
      {jsx(stdin_default5, {
        ...rest,
      })}
    </ContextProviders>
  );
}
/**
 * @type {import("unframer").UnframerBreakpoint}
 * Represents a responsive breakpoint for unframer.
 */

/**
 * @typedef VariantsMap
 * Partial record of UnframerBreakpoint to Props.variant, with a mandatory 'base' key.
 * { [key in UnframerBreakpoint]?: Props['variant'] } & { base: Props['variant'] }
 */

/**
 * Renders ComingSoonFramerComponent for all breakpoints with a variants map. Variant prop is inferred per breakpoint.
 * @function
 * @param {Omit<Props, 'variant'> & {variants?: VariantsMap}} props
 * @returns {any}
 */
ComponentWithRoot.Responsive = ({ locale = "", ...rest }) => {
  return (
    <ContextProviders
      routes={routes}
      framerSiteId={
        "c32b11589f2bc68bdb1b6d8b6f1517c87e280d7db56dec1009246311f93861da"
      }
      locale={locale}
      locales={locales}
    >
      <WithFramerBreakpoints
        Component={stdin_default5}
        variants={defaultResponsiveVariants}
        {...rest}
      />
    </ContextProviders>
  );
};
Object.assign(ComponentWithRoot, stdin_default5);
var coming_soon_default = ComponentWithRoot;
export { coming_soon_default as default };
