// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project c32b11589f2bc68b "humanpass", do not edit manually */
"use client";

/**
 * @typedef Locale
 * string
 */

/**
 * @typedef {{
 * children?: React.ReactNode
 * locale?: Locale
 * style?: React.CSSProperties
 * className?: string
 * id?: string
 * ref?: any
 * width?: any
 * height?: any
 * layoutId?: string
}} Props

 */
import { withOnClickManage } from "./chunks/chunk-HDQV3VV6.js";
import { routes } from "./chunks/chunk-QMBC2E5Z.js";
import { DashedBorderFrame } from "./chunks/chunk-R527CHIA.js";
import { __export } from "./chunks/chunk-WSFCRVEQ.js";

// virtual:connection-section-header
import { ContextProviders } from "unframer";

// /:https://framerusercontent.com/modules/ERSaax6IdH6fprufHLis/Vn1M7VOkXUcrxtxcZvAw/hi3n2Mm04.js
import * as React3 from "react";
import { useRef as useRef3 } from "react";
import {
  addFonts as addFonts2,
  ComponentViewportProvider as ComponentViewportProvider2,
  cx as cx3,
  getFonts as getFonts2,
  getFontsFromSharedStyle,
  LayoutGroup as LayoutGroup2,
  motion as motion3,
  MotionConfigContext as MotionConfigContext2,
  RichText as RichText2,
  SmartComponentScopedContainer as SmartComponentScopedContainer2,
  useComponentViewport as useComponentViewport2,
  useLocaleInfo as useLocaleInfo2,
  useVariantState as useVariantState2,
  withCodeBoundaryForOverrides,
  withCSS as withCSS3,
  withMappedReactProps,
} from "unframer";

// /:https://framerusercontent.com/modules/1cmGFXKNzw4T2OoH5BFF/ED999Wz83wnE6vWZemK1/ZgYnZ4Tr8.js
import * as React2 from "react";
import { useRef as useRef2 } from "react";
import { jsx as _jsx3 } from "react/jsx-runtime";
import {
  addFonts,
  addPropertyControls as addPropertyControls3,
  ComponentViewportProvider,
  ControlType as ControlType3,
  cx as cx2,
  fontStore,
  getFonts,
  LayoutGroup,
  Link,
  motion as motion2,
  MotionConfigContext,
  RichText,
  SmartComponentScopedContainer,
  useComponentViewport,
  useLocaleInfo,
  useVariantState,
  withCSS as withCSS2,
} from "unframer";
fontStore.loadFonts([
  "BI;Raveo Variable/variable/v0",
  "BI;Raveo Variable/variable/v0VF=Im9wc3oiIDE0LCAid2dodCIgNTUw",
  "BI;Raveo Variable/variable/v0VF=Im9wc3oiIDE0LCAid2dodCIgNTUw",
  "BI;Raveo Variable/variable/v0VF=Im9wc3oiIDE0LCAid2dodCIgNTUw",
]);
var variationAxes = [
  {
    defaultValue: 14,
    maxValue: 32,
    minValue: 14,
    name: "Optical size",
    tag: "opsz",
  },
  {
    defaultValue: 400,
    maxValue: 900,
    minValue: 100,
    name: "Weight",
    tag: "wght",
  },
];
var fonts = [
  {
    explicitInter: true,
    fonts: [
      {
        family: "Raveo Variable",
        source: "builtIn",
        style: "normal",
        url: "https://framerusercontent.com/assets/JEdA86oNqHX1i1CLD92Q7jTxV8.woff2",
        variationAxes,
        weight: "1000",
      },
    ],
  },
];
var css = [
  '.framer-8VhvX .framer-styles-preset-1mvjsmq:not(.rich-text-wrapper), .framer-8VhvX .framer-styles-preset-1mvjsmq.rich-text-wrapper h4 { --framer-font-family: "Raveo Variable Variable", sans-serif; --framer-font-family-bold: "Raveo Variable Variable", sans-serif; --framer-font-family-bold-italic: "Raveo Variable Variable", sans-serif; --framer-font-family-italic: "Raveo Variable Variable", sans-serif; --framer-font-open-type-features: normal; --framer-font-size: calc(var(--framer-root-font-size, 1rem) * 1.2); --framer-font-style: normal; --framer-font-style-bold: normal; --framer-font-style-bold-italic: normal; --framer-font-style-italic: normal; --framer-font-variation-axes: "opsz" 14, "wght" 550; --framer-font-variation-axes-bold: "opsz" 14, "wght" 550; --framer-font-variation-axes-bold-italic: "opsz" 14, "wght" 550; --framer-font-variation-axes-italic: "opsz" 14, "wght" 550; --framer-font-weight: 1000; --framer-font-weight-bold: 1000; --framer-font-weight-bold-italic: 1000; --framer-font-weight-italic: 1000; --framer-letter-spacing: -0.01em; --framer-line-height: 1.4em; --framer-paragraph-spacing: 40px; --framer-text-alignment: left; --framer-text-color: var(--token-4fef9130-aa55-4351-8ed5-cfba481137a7, #ffffff); --framer-text-decoration: none; --framer-text-stroke-color: initial; --framer-text-stroke-width: initial; --framer-text-transform: none; }',
];
var className = "framer-8VhvX";

// /:https://framerusercontent.com/modules/qFN2CSltK1GaZKZUBVKv/UhTY3YgsGqPUoXYJQ7Z3/T9Ghiu5oW.js
var T9Ghiu5oW_exports = {};
__export(T9Ghiu5oW_exports, {
  __FramerMetadata__: () => __FramerMetadata__,
  default: () => stdin_default2,
});

// /:https://framerusercontent.com/modules/1oMTLy48mQlkHUIQamxl/LQz0SsKx4UpdYoEs5F0b/TextGlitch.js
import { useEffect, useRef, useState } from "react";
import { addPropertyControls, ControlType, RenderTarget } from "unframer";
var DEFAULT_SCRAMBLE_CHARS =
  "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+-=[]{}|;:,.<>?";
function TextGlitch(props) {
  const { text, font, color, scrambleColor, duration, style, glitch } = props;
  const [display, setDisplay] = useState(text);
  const [scrambling, setScrambling] = useState(false);
  const intervalRef = useRef(null);
  const timeoutRef = useRef(null);
  const chars = (props.scrambleChars || DEFAULT_SCRAMBLE_CHARS).split("");
  useEffect(() => {
    if (!glitch) {
      setDisplay(text);
      setScrambling(false);
      return;
    }
    if (RenderTarget.current() !== RenderTarget.preview) {
      setDisplay(text);
      setScrambling(false);
      return;
    }
    if (RenderTarget.current() === RenderTarget.thumbnail) {
      setDisplay(text);
      setScrambling(false);
      return;
    }
    setDisplay(text);
    setScrambling(true);
    let frame = 0;
    const scramble = () => {
      const percent = Math.max(0, Math.min(100, props.scramblePercent ?? 100));
      let scrambled = text
        .split("")
        .map((c, i) => {
          if (c === " ") return c;
          if (Math.random() * 100 > percent) return c;
          return `<span data-scramble="1">${
            chars[Math.floor(Math.random() * chars.length)]
          }</span>`;
        })
        .join("");
      setDisplay(scrambled);
      frame++;
    };
    intervalRef.current = window.setInterval(scramble, props.speed || 40);
    timeoutRef.current = window.setTimeout(() => {
      if (intervalRef.current) clearInterval(intervalRef.current);
      setDisplay(text);
      setScrambling(false);
    }, duration);
    return () => {
      if (intervalRef.current) clearInterval(intervalRef.current);
      if (timeoutRef.current) clearTimeout(timeoutRef.current);
    };
  }, [text, duration, glitch, props.scrambleChars]);
  function renderText() {
    const { weight, optical } = props.variable || {
      weight: 400,
      optical: 22,
    };
    const fontVariation = {
      fontWeight: weight,
      fontVariationSettings: `'wght' ${weight}, 'opsz' ${optical}`,
    };
    const styleBase = {
      ...font,
      color,
      ...fontVariation,
    };
    if (!scrambling) return <span style={styleBase}>{text}</span>;
    const parts = display.split(/(<span data-scramble="1">.*?<\/span>)/g);
    return (
      <span style={styleBase}>
        {parts.map((part, i) => {
          if (part.startsWith('<span data-scramble="1">')) {
            const letter = part.replace(/<.*?>/g, "");
            return (
              <span
                style={{
                  color: scrambleColor,
                }}
              >
                {letter}
              </span>
            );
          }
          return <span>{part}</span>;
        })}
      </span>
    );
  }
  const isFixedWidth = style && style.width === "100%";
  const isFixedHeight = style && style.height === "100%";
  return (
    <div
      style={{
        ...style,
        position: "relative",
        width: isFixedWidth ? "100%" : "max-content",
        minWidth: isFixedWidth ? void 0 : "max-content",
        height: isFixedHeight ? "100%" : void 0,
      }}
    >
      {renderText()}
    </div>
  );
}
TextGlitch.displayName = "Text Glitch";
addPropertyControls(TextGlitch, {
  text: {
    type: ControlType.String,
    title: "Text",
    defaultValue: "Scramble Me!",
  },
  font: {
    type: ControlType.Font,
    title: "Font",
    controls: "extended",
    defaultFontType: "sans-serif",
    defaultValue: {
      fontSize: 22,
      variant: "Semibold",
      letterSpacing: "-0.01em",
      lineHeight: "1.2em",
    },
  },
  variable: {
    type: ControlType.Object,
    title: "Variable",
    controls: {
      optical: {
        type: ControlType.Number,
        title: "Optical",
        defaultValue: 22,
        min: 14,
        max: 32,
        step: 1,
      },
      weight: {
        type: ControlType.Number,
        title: "Weight",
        defaultValue: 400,
        min: 100,
        max: 900,
        step: 1,
      },
    },
    defaultValue: {
      optical: 22,
      weight: 400,
    },
  },
  color: {
    type: ControlType.Color,
    title: "Color",
    defaultValue: "#000000",
  },
  scrambleColor: {
    type: ControlType.Color,
    title: "Scrambled",
    defaultValue: "#8855FF",
  },
  scrambleChars: {
    // <-- Add the control
    type: ControlType.String,
    title: "Chars",
    defaultValue: DEFAULT_SCRAMBLE_CHARS,
    displayTextArea: true,
  },
  scramblePercent: {
    type: ControlType.Number,
    title: "Scramble %",
    defaultValue: 100,
    min: 0,
    max: 100,
    unit: "%",
    step: 1,
  },
  speed: {
    type: ControlType.Number,
    title: "Speed",
    defaultValue: 40,
    min: 10,
    max: 200,
    unit: "ms",
    step: 1,
  },
  duration: {
    type: ControlType.Number,
    title: "Duration",
    defaultValue: 1200,
    min: 200,
    max: 5e3,
    unit: "ms",
    step: 50,
  },
  glitch: {
    type: ControlType.Boolean,
    title: "Glitch",
    enabledTitle: "Yes",
    disabledTitle: "No",
    defaultValue: true,
  },
});

// /:https://framerusercontent.com/modules/9L4FLiC6HhjL9oF7uCBp/cfFIfkhhb0GFRZsdioUR/O2rdC6NEQ.js
import * as React from "react";
import { forwardRef as forwardRef2 } from "react";
import {
  addPropertyControls as addPropertyControls2,
  ControlType as ControlType2,
  cx,
  motion,
  withCSS,
} from "unframer";
var mask = `url('data:image/svg+xml,<svg display="block" role="presentation" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M 0 0 L 0 8 L 0 8 L 8 8" fill="transparent" height="8.000000000000057px" id="tTgRUrblN" stroke-dasharray="0" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" stroke="var(--13bnw74, rgb(255, 255, 255))" transform="translate(9.832 7.978) rotate(45 4 4)" width="8.000000000000002px"/></svg>') alpha no-repeat center / auto var(--framer-icon-mask-mode, add), var(--framer-icon-mask, none)`;
var SVG = /* @__PURE__ */ forwardRef2((props, ref) => {
  const { animated, layoutId, children, ...rest } = props;
  return animated ? (
    <motion.div {...rest} layoutId={layoutId} ref={ref} />
  ) : (
    <div {...rest} ref={ref} />
  );
});
var getProps = ({ color, fill, height, id, width, ...props }) => {
  return {
    ...props,
    HN7TZix3o: color ?? props.HN7TZix3o ?? "rgb(255, 255, 255)",
    judN_LhGq: fill ?? props.judN_LhGq ?? "rgb(255, 255, 255)",
  };
};
var Component = /* @__PURE__ */ React.forwardRef(function (props, ref) {
  const {
    style,
    className: className2,
    layoutId,
    variant,
    HN7TZix3o,
    judN_LhGq,
    ...restProps
  } = getProps(props);
  return (
    <SVG
      {...restProps}
      className={cx("framer-4rldo", className2)}
      layoutId={layoutId}
      ref={ref}
      style={{
        "--13bnw74": HN7TZix3o,
        ...style,
      }}
    />
  );
});
var css2 = [
  `.framer-4rldo { -webkit-mask: ${mask}; aspect-ratio: 1; background-color: var(--13bnw74); mask: ${mask}; width: 24px; }`,
];
var Icon = withCSS(Component, css2, "framer-4rldo");
Icon.displayName = "Caret Left";
var stdin_default = Icon;
addPropertyControls2(Icon, {
  HN7TZix3o: {
    defaultValue: "rgb(255, 255, 255)",
    hidden: false,
    title: "Color",
    type: ControlType2.Color,
  },
  judN_LhGq: {
    defaultValue: "rgb(255, 255, 255)",
    hidden: true,
    title: "Fill",
    type: ControlType2.Color,
  },
});

// /:https://framerusercontent.com/modules/qFN2CSltK1GaZKZUBVKv/UhTY3YgsGqPUoXYJQ7Z3/T9Ghiu5oW.js
var CaretLeftFonts = getFonts(stdin_default);
var AnimatedDashedBorderFonts = getFonts(DashedBorderFrame);
var TextGlitchFonts = getFonts(TextGlitch);
var enabledGestures = {
  C75ZaKEQi: {
    hover: true,
  },
  eqE432IsG: {
    hover: true,
  },
};
var cycleOrder = ["C75ZaKEQi", "eqE432IsG"];
var serializationHash = "framer-gr9iI";
var variantClassNames = {
  C75ZaKEQi: "framer-v-4k7rmk",
  eqE432IsG: "framer-v-158x1ro",
};
function addPropertyOverrides(overrides, ...variants) {
  const nextOverrides = {};
  variants?.forEach(
    (variant) => variant && Object.assign(nextOverrides, overrides[variant])
  );
  return nextOverrides;
}
var transition1 = {
  bounce: 0,
  delay: 0,
  duration: 0.4,
  type: "spring",
};
var transformTemplate1 = (_, t) => `translate(-50%, -50%) ${t}`;
var transformTemplate2 = (_, t) => `translateY(-50%) ${t}`;
var Transition = ({ value, children }) => {
  const config = React2.useContext(MotionConfigContext);
  const transition = value ?? config.transition;
  const contextValue = React2.useMemo(
    () => ({
      ...config,
      transition,
    }),
    [JSON.stringify(transition)]
  );
  return (
    <MotionConfigContext.Provider value={contextValue}>
      {children}
    </MotionConfigContext.Provider>
  );
};
var Variants = motion2.create(React2.Fragment);
var humanReadableVariantMap = {
  "Left Icon": "C75ZaKEQi",
  "Right Icon": "eqE432IsG",
};
var getProps2 = ({ height, id, label, link, width, ...props }) => {
  return {
    ...props,
    lEpcO9Z5J: link ?? props.lEpcO9Z5J,
    v5GqrO6jM: label ?? props.v5GqrO6jM ?? "Back",
    variant:
      humanReadableVariantMap[props.variant] ?? props.variant ?? "C75ZaKEQi",
  };
};
var createLayoutDependency = (props, variants) => {
  if (props.layoutDependency)
    return variants.join("-") + props.layoutDependency;
  return variants.join("-");
};
var Component2 = /* @__PURE__ */ React2.forwardRef(function (props, ref) {
  const fallbackRef = useRef2(null);
  const refBinding = ref ?? fallbackRef;
  const defaultLayoutId = React2.useId();
  const { activeLocale, setLocale } = useLocaleInfo();
  const componentViewport = useComponentViewport();
  const {
    style,
    className: className2,
    layoutId,
    variant,
    v5GqrO6jM,
    lEpcO9Z5J,
    ...restProps
  } = getProps2(props);
  const {
    baseVariant,
    classNames,
    clearLoadingGesture,
    gestureHandlers,
    gestureVariant,
    isLoading,
    setGestureState,
    setVariant,
    variants,
  } = useVariantState({
    cycleOrder,
    defaultVariant: "C75ZaKEQi",
    enabledGestures,
    ref: refBinding,
    variant,
    variantClassNames,
  });
  const layoutDependency = createLayoutDependency(props, variants);
  const sharedStyleClassNames = [];
  const scopingClassNames = cx2(serializationHash, ...sharedStyleClassNames);
  return (
    <LayoutGroup id={layoutId ?? defaultLayoutId}>
      <Variants animate={variants} initial={false}>
        <Transition value={transition1}>
          <Link
            href={lEpcO9Z5J}
            motionChild={true}
            nodeId={"C75ZaKEQi"}
            openInNewTab={false}
            scopeId={"T9Ghiu5oW"}
          >
            <motion2.a
              {...restProps}
              {...gestureHandlers}
              className={`${cx2(
                scopingClassNames,
                "framer-4k7rmk",
                className2,
                classNames
              )} framer-1rsym9a`}
              data-framer-name={"Left Icon"}
              layoutDependency={layoutDependency}
              layoutId={"C75ZaKEQi"}
              ref={refBinding}
              style={{
                ...style,
              }}
              {...addPropertyOverrides(
                {
                  "C75ZaKEQi-hover": {
                    "data-framer-name": void 0,
                  },
                  "eqE432IsG-hover": {
                    "data-framer-name": void 0,
                  },
                  eqE432IsG: {
                    "data-framer-name": "Right Icon",
                  },
                },
                baseVariant,
                gestureVariant
              )}
            >
              <motion2.div
                className={"framer-zekl27"}
                data-framer-name={"Content"}
                layoutDependency={layoutDependency}
                layoutId={"mJllyQKxH"}
                style={{
                  backgroundColor:
                    "var(--token-fa07d228-afbe-4fad-9a44-2fb0dadd2a5e, rgb(23, 23, 23))",
                  borderBottomLeftRadius: "50%",
                  borderBottomRightRadius: "50%",
                  borderTopLeftRadius: "50%",
                  borderTopRightRadius: "50%",
                  rotate: 0,
                }}
                variants={{
                  "C75ZaKEQi-hover": {
                    backgroundColor:
                      "var(--token-bb3f9735-47c4-4ac2-b002-c5446021aee6, rgb(0, 0, 0))",
                    rotate: 0,
                  },
                  eqE432IsG: {
                    rotate: 180,
                  },
                }}
              >
                {_jsx3(stdin_default, {
                  animated: true,
                  className: "framer-muzojw",
                  layoutDependency,
                  layoutId: "p0Kyf7_2W",
                  style: {
                    "--13bnw74":
                      "var(--token-4fef9130-aa55-4351-8ed5-cfba481137a7, rgb(255, 255, 255))",
                  },
                  transformTemplate: transformTemplate1,
                  ...addPropertyOverrides(
                    {
                      "C75ZaKEQi-hover": {
                        transformTemplate: transformTemplate2,
                      },
                      "eqE432IsG-hover": {
                        transformTemplate: transformTemplate2,
                      },
                    },
                    baseVariant,
                    gestureVariant
                  ),
                })}
                {_jsx3(stdin_default, {
                  animated: true,
                  className: "framer-1afp1mk",
                  layoutDependency,
                  layoutId: "Mli4AM5yl",
                  style: {
                    "--13bnw74":
                      "var(--token-4fef9130-aa55-4351-8ed5-cfba481137a7, rgb(255, 255, 255))",
                  },
                  transformTemplate: transformTemplate2,
                  ...addPropertyOverrides(
                    {
                      "C75ZaKEQi-hover": {
                        transformTemplate: transformTemplate1,
                      },
                      "eqE432IsG-hover": {
                        transformTemplate: transformTemplate1,
                      },
                    },
                    baseVariant,
                    gestureVariant
                  ),
                })}
                <ComponentViewportProvider>
                  <SmartComponentScopedContainer
                    className={"framer-1kt3qff-container"}
                    isAuthoredByUser={true}
                    isModuleExternal={true}
                    layoutDependency={layoutDependency}
                    layoutId={"dxHXA04OP-container"}
                    nodeId={"dxHXA04OP"}
                    rendersWithMotion={true}
                    scopeId={"T9Ghiu5oW"}
                    style={{
                      opacity: 0,
                    }}
                    variants={{
                      "C75ZaKEQi-hover": {
                        opacity: 1,
                      },
                    }}
                  >
                    <DashedBorderFrame
                      animation={{
                        animated: false,
                        direction: "clockwise",
                        speed: 2,
                      }}
                      borderColor={
                        "var(--token-04a04e54-cbd8-4312-8418-e1527ef396e1, rgb(51, 51, 51))"
                      }
                      borderRadius={13}
                      borderWidth={1}
                      bottom={true}
                      dashLength={8}
                      gapLength={6}
                      height={"100%"}
                      id={"dxHXA04OP"}
                      layoutId={"dxHXA04OP"}
                      left={true}
                      right={true}
                      style={{
                        height: "100%",
                        width: "100%",
                      }}
                      top={true}
                      width={"100%"}
                      {...addPropertyOverrides(
                        {
                          "C75ZaKEQi-hover": {
                            animation: {
                              animated: true,
                              direction: "clockwise",
                              speed: 2,
                            },
                          },
                        },
                        baseVariant,
                        gestureVariant
                      )}
                    />
                  </SmartComponentScopedContainer>
                </ComponentViewportProvider>
              </motion2.div>
              <motion2.div
                className={"framer-5bg9hd"}
                data-framer-name={"Text Wrap"}
                layoutDependency={layoutDependency}
                layoutId={"cRZQdR2Zv"}
                style={{
                  marginBottom: "10px",
                }}
              >
                <RichText
                  __fromCanvasComponent={true}
                  className={"framer-12dh7gc"}
                  data-framer-name={"Helper"}
                  data-nosnippet={true}
                  fonts={["BI;Raveo Variable/variable/v0"]}
                  layoutDependency={layoutDependency}
                  layoutId={"b4gbCBIh6"}
                  style={{
                    "--extracted-lqlgq3": '"opsz" 14, "wght" 550',
                    "--extracted-tcooor":
                      "var(--token-4fef9130-aa55-4351-8ed5-cfba481137a7, rgb(255, 255, 255))",
                    "--framer-link-text-color": "rgb(0, 153, 255)",
                    "--framer-link-text-decoration": "underline",
                    opacity: 0,
                  }}
                  text={v5GqrO6jM}
                  verticalAlignment={"top"}
                  withExternalLayout={true}
                >
                  <React2.Fragment>
                    <motion2.div
                      style={{
                        "--font-selector":
                          "Qkk7UmF2ZW8gVmFyaWFibGUvdmFyaWFibGUvdjBWRj1JbTl3YzNvaUlERTBMQ0FpZDJkb2RDSWdOVFV3",
                        "--framer-font-family":
                          '"Raveo Variable Variable", sans-serif',
                        "--framer-font-size": "14px",
                        "--framer-font-variation-axes":
                          'var(--extracted-lqlgq3, "opsz" 14, "wght" 550)',
                        "--framer-font-weight": "1000",
                        "--framer-letter-spacing": "-0.01em",
                        "--framer-text-alignment": "right",
                        "--framer-text-color":
                          "var(--extracted-tcooor, var(--token-4fef9130-aa55-4351-8ed5-cfba481137a7, rgb(255, 255, 255)))",
                      }}
                    >
                      {"Back"}
                    </motion2.div>
                  </React2.Fragment>
                </RichText>
                <ComponentViewportProvider>
                  <SmartComponentScopedContainer
                    className={"framer-30gg0t-container"}
                    isAuthoredByUser={true}
                    isModuleExternal={true}
                    layoutDependency={layoutDependency}
                    layoutId={"noNss2GX2-container"}
                    nodeId={"noNss2GX2"}
                    rendersWithMotion={true}
                    scopeId={"T9Ghiu5oW"}
                  >
                    <TextGlitch
                      color={
                        "var(--token-8acf10b0-fc55-42ff-8ac5-80a79dc47979, rgba(255, 255, 255, 0.5))"
                      }
                      duration={350}
                      font={{
                        fontFamily: '"Raveo Variable Variable", sans-serif',
                        fontSize: "14px",
                        fontStyle: "normal",
                        fontWeight: 1e3,
                        letterSpacing: "-0.01em",
                        lineHeight: "1.2em",
                      }}
                      glitch={false}
                      height={"100%"}
                      id={"noNss2GX2"}
                      layoutId={"noNss2GX2"}
                      scrambleChars={
                        "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+-=[]{}|;:,.<>?"
                      }
                      scrambleColor={
                        "var(--token-8acf10b0-fc55-42ff-8ac5-80a79dc47979, rgba(255, 255, 255, 0.5))"
                      }
                      scramblePercent={70}
                      speed={50}
                      text={v5GqrO6jM}
                      variable={{
                        optical: 14,
                        weight: 550,
                      }}
                      width={"100%"}
                      {...addPropertyOverrides(
                        {
                          "C75ZaKEQi-hover": {
                            color:
                              "var(--token-4fef9130-aa55-4351-8ed5-cfba481137a7, rgb(255, 255, 255))",
                            glitch: true,
                          },
                          "eqE432IsG-hover": {
                            color:
                              "var(--token-4fef9130-aa55-4351-8ed5-cfba481137a7, rgb(255, 255, 255))",
                            glitch: true,
                          },
                          eqE432IsG: {
                            font: {
                              fontFamily:
                                '"Raveo Variable Variable", sans-serif',
                              fontSize: "14px",
                              fontStyle: "normal",
                              fontWeight: 1e3,
                              letterSpacing: "-0.01em",
                              lineHeight: "1.2em",
                              textAlign: "right",
                            },
                          },
                        },
                        baseVariant,
                        gestureVariant
                      )}
                    />
                  </SmartComponentScopedContainer>
                </ComponentViewportProvider>
              </motion2.div>
            </motion2.a>
          </Link>
        </Transition>
      </Variants>
    </LayoutGroup>
  );
});
var css3 = [
  "@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
  ".framer-gr9iI.framer-1rsym9a, .framer-gr9iI .framer-1rsym9a { display: block; }",
  ".framer-gr9iI.framer-4k7rmk { align-content: center; align-items: center; cursor: pointer; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 8px; height: 34px; justify-content: flex-start; overflow: visible; padding: 0px; position: relative; text-decoration: none; width: min-content; }",
  ".framer-gr9iI .framer-zekl27 { aspect-ratio: 1 / 1; flex: none; height: var(--framer-aspect-ratio-supported, 20px); overflow: hidden; position: relative; width: 20px; will-change: var(--framer-will-change-override, transform); }",
  ".framer-gr9iI .framer-muzojw { aspect-ratio: 1 / 1; flex: none; height: var(--framer-aspect-ratio-supported, 16px); left: 50%; position: absolute; top: 50%; width: 16px; }",
  ".framer-gr9iI .framer-1afp1mk { aspect-ratio: 1 / 1; flex: none; height: var(--framer-aspect-ratio-supported, 16px); position: absolute; right: -16px; top: 50%; width: 16px; }",
  ".framer-gr9iI .framer-1kt3qff-container { bottom: 2px; flex: none; left: 2px; pointer-events: none; position: absolute; right: 2px; top: 2px; z-index: 1; }",
  ".framer-gr9iI .framer-5bg9hd { align-content: center; align-items: center; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 0px; height: min-content; justify-content: flex-start; overflow: visible; padding: 0px; position: relative; width: min-content; }",
  ".framer-gr9iI .framer-12dh7gc { flex: none; height: auto; position: relative; white-space: pre; width: auto; }",
  ".framer-gr9iI .framer-30gg0t-container { flex: none; height: auto; left: 0px; position: absolute; top: 0px; width: auto; z-index: 1; }",
  ".framer-gr9iI.framer-v-158x1ro .framer-zekl27 { order: 1; }",
  ".framer-gr9iI.framer-v-158x1ro .framer-5bg9hd { order: 0; }",
  ".framer-gr9iI.framer-v-158x1ro .framer-30gg0t-container { left: unset; right: 0px; top: 0px; }",
  ".framer-gr9iI.framer-v-4k7rmk.hover .framer-muzojw, .framer-gr9iI.framer-v-158x1ro.hover .framer-muzojw { left: -16px; }",
  ".framer-gr9iI.framer-v-4k7rmk.hover .framer-1afp1mk, .framer-gr9iI.framer-v-158x1ro.hover .framer-1afp1mk { left: 50%; right: unset; }",
  ".framer-gr9iI.framer-v-4k7rmk.hover .framer-1kt3qff-container { bottom: 0px; left: 0px; right: 0px; top: 0px; }",
  ".framer-gr9iI.framer-v-158x1ro.hover .framer-30gg0t-container { left: unset; }",
];
var FramerT9Ghiu5oW = withCSS2(Component2, css3, "framer-gr9iI");
var stdin_default2 = FramerT9Ghiu5oW;
FramerT9Ghiu5oW.displayName = "Link Button";
FramerT9Ghiu5oW.defaultProps = {
  height: 34,
  width: 60.5,
};
addPropertyControls3(FramerT9Ghiu5oW, {
  variant: {
    options: ["C75ZaKEQi", "eqE432IsG"],
    optionTitles: ["Left Icon", "Right Icon"],
    title: "Variant",
    type: ControlType3.Enum,
  },
  v5GqrO6jM: {
    defaultValue: "Back",
    title: "Label",
    type: ControlType3.String,
  },
  lEpcO9Z5J: {
    title: "Link",
    type: ControlType3.Link,
  },
});
var variationAxes2 = [
  {
    defaultValue: 14,
    maxValue: 32,
    minValue: 14,
    name: "Optical size",
    tag: "opsz",
  },
  {
    defaultValue: 400,
    maxValue: 900,
    minValue: 100,
    name: "Weight",
    tag: "wght",
  },
];
addFonts(
  FramerT9Ghiu5oW,
  [
    {
      explicitInter: true,
      fonts: [
        {
          family: "Raveo Variable",
          source: "builtIn",
          style: "normal",
          url: "https://framerusercontent.com/assets/JEdA86oNqHX1i1CLD92Q7jTxV8.woff2",
          variationAxes: variationAxes2,
          weight: "1000",
        },
      ],
    },
    ...CaretLeftFonts,
    ...AnimatedDashedBorderFonts,
    ...TextGlitchFonts,
  ],
  {
    supportsExplicitInterCodegen: true,
  }
);
var __FramerMetadata__ = {
  exports: {
    default: {
      type: "reactComponent",
      name: "FramerT9Ghiu5oW",
      slots: [],
      annotations: {
        framerImmutableVariables: "true",
        framerContractVersion: "1",
        framerDisplayContentsDiv: "false",
        framerComponentViewportWidth: "true",
        framerCanvasComponentVariantDetails:
          '{"propertyName":"variant","data":{"default":{"layout":["auto","fixed"]},"eqE432IsG":{"layout":["auto","fixed"]},"YY_zaaciy":{"layout":["auto","fixed"]},"pBgpcXPmt":{"layout":["auto","fixed"]}}}',
        framerColorSyntax: "true",
        framerIntrinsicHeight: "34",
        framerIntrinsicWidth: "60.5",
        framerAutoSizeImages: "true",
        framerVariables: '{"v5GqrO6jM":"label","lEpcO9Z5J":"link"}',
      },
    },
    Props: {
      type: "tsType",
      annotations: {
        framerContractVersion: "1",
      },
    },
    __FramerMetadata__: {
      type: "variable",
    },
  },
};

// /:https://framerusercontent.com/modules/ERSaax6IdH6fprufHLis/Vn1M7VOkXUcrxtxcZvAw/hi3n2Mm04.js
var LinkButtonFonts = getFonts2(stdin_default2);
var LinkButtonWithOnClickManagegfs1s2WithMappedReactPropssc7ej0 =
  withMappedReactProps(
    withCodeBoundaryForOverrides(stdin_default2, {
      nodeId: "rHo87DHnv",
      override: withOnClickManage,
      scopeId: "hi3n2Mm04",
    }),
    T9Ghiu5oW_exports
  );
var serializationHash2 = "framer-9bsau";
var variantClassNames2 = {
  zTzew3fSB: "framer-v-15cjjo3",
};
var transition12 = {
  bounce: 0.2,
  delay: 0,
  duration: 0.4,
  type: "spring",
};
var Transition2 = ({ value, children }) => {
  const config = React3.useContext(MotionConfigContext2);
  const transition = value ?? config.transition;
  const contextValue = React3.useMemo(
    () => ({
      ...config,
      transition,
    }),
    [JSON.stringify(transition)]
  );
  return (
    <MotionConfigContext2.Provider value={contextValue}>
      {children}
    </MotionConfigContext2.Provider>
  );
};
var Variants2 = motion3.create(React3.Fragment);
var getProps3 = ({ height, id, width, ...props }) => {
  return {
    ...props,
  };
};
var createLayoutDependency2 = (props, variants) => {
  if (props.layoutDependency)
    return variants.join("-") + props.layoutDependency;
  return variants.join("-");
};
var Component3 = /* @__PURE__ */ React3.forwardRef(function (props, ref) {
  const fallbackRef = useRef3(null);
  const refBinding = ref ?? fallbackRef;
  const defaultLayoutId = React3.useId();
  const { activeLocale, setLocale } = useLocaleInfo2();
  const componentViewport = useComponentViewport2();
  const {
    style,
    className: className2,
    layoutId,
    variant,
    ...restProps
  } = getProps3(props);
  const {
    baseVariant,
    classNames,
    clearLoadingGesture,
    gestureHandlers,
    gestureVariant,
    isLoading,
    setGestureState,
    setVariant,
    variants,
  } = useVariantState2({
    defaultVariant: "zTzew3fSB",
    ref: refBinding,
    variant,
    variantClassNames: variantClassNames2,
  });
  const layoutDependency = createLayoutDependency2(props, variants);
  const sharedStyleClassNames = [className];
  const scopingClassNames = cx3(serializationHash2, ...sharedStyleClassNames);
  return (
    <LayoutGroup2 id={layoutId ?? defaultLayoutId}>
      <Variants2 animate={variants} initial={false}>
        <Transition2 value={transition12}>
          <motion3.div
            {...restProps}
            {...gestureHandlers}
            className={cx3(
              scopingClassNames,
              "framer-15cjjo3",
              className2,
              classNames
            )}
            data-framer-name={"Desktop"}
            layoutDependency={layoutDependency}
            layoutId={"zTzew3fSB"}
            ref={refBinding}
            style={{
              ...style,
            }}
          >
            <RichText2
              __fromCanvasComponent={true}
              className={"framer-v8ec1k"}
              fonts={["Inter"]}
              layoutDependency={layoutDependency}
              layoutId={"HxCwQlj_Y"}
              style={{
                "--extracted-1eung3n":
                  "var(--token-4fef9130-aa55-4351-8ed5-cfba481137a7, rgb(255, 255, 255))",
                "--framer-link-text-color": "rgb(0, 153, 255)",
                "--framer-link-text-decoration": "underline",
              }}
              verticalAlignment={"top"}
              withExternalLayout={true}
            >
              <React3.Fragment>
                <motion3.h4
                  className={"framer-styles-preset-1mvjsmq"}
                  data-styles-preset={"ZgYnZ4Tr8"}
                  style={{
                    "--framer-text-alignment": "left",
                    "--framer-text-color":
                      "var(--extracted-1eung3n, var(--token-4fef9130-aa55-4351-8ed5-cfba481137a7, rgb(255, 255, 255)))",
                  }}
                >
                  {"Connected"}
                </motion3.h4>
              </React3.Fragment>
            </RichText2>
            <ComponentViewportProvider2
              height={34}
              y={
                (componentViewport?.y || 0) +
                (16 + ((componentViewport?.height || 62) - 28 - 34) / 2)
              }
            >
              <SmartComponentScopedContainer2
                className={"framer-gfs1s2-container"}
                layoutDependency={layoutDependency}
                layoutId={"rHo87DHnv-container"}
                nodeId={"rHo87DHnv"}
                rendersWithMotion={true}
                scopeId={"hi3n2Mm04"}
              >
                <LinkButtonWithOnClickManagegfs1s2WithMappedReactPropssc7ej0
                  height={"100%"}
                  id={"rHo87DHnv"}
                  layoutId={"rHo87DHnv"}
                  style={{
                    height: "100%",
                  }}
                  v5GqrO6jM={"Manage"}
                  variant={"eqE432IsG"}
                  width={"100%"}
                />
              </SmartComponentScopedContainer2>
            </ComponentViewportProvider2>
          </motion3.div>
        </Transition2>
      </Variants2>
    </LayoutGroup2>
  );
});
var css4 = [
  "@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
  ".framer-9bsau.framer-uj104q, .framer-9bsau .framer-uj104q { display: block; }",
  ".framer-9bsau.framer-15cjjo3 { align-content: center; align-items: center; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: flex-start; overflow: var(--overflow-clip-fallback, clip); padding: 16px 0px 12px 0px; position: relative; width: 336px; }",
  ".framer-9bsau .framer-v8ec1k { flex: 1 0 0px; height: auto; position: relative; white-space: pre-wrap; width: 1px; word-break: break-word; word-wrap: break-word; }",
  ".framer-9bsau .framer-gfs1s2-container { flex: none; height: 34px; position: relative; width: auto; }",
  ...css,
];
var Framerhi3n2Mm04 = withCSS3(Component3, css4, "framer-9bsau");
var stdin_default3 = Framerhi3n2Mm04;
Framerhi3n2Mm04.displayName = "ConnectionSectionHeader";
Framerhi3n2Mm04.defaultProps = {
  height: 62,
  width: 336,
};
addFonts2(
  Framerhi3n2Mm04,
  [
    {
      explicitInter: true,
      fonts: [
        {
          family: "Inter",
          source: "framer",
          style: "normal",
          unicodeRange:
            "U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F",
          url: "https://framerusercontent.com/assets/5vvr9Vy74if2I6bQbJvbw7SY1pQ.woff2",
          weight: "400",
        },
        {
          family: "Inter",
          source: "framer",
          style: "normal",
          unicodeRange: "U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116",
          url: "https://framerusercontent.com/assets/EOr0mi4hNtlgWNn9if640EZzXCo.woff2",
          weight: "400",
        },
        {
          family: "Inter",
          source: "framer",
          style: "normal",
          unicodeRange: "U+1F00-1FFF",
          url: "https://framerusercontent.com/assets/Y9k9QrlZAqio88Klkmbd8VoMQc.woff2",
          weight: "400",
        },
        {
          family: "Inter",
          source: "framer",
          style: "normal",
          unicodeRange: "U+0370-03FF",
          url: "https://framerusercontent.com/assets/OYrD2tBIBPvoJXiIHnLoOXnY9M.woff2",
          weight: "400",
        },
        {
          family: "Inter",
          source: "framer",
          style: "normal",
          unicodeRange:
            "U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF",
          url: "https://framerusercontent.com/assets/JeYwfuaPfZHQhEG8U5gtPDZ7WQ.woff2",
          weight: "400",
        },
        {
          family: "Inter",
          source: "framer",
          style: "normal",
          unicodeRange:
            "U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2070, U+2074-207E, U+2080-208E, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD",
          url: "https://framerusercontent.com/assets/GrgcKwrN6d3Uz8EwcLHZxwEfC4.woff2",
          weight: "400",
        },
        {
          family: "Inter",
          source: "framer",
          style: "normal",
          unicodeRange:
            "U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB",
          url: "https://framerusercontent.com/assets/b6Y37FthZeALduNqHicBT6FutY.woff2",
          weight: "400",
        },
      ],
    },
    ...LinkButtonFonts,
    ...getFontsFromSharedStyle(fonts),
  ],
  {
    supportsExplicitInterCodegen: true,
  }
);

// virtual:connection-section-header
import { jsx } from "react/jsx-runtime";
import { WithFramerBreakpoints } from "unframer";
var locales = [];
var defaultResponsiveVariants = {};
/** @type {function(Props): any} */
function ComponentWithRoot({ locale, ...rest }) {
  return (
    <ContextProviders
      routes={routes}
      framerSiteId={
        "c32b11589f2bc68bdb1b6d8b6f1517c87e280d7db56dec1009246311f93861da"
      }
      locale={locale}
      locales={locales}
    >
      {jsx(stdin_default3, {
        ...rest,
      })}
    </ContextProviders>
  );
}
/**
 * @type {import("unframer").UnframerBreakpoint}
 * Represents a responsive breakpoint for unframer.
 */

/**
 * @typedef VariantsMap
 * Partial record of UnframerBreakpoint to Props.variant, with a mandatory 'base' key.
 * { [key in UnframerBreakpoint]?: Props['variant'] } & { base: Props['variant'] }
 */

/**
 * Renders ConnectionSectionHeaderFramerComponent for all breakpoints with a variants map. Variant prop is inferred per breakpoint.
 * @function
 * @param {Omit<Props, 'variant'> & {variants?: VariantsMap}} props
 * @returns {any}
 */
ComponentWithRoot.Responsive = ({ locale = "", ...rest }) => {
  return (
    <ContextProviders
      routes={routes}
      framerSiteId={
        "c32b11589f2bc68bdb1b6d8b6f1517c87e280d7db56dec1009246311f93861da"
      }
      locale={locale}
      locales={locales}
    >
      <WithFramerBreakpoints
        Component={stdin_default3}
        variants={defaultResponsiveVariants}
        {...rest}
      />
    </ContextProviders>
  );
};
Object.assign(ComponentWithRoot, stdin_default3);
var connection_section_header_default = ComponentWithRoot;
export { connection_section_header_default as default };
