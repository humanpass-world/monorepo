// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project c32b11589f2bc68b "humanpass", do not edit manually */
"use client";

// virtual:connection-card
/**
 * @typedef Locale
 * string
 */

/**
 * @typedef {{
 * children?: React.ReactNode
 * locale?: Locale
 * style?: React.CSSProperties
 * className?: string
 * id?: string
 * ref?: any
 * width?: any
 * height?: any
 * layoutId?: string
 * variant?: 'Desktop' | 'Default' | 'No badge' // Variant
 * title?: string // title
 * subtitle?: string // subtitle
 * rightText?: string // rightText
 * image?: {src: string, srcSet?: string, alt?: string} // image
 * badgeImage?: {src: string, srcSet?: string, alt?: string} // badgeImage
}} Props

 */
import { Fragment as Fragment2 } from "react";
import { ContextProviders } from "unframer";

// /:https://framerusercontent.com/modules/SmCog6Oq1Veb5hut8yBq/mF1Gp4TNBh6XaP4UBp49/fpircRTIc.js
import { jsx as _jsx3, jsxs as _jsxs } from "react/jsx-runtime";
import {
	addFonts,
	addPropertyControls as addPropertyControls2,
	ComponentViewportProvider,
	ControlType as ControlType2,
	cx,
	getFonts,
	getFontsFromSharedStyle,
	getLoadingLazyAtYPosition,
	Image,
	RichText,
	SmartComponentScopedContainer,
	SVG,
	useComponentViewport,
	useLocaleInfo,
	useVariantState,
	withCodeBoundaryForOverrides,
	withCSS,
} from "unframer";
import { LayoutGroup, motion, MotionConfigContext } from "unframer";
import * as React from "react";
import { useRef as useRef2 } from "react";

// /:https://framerusercontent.com/modules/1oMTLy48mQlkHUIQamxl/LQz0SsKx4UpdYoEs5F0b/TextGlitch.js
import { jsx as _jsx } from "react/jsx-runtime";
import { useEffect, useRef, useState } from "react";
import { addPropertyControls, ControlType, RenderTarget } from "unframer";
var DEFAULT_SCRAMBLE_CHARS =
	"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+-=[]{}|;:,.<>?";
function TextGlitch(props) {
	const { text, font, color, scrambleColor, duration, style, glitch } = props;
	const [display, setDisplay] = useState(text);
	const [scrambling, setScrambling] = useState(false);
	const intervalRef = useRef(null);
	const timeoutRef = useRef(null);
	const chars = (props.scrambleChars || DEFAULT_SCRAMBLE_CHARS).split("");
	useEffect(() => {
		if (!glitch) {
			setDisplay(text);
			setScrambling(false);
			return;
		}
		if (RenderTarget.current() !== RenderTarget.preview) {
			setDisplay(text);
			setScrambling(false);
			return;
		}
		if (RenderTarget.current() === RenderTarget.thumbnail) {
			setDisplay(text);
			setScrambling(false);
			return;
		}
		setDisplay(text);
		setScrambling(true);
		let frame = 0;
		const scramble = () => {
			const percent = Math.max(0, Math.min(100, props.scramblePercent ?? 100));
			let scrambled = text
				.split("")
				.map((c, i) => {
					if (c === " ") return c;
					if (Math.random() * 100 > percent) return c;
					return `<span data-scramble="1">${chars[Math.floor(Math.random() * chars.length)]}</span>`;
				})
				.join("");
			setDisplay(scrambled);
			frame++;
		};
		intervalRef.current = window.setInterval(scramble, props.speed || 40);
		timeoutRef.current = window.setTimeout(() => {
			if (intervalRef.current) clearInterval(intervalRef.current);
			setDisplay(text);
			setScrambling(false);
		}, duration);
		return () => {
			if (intervalRef.current) clearInterval(intervalRef.current);
			if (timeoutRef.current) clearTimeout(timeoutRef.current);
		};
	}, [text, duration, glitch, props.scrambleChars]);
	function renderText() {
		const { weight, optical } = props.variable || {
			weight: 400,
			optical: 22,
		};
		const fontVariation = {
			fontWeight: weight,
			fontVariationSettings: `'wght' ${weight}, 'opsz' ${optical}`,
		};
		const styleBase = {
			...font,
			color,
			...fontVariation,
		};
		if (!scrambling) return <span style={styleBase}>{text}</span>;
		const parts = display.split(/(<span data-scramble="1">.*?<\/span>)/g);
		return (
			<span style={styleBase}>
				{parts.map((part, i) => {
					if (part.startsWith('<span data-scramble="1">')) {
						const letter = part.replace(/<.*?>/g, "");
						return (
							<span
								style={{
									color: scrambleColor,
								}}
							>
								{letter}
							</span>
						);
					}
					return <span>{part}</span>;
				})}
			</span>
		);
	}
	const isFixedWidth = style && style.width === "100%";
	const isFixedHeight = style && style.height === "100%";
	return (
		<div
			style={{
				...style,
				position: "relative",
				width: isFixedWidth ? "100%" : "max-content",
				minWidth: isFixedWidth ? void 0 : "max-content",
				height: isFixedHeight ? "100%" : void 0,
			}}
		>
			{renderText()}
		</div>
	);
}
TextGlitch.displayName = "Text Glitch";
addPropertyControls(TextGlitch, {
	text: {
		type: ControlType.String,
		title: "Text",
		defaultValue: "Scramble Me!",
	},
	font: {
		type: ControlType.Font,
		title: "Font",
		controls: "extended",
		defaultFontType: "sans-serif",
		defaultValue: {
			fontSize: 22,
			variant: "Semibold",
			letterSpacing: "-0.01em",
			lineHeight: "1.2em",
		},
	},
	variable: {
		type: ControlType.Object,
		title: "Variable",
		controls: {
			optical: {
				type: ControlType.Number,
				title: "Optical",
				defaultValue: 22,
				min: 14,
				max: 32,
				step: 1,
			},
			weight: {
				type: ControlType.Number,
				title: "Weight",
				defaultValue: 400,
				min: 100,
				max: 900,
				step: 1,
			},
		},
		defaultValue: {
			optical: 22,
			weight: 400,
		},
	},
	color: {
		type: ControlType.Color,
		title: "Color",
		defaultValue: "#000000",
	},
	scrambleColor: {
		type: ControlType.Color,
		title: "Scrambled",
		defaultValue: "#8855FF",
	},
	scrambleChars: {
		// <-- Add the control
		type: ControlType.String,
		title: "Chars",
		defaultValue: DEFAULT_SCRAMBLE_CHARS,
		displayTextArea: true,
	},
	scramblePercent: {
		type: ControlType.Number,
		title: "Scramble %",
		defaultValue: 100,
		min: 0,
		max: 100,
		unit: "%",
		step: 1,
	},
	speed: {
		type: ControlType.Number,
		title: "Speed",
		defaultValue: 40,
		min: 10,
		max: 200,
		unit: "ms",
		step: 1,
	},
	duration: {
		type: ControlType.Number,
		title: "Duration",
		defaultValue: 1200,
		min: 200,
		max: 5e3,
		unit: "ms",
		step: 50,
	},
	glitch: {
		type: ControlType.Boolean,
		title: "Glitch",
		enabledTitle: "Yes",
		disabledTitle: "No",
		defaultValue: true,
	},
});

// /:https://framerusercontent.com/modules/nDVghySNPhDaH5MOstwi/zlSWYZhAfkLti4Yciw5Z/TextTruncate.js
import { jsx as _jsx2 } from "react/jsx-runtime";
import { forwardRef } from "react";
function withTruncateOneLine(Component2) {
	return /* @__PURE__ */ forwardRef((props, ref) => {
		const truncateStyle = {
			display: "-webkit-box",
			WebkitLineClamp: 1,
			WebkitBoxOrient: "vertical",
			overflow: "hidden",
			textOverflow: "ellipsis",
			...props.style,
		};
		return <Component2 ref={ref} {...props} style={truncateStyle} />;
	});
}

// /:https://framerusercontent.com/modules/98ORxWqlwYbJSprEgxIC/flBGuhQnA9EJbbUQJTgQ/sQrIs9_t0.js
import { fontStore } from "unframer";
fontStore.loadFonts([
	"BI;Raveo Variable/variable/v0",
	"BI;Raveo Variable/variable/v0VF=Im9wc3oiIDE0LCAid2dodCIgNTUw",
	"BI;Raveo Variable/variable/v0VF=Im9wc3oiIDE0LCAid2dodCIgNTUw",
	"BI;Raveo Variable/variable/v0VF=Im9wc3oiIDE0LCAid2dodCIgNTUw",
]);
var variationAxes = [
	{
		defaultValue: 14,
		maxValue: 32,
		minValue: 14,
		name: "Optical size",
		tag: "opsz",
	},
	{
		defaultValue: 400,
		maxValue: 900,
		minValue: 100,
		name: "Weight",
		tag: "wght",
	},
];
var fonts = [
	{
		explicitInter: true,
		fonts: [
			{
				family: "Raveo Variable",
				source: "builtIn",
				style: "normal",
				url: "https://framerusercontent.com/assets/JEdA86oNqHX1i1CLD92Q7jTxV8.woff2",
				variationAxes,
				weight: "1000",
			},
		],
	},
];
var css = [
	'.framer-D0GFO .framer-styles-preset-ujo3da:not(.rich-text-wrapper), .framer-D0GFO .framer-styles-preset-ujo3da.rich-text-wrapper p { --framer-font-family: "Raveo Variable Variable", sans-serif; --framer-font-family-bold: "Raveo Variable Variable", sans-serif; --framer-font-family-bold-italic: "Raveo Variable Variable", sans-serif; --framer-font-family-italic: "Raveo Variable Variable", sans-serif; --framer-font-open-type-features: normal; --framer-font-size: 14px; --framer-font-style: normal; --framer-font-style-bold: normal; --framer-font-style-bold-italic: normal; --framer-font-style-italic: normal; --framer-font-variation-axes: "opsz" 14, "wght" 550; --framer-font-variation-axes-bold: "opsz" 14, "wght" 550; --framer-font-variation-axes-bold-italic: "opsz" 14, "wght" 550; --framer-font-variation-axes-italic: "opsz" 14, "wght" 550; --framer-font-weight: 1000; --framer-font-weight-bold: 1000; --framer-font-weight-bold-italic: 1000; --framer-font-weight-italic: 1000; --framer-letter-spacing: 0em; --framer-line-height: 1.5em; --framer-paragraph-spacing: 20px; --framer-text-alignment: left; --framer-text-color: var(--token-4fef9130-aa55-4351-8ed5-cfba481137a7, #ffffff); --framer-text-decoration: none; --framer-text-stroke-color: initial; --framer-text-stroke-width: initial; --framer-text-transform: none; }',
];
var className = "framer-D0GFO";

// /:https://framerusercontent.com/modules/Asle8jS96yaopu1a0AVj/MHUz3hu8LPvKEbP3fwXZ/Xa6VJQy2p.js
import { fontStore as fontStore2 } from "unframer";
fontStore2.loadFonts([
	"BI;Raveo Variable/variable/v0",
	"BI;Raveo Variable/variable/v0VF=Im9wc3oiIDE0LCAid2dodCIgNDUw",
	"BI;Raveo Variable/variable/v0VF=Im9wc3oiIDE0LCAid2dodCIgNDUw",
	"BI;Raveo Variable/variable/v0VF=Im9wc3oiIDE0LCAid2dodCIgNDUw",
]);
var variationAxes2 = [
	{
		defaultValue: 14,
		maxValue: 32,
		minValue: 14,
		name: "Optical size",
		tag: "opsz",
	},
	{
		defaultValue: 400,
		maxValue: 900,
		minValue: 100,
		name: "Weight",
		tag: "wght",
	},
];
var fonts2 = [
	{
		explicitInter: true,
		fonts: [
			{
				family: "Raveo Variable",
				source: "builtIn",
				style: "normal",
				url: "https://framerusercontent.com/assets/JEdA86oNqHX1i1CLD92Q7jTxV8.woff2",
				variationAxes: variationAxes2,
				weight: "1000",
			},
		],
	},
];
var css2 = [
	'.framer-Vac31 .framer-styles-preset-c9mga6:not(.rich-text-wrapper), .framer-Vac31 .framer-styles-preset-c9mga6.rich-text-wrapper p { --framer-font-family: "Raveo Variable Variable", sans-serif; --framer-font-family-bold: "Raveo Variable Variable", sans-serif; --framer-font-family-bold-italic: "Raveo Variable Variable", sans-serif; --framer-font-family-italic: "Raveo Variable Variable", sans-serif; --framer-font-open-type-features: normal; --framer-font-size: 14px; --framer-font-style: normal; --framer-font-style-bold: normal; --framer-font-style-bold-italic: normal; --framer-font-style-italic: normal; --framer-font-variation-axes: "opsz" 14, "wght" 450; --framer-font-variation-axes-bold: "opsz" 14, "wght" 450; --framer-font-variation-axes-bold-italic: "opsz" 14, "wght" 450; --framer-font-variation-axes-italic: "opsz" 14, "wght" 450; --framer-font-weight: 1000; --framer-font-weight-bold: 1000; --framer-font-weight-bold-italic: 1000; --framer-font-weight-italic: 1000; --framer-letter-spacing: 0em; --framer-line-height: 1.5em; --framer-paragraph-spacing: 20px; --framer-text-alignment: left; --framer-text-color: var(--token-4fef9130-aa55-4351-8ed5-cfba481137a7, #ffffff); --framer-text-decoration: none; --framer-text-stroke-color: initial; --framer-text-stroke-width: initial; --framer-text-transform: none; }',
];
var className2 = "framer-Vac31";

// /:https://framerusercontent.com/modules/SmCog6Oq1Veb5hut8yBq/mF1Gp4TNBh6XaP4UBp49/fpircRTIc.js
var RichTextWithTruncateOneLine1slf5t8 = withCodeBoundaryForOverrides(
	RichText,
	{
		nodeId: "hXPy4rEd9",
		override: withTruncateOneLine,
		scopeId: "fpircRTIc",
	},
);
var TextGlitchFonts = getFonts(TextGlitch);
var cycleOrder = ["Oqc2QVAI3", "mtpRm5qTt", "jmq5Jj50j"];
var serializationHash = "framer-OUSuO";
var variantClassNames = {
	jmq5Jj50j: "framer-v-7n34xb",
	mtpRm5qTt: "framer-v-1ikqb3w",
	Oqc2QVAI3: "framer-v-458jvp",
};
function addPropertyOverrides(overrides, ...variants) {
	const nextOverrides = {};
	variants?.forEach(
		(variant) => variant && Object.assign(nextOverrides, overrides[variant]),
	);
	return nextOverrides;
}
var transition1 = {
	bounce: 0.2,
	delay: 0,
	duration: 0.4,
	type: "spring",
};
var transformTemplate1 = (_, t) => `translate(-50%, -50%) ${t}`;
var toResponsiveImage = (value) => {
	if (
		typeof value === "object" &&
		value !== null &&
		typeof value.src === "string"
	) {
		return value;
	}
	return typeof value === "string"
		? {
				src: value,
			}
		: void 0;
};
var Transition = ({ value, children }) => {
	const config = React.useContext(MotionConfigContext);
	const transition = value ?? config.transition;
	const contextValue = React.useMemo(
		() => ({
			...config,
			transition,
		}),
		[JSON.stringify(transition)],
	);
	return (
		<MotionConfigContext.Provider value={contextValue}>
			{children}
		</MotionConfigContext.Provider>
	);
};
var Variants = motion.create(React.Fragment);
var humanReadableVariantMap = {
	"No badge": "jmq5Jj50j",
	Default: "mtpRm5qTt",
	Desktop: "Oqc2QVAI3",
};
var getProps = ({
	badgeImage,
	height,
	id,
	image,
	rightText,
	subtitle,
	title,
	width,
	...props
}) => {
	return {
		...props,
		fc0WlYwEI: badgeImage ?? props.fc0WlYwEI,
		fn6UnN3Ij: title ?? props.fn6UnN3Ij ?? "Morpho",
		fwaipJ4Um: image ??
			props.fwaipJ4Um ?? {
				alt: "",
				pixelHeight: 256,
				pixelWidth: 256,
				src: "https://framerusercontent.com/images/SoCu9v5ESU2CTcSXnQHEQFG1qU.png?width=256&height=256",
			},
		KbkufHqwY: subtitle ?? props.KbkufHqwY ?? "0x1234...ABCD",
		variant:
			humanReadableVariantMap[props.variant] ?? props.variant ?? "Oqc2QVAI3",
		yeHSisDEv: rightText ?? props.yeHSisDEv ?? "Disconnect",
	};
};
var createLayoutDependency = (props, variants) => {
	if (props.layoutDependency)
		return variants.join("-") + props.layoutDependency;
	return variants.join("-");
};
var Component = /* @__PURE__ */ React.forwardRef(function (props, ref) {
	const fallbackRef = useRef2(null);
	const refBinding = ref ?? fallbackRef;
	const defaultLayoutId = React.useId();
	const { activeLocale, setLocale } = useLocaleInfo();
	const componentViewport = useComponentViewport();
	const {
		style,
		className: className3,
		layoutId,
		variant,
		fn6UnN3Ij,
		KbkufHqwY,
		yeHSisDEv,
		fwaipJ4Um,
		fc0WlYwEI,
		...restProps
	} = getProps(props);
	const {
		baseVariant,
		classNames,
		clearLoadingGesture,
		gestureHandlers,
		gestureVariant,
		isLoading,
		setGestureState,
		setVariant,
		variants,
	} = useVariantState({
		cycleOrder,
		defaultVariant: "Oqc2QVAI3",
		ref: refBinding,
		variant,
		variantClassNames,
	});
	const layoutDependency = createLayoutDependency(props, variants);
	const sharedStyleClassNames = [className, className2];
	const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
	const isDisplayed = () => {
		if (baseVariant === "jmq5Jj50j") return false;
		return true;
	};
	const isDisplayed1 = () => {
		if (baseVariant === "mtpRm5qTt") return false;
		return true;
	};
	return (
		<LayoutGroup id={layoutId ?? defaultLayoutId}>
			<Variants animate={variants} initial={false}>
				<Transition value={transition1}>
					<motion.div
						{...restProps}
						{...gestureHandlers}
						className={cx(
							scopingClassNames,
							"framer-458jvp",
							className3,
							classNames,
						)}
						data-border={true}
						data-framer-name={"Desktop"}
						layoutDependency={layoutDependency}
						layoutId={"Oqc2QVAI3"}
						ref={refBinding}
						style={{
							"--border-bottom-width": "1px",
							"--border-color":
								"var(--token-361e1224-4029-4612-a297-51f349511b71, rgba(255, 255, 255, 0.1))",
							"--border-left-width": "1px",
							"--border-right-width": "1px",
							"--border-style": "solid",
							"--border-top-width": "1px",
							backgroundColor:
								"var(--token-22e7e14f-1f70-49cd-ae98-e88c20549e6b, rgba(255, 255, 255, 0.03))",
							borderBottomLeftRadius: 12,
							borderBottomRightRadius: 12,
							borderTopLeftRadius: 12,
							borderTopRightRadius: 12,
							...style,
						}}
						{...addPropertyOverrides(
							{
								jmq5Jj50j: {
									"data-framer-name": "No badge",
								},
								mtpRm5qTt: {
									"data-framer-name": "Default",
								},
							},
							baseVariant,
							gestureVariant,
						)}
					>
						<motion.div
							className={"framer-3q1gcj"}
							layoutDependency={layoutDependency}
							layoutId={"ub3hospSD"}
						>
							<motion.div
								className={"framer-1g7574w"}
								data-framer-name={"Icon Wrap"}
								layoutDependency={layoutDependency}
								layoutId={"jEdIyPapl"}
								style={{
									backgroundColor:
										"var(--token-ab91763a-bd8d-4b8f-92c1-f89e2462855c, rgb(28, 28, 28))",
									borderBottomLeftRadius: 188,
									borderBottomRightRadius: 188,
									borderTopLeftRadius: 188,
									borderTopRightRadius: 188,
								}}
								transformTemplate={transformTemplate1}
							>
								<Image
									background={{
										alt: "",
										fit: "fill",
										intrinsicHeight: 128,
										intrinsicWidth: 128,
										loading: getLoadingLazyAtYPosition(
											(componentViewport?.y || 0) +
												(24 +
													((componentViewport?.height || 447) - 48 - 275) / 2) +
												111.5 +
												0,
										),
										pixelHeight: 256,
										pixelWidth: 256,
										src: "https://framerusercontent.com/images/SoCu9v5ESU2CTcSXnQHEQFG1qU.png?width=256&height=256",
									}}
									className={"framer-jy3dhv"}
									data-framer-name={"Image"}
									layoutDependency={layoutDependency}
									layoutId={"xxahIbJod"}
									{...addPropertyOverrides(
										{
											jmq5Jj50j: {
												background: {
													alt: "",
													fit: "fill",
													intrinsicHeight: 128,
													intrinsicWidth: 128,
													loading: getLoadingLazyAtYPosition(
														(componentViewport?.y || 0) +
															(24 +
																((componentViewport?.height || 92) - 48 - 44) /
																	2) +
															-4 +
															0,
													),
													pixelHeight: 256,
													pixelWidth: 256,
													sizes: "44px",
													...toResponsiveImage(fwaipJ4Um),
												},
											},
											mtpRm5qTt: {
												background: {
													alt: "",
													fit: "fill",
													intrinsicHeight: 128,
													intrinsicWidth: 128,
													loading: getLoadingLazyAtYPosition(
														(componentViewport?.y || 0) +
															(24 +
																((componentViewport?.height || 92) - 48 - 44) /
																	2) +
															-4 +
															0,
													),
													pixelHeight: 256,
													pixelWidth: 256,
													sizes: "44px",
													...toResponsiveImage(fwaipJ4Um),
												},
											},
										},
										baseVariant,
										gestureVariant,
									)}
								/>
							</motion.div>
							{isDisplayed() && (
								<Image
									className={"framer-1cxf878"}
									layoutDependency={layoutDependency}
									layoutId={"LwIEjekon"}
									style={{
										backgroundColor:
											"var(--token-4fef9130-aa55-4351-8ed5-cfba481137a7, rgb(255, 255, 255))",
										borderBottomLeftRadius: 99,
										borderBottomRightRadius: 99,
										borderTopLeftRadius: 99,
										borderTopRightRadius: 99,
									}}
									variants={{
										mtpRm5qTt: {
											backgroundColor: "rgba(0, 0, 0, 0)",
										},
									}}
									{...addPropertyOverrides(
										{
											mtpRm5qTt: {
												background: {
													alt: "",
													fit: "fill",
													loading: getLoadingLazyAtYPosition(
														(componentViewport?.y || 0) +
															(24 +
																((componentViewport?.height || 92) - 48 - 44) /
																	2) +
															44 -
															16,
													),
													sizes: "16px",
													...toResponsiveImage(fc0WlYwEI),
												},
											},
										},
										baseVariant,
										gestureVariant,
									)}
								>
									{isDisplayed1() && (
										<SVG
											className={"framer-kp3ooq"}
											layoutDependency={layoutDependency}
											layoutId={"WztZQ6Lkt"}
											opacity={1}
											requiresOverflowVisible={false}
											svg={
												'<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 5.082 7.95" overflow="visible"><g><path d="M 2.541 0 L 2.541 2.938 L 5.082 4.049 Z" fill="rgb(143,252,243)"></path><path d="M 2.541 0 L 0 4.049 L 2.541 2.938 Z" fill="rgb(202,188,248)"></path><path d="M 2.541 5.953 L 2.541 7.95 L 5.082 4.512 Z" fill="rgb(203,167,245)"></path><path d="M 2.541 7.95 L 2.541 5.953 L 0 4.512 Z" fill="rgb(116,160,243)"></path><path d="M 2.541 5.49 L 5.082 4.049 L 2.541 2.938 Z" fill="rgb(203,167,245)"></path><path d="M 0 4.049 L 2.541 5.49 L 2.541 2.938 Z" fill="rgb(116,160,243)"></path><path d="M 2.541 5.49 L 0 4.049 L 2.541 0 L 5.082 4.049 Z M 2.5 2.918 L 2.5 0.217 L 0.168 3.932 Z M 2.5 5.375 L 2.5 3.005 L 0.134 4.033 Z M 2.581 3.005 L 2.581 5.375 L 4.946 4.033 Z M 2.581 2.918 L 4.913 3.932 L 2.581 0.217 Z" fill="rgb(32,38,153)"></path><path d="M 5.082 1.736 L 2.541 5.176 L 0 1.737 L 2.541 3.148 Z M 2.5 4.986 L 2.5 3.217 L 0.285 1.985 Z M 2.581 3.217 L 2.581 4.986 L 4.797 1.985 Z" fill="rgb(32,38,153)"></path></g></svg>'
											}
											withExternalLayout={true}
										>
											<SVG
												className={"framer-1e210st"}
												layoutDependency={layoutDependency}
												layoutId={"FDoBuZ0VM"}
												opacity={1}
												requiresOverflowVisible={false}
												svg={
													'<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 2.541 4.049" overflow="visible"><path d="M 0 0 L 0 2.938 L 2.541 4.049 Z" fill="rgb(143,252,243)"></path></svg>'
												}
												withExternalLayout={true}
											/>
											<SVG
												className={"framer-tzktj9"}
												layoutDependency={layoutDependency}
												layoutId={"vkyMyVTVU"}
												opacity={1}
												requiresOverflowVisible={false}
												svg={
													'<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 2.541 4.049" overflow="visible"><path d="M 2.541 0 L 0 4.049 L 2.541 2.938 Z" fill="rgb(202,188,248)"></path></svg>'
												}
												withExternalLayout={true}
											/>
											<SVG
												className={"framer-824ckd"}
												layoutDependency={layoutDependency}
												layoutId={"K5XKxitPD"}
												opacity={1}
												requiresOverflowVisible={false}
												svg={
													'<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 2.541 3.438" overflow="visible"><path d="M 0 1.441 L 0 3.438 L 2.541 0 Z" fill="rgb(203,167,245)"></path></svg>'
												}
												withExternalLayout={true}
											/>
											<SVG
												className={"framer-1lqc0ns"}
												layoutDependency={layoutDependency}
												layoutId={"ICF9okqow"}
												opacity={1}
												requiresOverflowVisible={false}
												svg={
													'<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 2.541 3.438" overflow="visible"><path d="M 2.541 3.438 L 2.541 1.441 L 0 0 Z" fill="rgb(116,160,243)"></path></svg>'
												}
												withExternalLayout={true}
											/>
											<SVG
												className={"framer-t3ybra"}
												layoutDependency={layoutDependency}
												layoutId={"hd_kaz8oF"}
												opacity={1}
												requiresOverflowVisible={false}
												svg={
													'<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 2.541 2.552" overflow="visible"><path d="M 0 2.552 L 2.541 1.111 L 0 0 Z" fill="rgb(203,167,245)"></path></svg>'
												}
												withExternalLayout={true}
											/>
											<SVG
												className={"framer-h66t90"}
												layoutDependency={layoutDependency}
												layoutId={"NFvmMScBT"}
												opacity={1}
												requiresOverflowVisible={false}
												svg={
													'<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 2.541 2.552" overflow="visible"><path d="M 0 1.111 L 2.541 2.552 L 2.541 0 Z" fill="rgb(116,160,243)"></path></svg>'
												}
												withExternalLayout={true}
											/>
											<SVG
												className={"framer-18drxj3"}
												layoutDependency={layoutDependency}
												layoutId={"WXFAkO9no"}
												opacity={1}
												requiresOverflowVisible={false}
												svg={
													'<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 5.082 5.49" overflow="visible"><path d="M 2.541 5.49 L 0 4.049 L 2.541 0 L 5.082 4.049 Z M 2.5 2.918 L 2.5 0.217 L 0.168 3.932 Z M 2.5 5.375 L 2.5 3.005 L 0.134 4.033 Z M 2.581 3.005 L 2.581 5.375 L 4.946 4.033 Z M 2.581 2.918 L 4.913 3.932 L 2.581 0.217 Z" fill="rgb(32,38,153)"></path></svg>'
												}
												withExternalLayout={true}
											>
												<SVG
													className={"framer-v9zs5v"}
													layoutDependency={layoutDependency}
													layoutId={"XDU6IEZOu"}
													opacity={1}
													requiresOverflowVisible={false}
													svg={
														'<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 5.082 5.49" overflow="visible"><path d="M 2.541 5.49 L 0 4.049 L 2.541 0 L 5.082 4.049 Z" fill="transparent"></path></svg>'
													}
													withExternalLayout={true}
												/>
												<SVG
													className={"framer-rw0xnh"}
													layoutDependency={layoutDependency}
													layoutId={"m8GOn4Rsg"}
													opacity={1}
													requiresOverflowVisible={false}
													svg={
														'<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 2.332 3.715" overflow="visible"><path d="M 0 3.715 L 2.332 0 L 2.332 2.701 Z" fill="transparent"></path></svg>'
													}
													withExternalLayout={true}
												/>
												<SVG
													className={"framer-16vynag"}
													layoutDependency={layoutDependency}
													layoutId={"yq_Xa2yMH"}
													opacity={1}
													requiresOverflowVisible={false}
													svg={
														'<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 2.366 2.369" overflow="visible"><path d="M 0 1.028 L 2.366 0 L 2.366 2.369 Z" fill="transparent"></path></svg>'
													}
													withExternalLayout={true}
												/>
												<SVG
													className={"framer-1rv1p4u"}
													layoutDependency={layoutDependency}
													layoutId={"KSSrAFion"}
													opacity={1}
													requiresOverflowVisible={false}
													svg={
														'<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 2.364 2.369" overflow="visible"><path d="M 0 0 L 0 2.369 L 2.364 1.028 Z" fill="transparent"></path></svg>'
													}
													withExternalLayout={true}
												/>
												<SVG
													className={"framer-1vdoprj"}
													layoutDependency={layoutDependency}
													layoutId={"hl20yo69a"}
													opacity={1}
													requiresOverflowVisible={false}
													svg={
														'<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 2.332 3.715" overflow="visible"><path d="M 0 2.701 L 2.332 3.715 L 0 0 Z" fill="transparent"></path></svg>'
													}
													withExternalLayout={true}
												/>
											</SVG>
											<SVG
												className={"framer-16vpnll"}
												layoutDependency={layoutDependency}
												layoutId={"UP46MVuDM"}
												opacity={1}
												requiresOverflowVisible={false}
												svg={
													'<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 5.082 3.44" overflow="visible"><path d="M 5.082 0 L 2.541 3.44 L 0 0 L 2.541 1.412 Z M 2.5 3.25 L 2.5 1.481 L 0.285 0.249 Z M 2.581 1.481 L 2.581 3.25 L 4.797 0.249 Z" fill="rgb(32,38,153)"></path></svg>'
												}
												withExternalLayout={true}
											>
												<SVG
													className={"framer-svsxk7"}
													layoutDependency={layoutDependency}
													layoutId={"mj9FPYup6"}
													opacity={1}
													requiresOverflowVisible={false}
													svg={
														'<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 5.082 3.44" overflow="visible"><path d="M 2.541 1.412 L 0 0 L 2.541 3.44 L 5.082 0 Z" fill="transparent"></path></svg>'
													}
													withExternalLayout={true}
												/>
												<SVG
													className={"framer-dhslge"}
													layoutDependency={layoutDependency}
													layoutId={"OS6xV1k8z"}
													opacity={1}
													requiresOverflowVisible={false}
													svg={
														'<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 2.215 3.002" overflow="visible"><path d="M 0 0 L 2.215 1.233 L 2.215 3.002 Z" fill="transparent"></path></svg>'
													}
													withExternalLayout={true}
												/>
												<SVG
													className={"framer-39orhx"}
													layoutDependency={layoutDependency}
													layoutId={"zBuaRpkgF"}
													opacity={1}
													requiresOverflowVisible={false}
													svg={
														'<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 2.216 3.002" overflow="visible"><path d="M 0 1.233 L 0 3.002 L 2.216 0 Z" fill="transparent"></path></svg>'
													}
													withExternalLayout={true}
												/>
											</SVG>
										</SVG>
									)}
								</Image>
							)}
						</motion.div>
						<motion.div
							className={"framer-1k4tr8e"}
							data-framer-name={"Text"}
							layoutDependency={layoutDependency}
							layoutId={"LMZ2NYMn3"}
						>
							<RichText
								__fromCanvasComponent={true}
								className={"framer-7ahoi4"}
								fonts={["Inter"]}
								layoutDependency={layoutDependency}
								layoutId={"nD9av8KcK"}
								style={{
									"--extracted-r6o4lv":
										"var(--token-4fef9130-aa55-4351-8ed5-cfba481137a7, rgb(255, 255, 255))",
									"--framer-link-text-color": "rgb(0, 153, 255)",
									"--framer-link-text-decoration": "underline",
								}}
								verticalAlignment={"top"}
								withExternalLayout={true}
								{...addPropertyOverrides(
									{
										jmq5Jj50j: {
											text: fn6UnN3Ij,
										},
										mtpRm5qTt: {
											text: fn6UnN3Ij,
										},
									},
									baseVariant,
									gestureVariant,
								)}
							>
								<React.Fragment>
									<motion.p
										className={"framer-styles-preset-ujo3da"}
										data-styles-preset={"sQrIs9_t0"}
										style={{
											"--framer-text-alignment": "left",
											"--framer-text-color":
												"var(--extracted-r6o4lv, var(--token-4fef9130-aa55-4351-8ed5-cfba481137a7, rgb(255, 255, 255)))",
										}}
									>
										{"Morpho"}
									</motion.p>
								</React.Fragment>
							</RichText>
							<RichTextWithTruncateOneLine1slf5t8
								__fromCanvasComponent={true}
								className={"framer-1slf5t8"}
								fonts={["Inter"]}
								layoutDependency={layoutDependency}
								layoutId={"hXPy4rEd9"}
								style={{
									"--extracted-r6o4lv":
										"var(--token-8acf10b0-fc55-42ff-8ac5-80a79dc47979, rgba(255, 255, 255, 0.5))",
									"--framer-link-text-color": "rgb(0, 153, 255)",
									"--framer-link-text-decoration": "underline",
								}}
								verticalAlignment={"top"}
								withExternalLayout={true}
								{...addPropertyOverrides(
									{
										jmq5Jj50j: {
											text: KbkufHqwY,
										},
										mtpRm5qTt: {
											text: KbkufHqwY,
										},
									},
									baseVariant,
									gestureVariant,
								)}
							>
								<React.Fragment>
									<motion.p
										className={"framer-styles-preset-c9mga6"}
										data-styles-preset={"Xa6VJQy2p"}
										style={{
											"--framer-text-alignment": "left",
											"--framer-text-color":
												"var(--extracted-r6o4lv, var(--token-8acf10b0-fc55-42ff-8ac5-80a79dc47979, rgba(255, 255, 255, 0.5)))",
										}}
									>
										{"0x1234...ABCD"}
									</motion.p>
								</React.Fragment>
							</RichTextWithTruncateOneLine1slf5t8>
						</motion.div>
						<ComponentViewportProvider>
							<SmartComponentScopedContainer
								className={"framer-10tcofa-container"}
								isAuthoredByUser={true}
								isModuleExternal={true}
								layoutDependency={layoutDependency}
								layoutId={"xVcWXwdFw-container"}
								nodeId={"xVcWXwdFw"}
								rendersWithMotion={true}
								scopeId={"fpircRTIc"}
							>
								<TextGlitch
									color={
										"var(--token-8acf10b0-fc55-42ff-8ac5-80a79dc47979, rgba(255, 255, 255, 0.5))"
									}
									duration={350}
									font={{
										fontFamily: '"Raveo Variable Variable", sans-serif',
										fontSize: "14px",
										fontStyle: "normal",
										fontWeight: 1e3,
										letterSpacing: "-0.01em",
										lineHeight: "1.2em",
										textAlign: "right",
									}}
									glitch={false}
									height={"100%"}
									id={"xVcWXwdFw"}
									layoutId={"xVcWXwdFw"}
									scrambleChars={
										"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+-=[]{}|;:,.<>?"
									}
									scrambleColor={
										"var(--token-8acf10b0-fc55-42ff-8ac5-80a79dc47979, rgba(255, 255, 255, 0.5))"
									}
									scramblePercent={70}
									speed={50}
									text={"Disconnect"}
									variable={{
										optical: 14,
										weight: 550,
									}}
									width={"100%"}
									{...addPropertyOverrides(
										{
											jmq5Jj50j: {
												text: yeHSisDEv,
											},
											mtpRm5qTt: {
												text: yeHSisDEv,
											},
										},
										baseVariant,
										gestureVariant,
									)}
								/>
							</SmartComponentScopedContainer>
						</ComponentViewportProvider>
					</motion.div>
				</Transition>
			</Variants>
		</LayoutGroup>
	);
});
var css3 = [
	"@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
	".framer-OUSuO.framer-1nj3bxi, .framer-OUSuO .framer-1nj3bxi { display: block; }",
	".framer-OUSuO.framer-458jvp { align-content: center; align-items: center; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 14px; height: min-content; justify-content: flex-start; overflow: visible; padding: 24px 16px 24px 16px; position: relative; width: 200px; }",
	".framer-OUSuO .framer-3q1gcj { flex: none; height: 275px; overflow: var(--overflow-clip-fallback, clip); position: relative; width: 200px; }",
	".framer-OUSuO .framer-1g7574w { align-content: center; align-items: center; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 0px; height: min-content; justify-content: center; left: 50%; overflow: var(--overflow-clip-fallback, clip); padding: 0px; position: absolute; top: 50%; width: min-content; will-change: var(--framer-will-change-override, transform); }",
	".framer-OUSuO .framer-jy3dhv { aspect-ratio: 1 / 1; flex: none; height: var(--framer-aspect-ratio-supported, 44px); overflow: visible; position: relative; width: 44px; }",
	".framer-OUSuO .framer-1cxf878 { align-content: center; align-items: center; aspect-ratio: 1 / 1; bottom: 0px; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 0px; height: var(--framer-aspect-ratio-supported, 16px); justify-content: center; overflow: var(--overflow-clip-fallback, clip); padding: 0px; position: absolute; right: 0px; width: 16px; will-change: var(--framer-will-change-override, transform); z-index: 1; }",
	".framer-OUSuO .framer-kp3ooq { height: 8px; position: relative; width: 5px; }",
	".framer-OUSuO .framer-1e210st, .framer-OUSuO .framer-1vdoprj { height: 4px; left: 3px; position: absolute; top: 0px; width: 3px; }",
	".framer-OUSuO .framer-tzktj9, .framer-OUSuO .framer-rw0xnh { height: 4px; left: 0px; position: absolute; top: 0px; width: 3px; }",
	".framer-OUSuO .framer-824ckd { height: 4px; left: 3px; position: absolute; top: 5px; width: 3px; }",
	".framer-OUSuO .framer-1lqc0ns { height: 4px; left: 0px; position: absolute; top: 5px; width: 3px; }",
	".framer-OUSuO .framer-t3ybra, .framer-OUSuO .framer-1rv1p4u { height: 3px; left: 3px; position: absolute; top: 3px; width: 3px; }",
	".framer-OUSuO .framer-h66t90, .framer-OUSuO .framer-16vynag { height: 3px; left: 0px; position: absolute; top: 3px; width: 3px; }",
	".framer-OUSuO .framer-18drxj3, .framer-OUSuO .framer-v9zs5v { height: 6px; left: 0px; position: absolute; top: 0px; width: 5px; }",
	".framer-OUSuO .framer-16vpnll { height: 4px; left: 0px; position: absolute; top: 2px; width: 5px; }",
	".framer-OUSuO .framer-svsxk7 { height: 4px; left: 0px; position: absolute; top: 0px; width: 5px; }",
	".framer-OUSuO .framer-dhslge { height: 3px; left: 1px; position: absolute; top: 0px; width: 2px; }",
	".framer-OUSuO .framer-39orhx { height: 3px; left: 3px; position: absolute; top: 0px; width: 2px; }",
	".framer-OUSuO .framer-1k4tr8e { align-content: flex-start; align-items: flex-start; display: flex; flex: 1 0 0px; flex-direction: column; flex-wrap: nowrap; gap: 0px; height: min-content; justify-content: center; overflow: hidden; padding: 0px; position: relative; width: 1px; z-index: 4; }",
	".framer-OUSuO .framer-7ahoi4 { flex: none; height: auto; position: relative; white-space: pre-wrap; width: 100%; word-break: break-word; word-wrap: break-word; }",
	".framer-OUSuO .framer-1slf5t8 { flex: none; height: auto; position: relative; white-space: pre-wrap; width: 100%; word-break: break-word; word-wrap: break-word; z-index: 1; }",
	".framer-OUSuO .framer-10tcofa-container { flex: none; height: auto; position: relative; width: auto; z-index: 1; }",
	".framer-OUSuO.framer-v-1ikqb3w.framer-458jvp, .framer-OUSuO.framer-v-7n34xb.framer-458jvp { width: 358px; }",
	".framer-OUSuO.framer-v-1ikqb3w .framer-3q1gcj, .framer-OUSuO.framer-v-7n34xb .framer-3q1gcj { height: 44px; width: 44px; }",
	...css,
	...css2,
	'.framer-OUSuO[data-border="true"]::after, .framer-OUSuO [data-border="true"]::after { content: ""; border-width: var(--border-top-width, 0) var(--border-right-width, 0) var(--border-bottom-width, 0) var(--border-left-width, 0); border-color: var(--border-color, none); border-style: var(--border-style, none); width: 100%; height: 100%; position: absolute; box-sizing: border-box; left: 0; top: 0; border-radius: inherit; pointer-events: none; }',
];
var FramerfpircRTIc = withCSS(Component, css3, "framer-OUSuO");
var stdin_default = FramerfpircRTIc;
FramerfpircRTIc.displayName = "ConnectionCard";
FramerfpircRTIc.defaultProps = {
	height: 447,
	width: 200,
};
addPropertyControls2(FramerfpircRTIc, {
	variant: {
		options: ["Oqc2QVAI3", "mtpRm5qTt", "jmq5Jj50j"],
		optionTitles: ["Desktop", "Default", "No badge"],
		title: "Variant",
		type: ControlType2.Enum,
	},
	fn6UnN3Ij: {
		defaultValue: "Morpho",
		displayTextArea: false,
		title: "title",
		type: ControlType2.String,
	},
	KbkufHqwY: {
		defaultValue: "0x1234...ABCD",
		displayTextArea: false,
		title: "subtitle",
		type: ControlType2.String,
	},
	yeHSisDEv: {
		defaultValue: "Disconnect",
		title: "rightText",
		type: ControlType2.String,
	},
	fwaipJ4Um: {
		__defaultAssetReference:
			"data:framer/asset-reference,SoCu9v5ESU2CTcSXnQHEQFG1qU.png?originalFilename=image.png&width=256&height=256",
		__vekterDefault: {
			alt: "",
			assetReference:
				"data:framer/asset-reference,SoCu9v5ESU2CTcSXnQHEQFG1qU.png?originalFilename=image.png&width=256&height=256",
		},
		title: "image",
		type: ControlType2.ResponsiveImage,
	},
	fc0WlYwEI: {
		title: "badgeImage",
		type: ControlType2.ResponsiveImage,
	},
});
var variationAxes3 = [
	{
		defaultValue: 14,
		maxValue: 32,
		minValue: 14,
		name: "Optical size",
		tag: "opsz",
	},
	{
		defaultValue: 400,
		maxValue: 900,
		minValue: 100,
		name: "Weight",
		tag: "wght",
	},
];
addFonts(
	FramerfpircRTIc,
	[
		{
			explicitInter: true,
			fonts: [
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F",
					url: "https://framerusercontent.com/assets/5vvr9Vy74if2I6bQbJvbw7SY1pQ.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116",
					url: "https://framerusercontent.com/assets/EOr0mi4hNtlgWNn9if640EZzXCo.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+1F00-1FFF",
					url: "https://framerusercontent.com/assets/Y9k9QrlZAqio88Klkmbd8VoMQc.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+0370-03FF",
					url: "https://framerusercontent.com/assets/OYrD2tBIBPvoJXiIHnLoOXnY9M.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF",
					url: "https://framerusercontent.com/assets/JeYwfuaPfZHQhEG8U5gtPDZ7WQ.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2070, U+2074-207E, U+2080-208E, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD",
					url: "https://framerusercontent.com/assets/GrgcKwrN6d3Uz8EwcLHZxwEfC4.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB",
					url: "https://framerusercontent.com/assets/b6Y37FthZeALduNqHicBT6FutY.woff2",
					weight: "400",
				},
				{
					family: "Raveo Variable",
					source: "builtIn",
					style: "normal",
					url: "https://framerusercontent.com/assets/JEdA86oNqHX1i1CLD92Q7jTxV8.woff2",
					variationAxes: variationAxes3,
					weight: "1000",
				},
			],
		},
		...TextGlitchFonts,
		...getFontsFromSharedStyle(fonts),
		...getFontsFromSharedStyle(fonts2),
	],
	{
		supportsExplicitInterCodegen: true,
	},
);

// virtual:connection-card
import { WithFramerBreakpoints } from "unframer";

// virtual:__routes
var routes = {
	Agq1L2jDe: {
		path: "/lib/careers/:slug",
	},
	DEi7PWhxw: {
		path: "/done/coming-soon",
	},
	J_r8CT7G7: {
		path: "/lib/about",
	},
	MiKvYzstd: {
		path: "/done/disconnect",
	},
	Mxb74mbpa: {
		path: "/done/verify-social",
	},
	OegBE_J9e: {
		path: "/lib/home",
	},
	SOf0RbDE_: {
		path: "/lib/blog",
	},
	TQDjkQC2A: {
		path: "/lib/contact",
	},
	UVAM5_4oX: {
		path: "/done/verify",
	},
	XanNBrFME: {
		path: "/kyc",
	},
	YBTUYW5mq: {
		path: "/lib/pricing",
	},
	a5CCfdDiy: {
		path: "/lib/updates/:slug",
	},
	augiA20Il: {
		path: "/",
	},
	cpP7I9WGp: {
		path: "/done/404",
	},
	e9YIc4Uv5: {
		path: "/lib/waitlist",
	},
	inNalAASs: {
		path: "/lib/blog/:slug",
	},
	ixIXvnG3U: {
		path: "/lib/legal/:slug",
	},
	nhNLVf3qq: {
		path: "/connections",
	},
	rX7FOhQc0: {
		path: "/lib/updates",
	},
	so5jTiDIE: {
		path: "/lib/careers",
	},
};

// virtual:connection-card
import { jsx } from "react/jsx-runtime";
var locales = [];
var defaultResponsiveVariants = {
	base: "mtpRm5qTt",
};
/** @type {function(Props): any} */
function ComponentWithRoot({ locale, ...rest }) {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"c32b11589f2bc68bdb1b6d8b6f1517c87e280d7db56dec1009246311f93861da"
			}
			locale={locale}
			locales={locales}
		>
			{jsx(stdin_default, {
				...rest,
			})}
		</ContextProviders>
	);
}
/**
 * @type {import("unframer").UnframerBreakpoint}
 * Represents a responsive breakpoint for unframer.
 */

/**
 * @typedef VariantsMap
 * Partial record of UnframerBreakpoint to Props.variant, with a mandatory 'base' key.
 * { [key in UnframerBreakpoint]?: Props['variant'] } & { base: Props['variant'] }
 */

/**
 * Renders ConnectionCardFramerComponent for all breakpoints with a variants map. Variant prop is inferred per breakpoint.
 * @function
 * @param {Omit<Props, 'variant'> & {variants?: VariantsMap}} props
 * @returns {any}
 */
ComponentWithRoot.Responsive = ({ locale = "", ...rest }) => {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"c32b11589f2bc68bdb1b6d8b6f1517c87e280d7db56dec1009246311f93861da"
			}
			locale={locale}
			locales={locales}
		>
			<WithFramerBreakpoints
				Component={stdin_default}
				variants={defaultResponsiveVariants}
				{...rest}
			/>
		</ContextProviders>
	);
};
Object.assign(ComponentWithRoot, stdin_default);
var connection_card_default = ComponentWithRoot;
export { connection_card_default as default };
